{"version":3,"file":"aabb.js","sources":["../../../../libs/base/src/math/aabb.ts"],"sourcesContent":["import {Vector3, Vector4, Matrix4x4} from './vector';\r\nimport {BoxSide, ClipState} from './clip_test';\r\nimport {Plane} from './plane';\r\nimport {Frustum} from './frustum';\r\n\r\nconst ClipLeft = 1 << BoxSide.LEFT;\r\nconst ClipRight = 1 << BoxSide.RIGHT;\r\nconst ClipBottom = 1 << BoxSide.BOTTOM;\r\nconst ClipTop = 1 << BoxSide.TOP;\r\nconst ClipNear = 1 << BoxSide.FRONT;\r\nconst ClipFar = 1 << BoxSide.BACK;\r\n\r\nexport class AABB {\r\n  /** @internal */\r\n  private _minPoint: Vector3;\r\n  /** @internal */\r\n  private _maxPoint: Vector3;\r\n  constructor();\r\n  constructor(box: AABB);\r\n  constructor(minPoint: Vector3, maxPoint: Vector3);\r\n  constructor(arg0?: Vector3 | AABB, arg1?: Vector3) {\r\n    if (arg0 instanceof AABB) {\r\n      this._minPoint = new Vector3(arg0.minPoint);\r\n      this._maxPoint = new Vector3(arg0.maxPoint);\r\n    } else if (arg0 instanceof Vector3) {\r\n      this._minPoint = new Vector3(arg0);\r\n      this._maxPoint = new Vector3(arg1);\r\n    } else {\r\n      this._minPoint = new Vector3(0, 0, 0);\r\n      this._maxPoint = new Vector3(0, 0, 0);\r\n    }\r\n  }\r\n  get minPoint() {\r\n    return this._minPoint;\r\n  }\r\n  set minPoint(p: Vector3) {\r\n    this._minPoint.assign(p.getArray());\r\n  }\r\n  get maxPoint() {\r\n    return this._maxPoint;\r\n  }\r\n  set maxPoint(p: Vector3) {\r\n    this._maxPoint.assign(p.getArray());\r\n  }\r\n  get extents() {\r\n    return Vector3.sub(this._maxPoint, this._minPoint).scaleBy(0.5);\r\n  }\r\n  get center() {\r\n    return Vector3.add(this._maxPoint, this._minPoint).scaleBy(0.5);\r\n  }\r\n  get size() {\r\n    return Vector3.sub(this._maxPoint, this._minPoint);\r\n  }\r\n  get diagonalLength() {\r\n    return Vector3.sub(this._maxPoint, this._minPoint).magnitude;\r\n  }\r\n  computePoints(): Vector3[] {\r\n    const { x: minx, y: miny, z: minz } = this._minPoint;\r\n    const { x: maxx, y: maxy, z: maxz } = this._maxPoint;\r\n    return [\r\n      new Vector3(minx, miny, minz),\r\n      new Vector3(minx, maxy, minz),\r\n      new Vector3(maxx, miny, minz),\r\n      new Vector3(maxx, maxy, minz),\r\n      new Vector3(minx, miny, maxz),\r\n      new Vector3(minx, maxy, maxz),\r\n      new Vector3(maxx, miny, maxz),\r\n      new Vector3(maxx, maxy, maxz),\r\n    ];\r\n  }\r\n  inplaceTransform(matrix: Matrix4x4) {\r\n    return AABB.transform(this, matrix, this);\r\n  }\r\n  beginExtend() {\r\n    this._minPoint.set(\r\n      Number.POSITIVE_INFINITY,\r\n      Number.POSITIVE_INFINITY,\r\n      Number.POSITIVE_INFINITY,\r\n    );\r\n    this._maxPoint.set(\r\n      Number.NEGATIVE_INFINITY,\r\n      Number.NEGATIVE_INFINITY,\r\n      Number.NEGATIVE_INFINITY,\r\n    );\r\n  }\r\n  extend(v: Vector3|Vector4) {\r\n    this._minPoint.inplaceMin(v);\r\n    this._maxPoint.inplaceMax(v);\r\n  }\r\n  extend3(x: number, y: number, z: number) {\r\n    if (x < this._minPoint.x) this._minPoint.x = x;\r\n    if (x > this._maxPoint.x) this._maxPoint.x = x;\r\n    if (y < this._minPoint.y) this._minPoint.y = y;\r\n    if (y > this._maxPoint.y) this._maxPoint.y = y;\r\n    if (z < this._minPoint.z) this._minPoint.z = z;\r\n    if (z > this._maxPoint.z) this._maxPoint.z = z;\r\n  }\r\n  union(other: AABB) {\r\n    if (other && other.isValid()) {\r\n      this.extend(other._minPoint);\r\n      this.extend(other._maxPoint);\r\n    }\r\n    return this;\r\n  }\r\n  isValid() {\r\n    return (\r\n      this._minPoint.x <= this._maxPoint.x &&\r\n      this._minPoint.y <= this._maxPoint.y &&\r\n      this._minPoint.z <= this._maxPoint.z\r\n    );\r\n  }\r\n  equalsTo(other: AABB, epsl?: number) {\r\n    return (\r\n      this._minPoint.equalsTo(other._minPoint, epsl) &&\r\n      this._maxPoint.equalsTo(other._maxPoint, epsl)\r\n    );\r\n  }\r\n  intersectedWithBox(other: AABB): boolean {\r\n    return !(\r\n      this._maxPoint.x <= other._minPoint.x ||\r\n      this._minPoint.x >= other._maxPoint.x ||\r\n      this._maxPoint.y <= other._minPoint.y ||\r\n      this._minPoint.y >= other._maxPoint.y ||\r\n      this._maxPoint.z <= other._minPoint.z ||\r\n      this._minPoint.z >= other._maxPoint.z\r\n    );\r\n  }\r\n  containsPoint(pt: Vector3): boolean {\r\n    return (\r\n      this._minPoint.x <= pt.x &&\r\n      this._maxPoint.x >= pt.x &&\r\n      this._minPoint.y <= pt.y &&\r\n      this._maxPoint.y >= pt.y &&\r\n      this._minPoint.z <= pt.z &&\r\n      this._maxPoint.z >= pt.z\r\n    );\r\n  }\r\n  containsBox(other: AABB): boolean {\r\n    return (\r\n      this._minPoint.x <= other._minPoint.x &&\r\n      this._maxPoint.x >= other._maxPoint.x &&\r\n      this._minPoint.y <= other._minPoint.y &&\r\n      this._maxPoint.y >= other._maxPoint.y &&\r\n      this._minPoint.z <= other._minPoint.z &&\r\n      this._maxPoint.z >= other._maxPoint.z\r\n    );\r\n  }\r\n  getClipStateMask(viewProjMatrix: Matrix4x4, mask: number): ClipState {\r\n    let andFlags = 0xffff;\r\n    let orFlags = 0;\r\n    const v0 = new Vector3();\r\n    const v1 = new Vector4();\r\n    const clipLeft = mask & ClipLeft;\r\n    const clipRight = mask & ClipRight;\r\n    const clipTop = mask & ClipTop;\r\n    const clipBottom = mask & ClipBottom;\r\n    const clipNear = mask & ClipNear;\r\n    const clipFar = mask & ClipFar;\r\n    const minPoint = this._minPoint;\r\n    const maxPoint = this._maxPoint;\r\n    for (let i = 0; i < 8; i++) {\r\n      let clip = 0;\r\n      v0.set(\r\n        i & 1 ? minPoint.x : maxPoint.x,\r\n        i & 2 ? minPoint.y : maxPoint.y,\r\n        i & 3 ? minPoint.z : maxPoint.z,\r\n      );\r\n      viewProjMatrix.transformPoint(v0, v1);\r\n      if (clipLeft && v1.x < -v1.w) {\r\n        clip |= ClipLeft;\r\n      } else if (clipRight && v1.x > v1.w) {\r\n        clip |= ClipRight;\r\n      }\r\n      if (clipBottom && v1.y < -v1.w) {\r\n        clip |= ClipBottom;\r\n      } else if (clipTop && v1.y > v1.w) {\r\n        clip |= ClipTop;\r\n      }\r\n      if (clipFar && v1.z < -v1.w) {\r\n        clip |= ClipFar;\r\n      } else if (clipNear && v1.z > v1.w) {\r\n        clip |= ClipNear;\r\n      }\r\n      andFlags &= clip;\r\n      orFlags |= clip;\r\n    }\r\n    if (orFlags === 0) {\r\n      return ClipState.A_INSIDE_B;\r\n    } else if (andFlags !== 0) {\r\n      return ClipState.NOT_CLIPPED;\r\n    } else {\r\n      return ClipState.CLIPPED;\r\n    }\r\n  }\r\n  getClipState(viewProjMatrix: Matrix4x4): ClipState {\r\n    let andFlags = 0xffff;\r\n    let orFlags = 0;\r\n    const v0 = new Vector3();\r\n    const v1 = new Vector4();\r\n    const minPoint = this._minPoint;\r\n    const maxPoint = this._maxPoint;\r\n    for (let i = 0; i < 8; i++) {\r\n      let clip = 0;\r\n      v0.set(\r\n        i & 1 ? minPoint.x : maxPoint.x,\r\n        i & 2 ? minPoint.y : maxPoint.y,\r\n        i & 3 ? minPoint.z : maxPoint.z,\r\n      );\r\n      viewProjMatrix.transformPoint(v0, v1);\r\n      if (v1.x < -v1.w) {\r\n        clip |= ClipLeft;\r\n      } else if (v1.x > v1.w) {\r\n        clip |= ClipRight;\r\n      }\r\n      if (v1.y < -v1.w) {\r\n        clip |= ClipBottom;\r\n      } else if (v1.y > v1.w) {\r\n        clip |= ClipTop;\r\n      }\r\n      if (v1.z < -v1.w) {\r\n        clip |= ClipFar;\r\n      } else if (v1.z > v1.w) {\r\n        clip |= ClipNear;\r\n      }\r\n      andFlags &= clip;\r\n      orFlags |= clip;\r\n    }\r\n    if (orFlags === 0) {\r\n      return ClipState.A_INSIDE_B;\r\n    } else if (andFlags !== 0) {\r\n      return ClipState.NOT_CLIPPED;\r\n    } else {\r\n      return ClipState.CLIPPED;\r\n    }\r\n  }\r\n  behindPlane(p: Plane): boolean {\r\n    const cx = (this._maxPoint.x + this._minPoint.x) * 0.5;\r\n    const cy = (this._maxPoint.y + this._minPoint.y) * 0.5;\r\n    const cz = (this._maxPoint.z + this._minPoint.z) * 0.5;\r\n    const ex = this._maxPoint.x - cx;\r\n    const ey = this._maxPoint.y - cy;\r\n    const ez = this._maxPoint.z - cz;\r\n    return p.a * (cx + p.px * ex) + p.b * (cy + p.py * ey) + p.c * (cz + p.pz * ez) + p.d < 0;\r\n  }\r\n  getClipStateWithFrustum(frustum: Frustum): ClipState {\r\n    let badIntersect = false;\r\n    const cx = (this._maxPoint.x + this._minPoint.x) * 0.5;\r\n    const cy = (this._maxPoint.y + this._minPoint.y) * 0.5;\r\n    const cz = (this._maxPoint.z + this._minPoint.z) * 0.5;\r\n    const ex = this._maxPoint.x - cx;\r\n    const ey = this._maxPoint.y - cy;\r\n    const ez = this._maxPoint.z - cz;\r\n    for (let i = 0; i < 6; i++) {\r\n      const p = frustum.planes[i];\r\n      if (p.a * (cx + p.px * ex) + p.b * (cy + p.py * ey) + p.c * (cz + p.pz * ez) + p.d < 0) {\r\n        return ClipState.NOT_CLIPPED;\r\n      }\r\n      if (p.a * (cx + p.nx * ex) + p.b * (cy + p.ny * ey) + p.c * (cz + p.nz * ez) + p.d < 0) {\r\n        badIntersect = true;\r\n      }\r\n    }\r\n    return badIntersect ? ClipState.CLIPPED : ClipState.A_INSIDE_B;\r\n  }\r\n  getClipStateWithFrustumMask(frustum: Frustum, mask: number): ClipState {\r\n    let badIntersect = false;\r\n    const cx = (this._maxPoint.x + this._minPoint.x) * 0.5;\r\n    const cy = (this._maxPoint.y + this._minPoint.y) * 0.5;\r\n    const cz = (this._maxPoint.z + this._minPoint.z) * 0.5;\r\n    const ex = this._maxPoint.x - cx;\r\n    const ey = this._maxPoint.y - cy;\r\n    const ez = this._maxPoint.z - cz;\r\n    for (let i = 0; i < 6; i++) {\r\n      if (mask & (1 << i)) {\r\n        const p = frustum.planes[i];\r\n        if (p.a * (cx + p.px * ex) + p.b * (cy + p.py * ey) + p.c * (cz + p.pz * ez) + p.d < 0) {\r\n          return ClipState.NOT_CLIPPED;\r\n        }\r\n        if (p.a * (cx + p.nx * ex) + p.b * (cy + p.ny * ey) + p.c * (cz + p.nz * ez) + p.d < 0) {\r\n          badIntersect = true;\r\n        }\r\n      }\r\n    }\r\n    return badIntersect ? ClipState.CLIPPED : ClipState.A_INSIDE_B;\r\n  }\r\n  static transform(bbox: AABB, matrix: Matrix4x4, result?: AABB): AABB {\r\n    const ret = result || new AABB();\r\n    const minp = [0, 0, 0];\r\n    const maxp = [0, 0, 0];\r\n    const m = matrix.getArray();\r\n    const v1 = bbox.minPoint.getArray();\r\n    const v2 = bbox.maxPoint.getArray();\r\n    let r: number;\r\n    for (let col = 0; col < 3; ++col) {\r\n      r = col;\r\n      minp[col] = maxp[col] = m[12 + col];\r\n      for (let row = 0; row < 3; ++row) {\r\n        const e = m[r] * v1[row];\r\n        const f = m[r] * v2[row];\r\n        if (e < f) {\r\n          minp[col] += e;\r\n          maxp[col] += f;\r\n        } else {\r\n          minp[col] += f;\r\n          maxp[col] += e;\r\n        }\r\n        r += 4;\r\n      }\r\n    }\r\n    ret.minPoint.assign(minp);\r\n    ret.maxPoint.assign(maxp);\r\n    return ret;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}