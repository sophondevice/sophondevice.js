{"version":3,"file":"vector.js","sources":["../../../../libs/base/src/math/vector.ts"],"sourcesContent":["/**\n *  Math type definitions\n */\n\nimport { formatNumber, numberEquals, numberClamp } from './misc';\n\nexport class IterableWrapper implements Iterable<number> {\n  protected _v: Float32Array;\n  [Symbol.iterator](): Iterator<number> {\n    return this._v[Symbol.iterator]();\n  }\n  constructor(nOrArray: number | Float32Array) {\n    if (typeof nOrArray === 'number') {\n      this._v = new Float32Array(nOrArray);\n    } else {\n      this._v = nOrArray;\n    }\n  }\n  get size() {\n    return this._v.length;\n  }\n  assign(other: ArrayLike<number>) {\n    this._v.set((other as any)._v || other);\n    return this;\n  }\n  getArray(): Float32Array {\n    return this._v;\n  }\n  setArray(arr: Float32Array): this {\n    if (!arr || arr.length !== this._v.length) {\n      throw new Error(`IterableWrapper.setArray() failed: invalid array or array length: ${arr?.length}`);\n    }\n    this._v = arr;\n    return this;\n  }\n}\n\nexport enum CubeFace {\n  PX = 0,\n  NX = 1,\n  PY = 2,\n  NY = 3,\n  PZ = 4,\n  NZ = 5,\n}\n\nexport class VectorBase extends IterableWrapper {\n  /** @internal */\n  protected _doCallback: boolean;\n  /** @internal */\n  protected _changeCallback: () => void;\n  constructor(nOrArray: number | Float32Array) {\n    super(nOrArray);\n    this._doCallback = true;\n    this._changeCallback = null;\n  }\n  getChangeCallback(): () => void {\n    return this._changeCallback;\n  }\n  setChangeCallback(callback: () => void) {\n    this._changeCallback = callback;\n  }\n  get callbackEnabled() {\n    return this._doCallback;\n  }\n  set callbackEnabled(enabled: boolean) {\n    this._doCallback = enabled;\n  }\n  changeNotify() {\n    this._doCallback && this._changeCallback?.();\n  }\n  equalsTo(other: IterableWrapper, epsilon?: number): boolean {\n    if (!other || this.size !== other.size) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    const thisData = this.getArray();\n    const otherData = other.getArray();\n    for (let i = 0; i < this.size; i++) {\n      if (!numberEquals(thisData[i], otherData[i], epsilon)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  toString(): string {\n    const elements = Array(this.size);\n    const data = this.getArray();\n    for (let i = 0; i < this.size; i++) {\n      elements[i] = formatNumber(data[i], 3);\n    }\n    return `${this.constructor.name}{${elements.join(', ')}}`;\n  }\n  assign(other: ArrayLike<number>) {\n    this._v.set((other as any)._v || other);\n    this.changeNotify();\n    return this;\n  }\n  isNaN(): boolean {\n    const data = this.getArray();\n    for (let i = 0; i < this.size; i++) {\n      if (Number.isNaN(data[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport interface IVector2Like {\n  x: number;\n  y: number;\n}\nexport class Vector2 extends VectorBase {\n  constructor(x: number, y: number);\n  constructor(array: number[]);\n  constructor(rhs: Vector2);\n  constructor(array: Float32Array);\n  constructor();\n  constructor(xOrOther?: number | number[] | Vector2 | Float32Array, y?: number) {\n    super(xOrOther instanceof Float32Array ? xOrOther : 2);\n    if (xOrOther !== undefined && !(xOrOther instanceof Float32Array)) {\n      if (typeof xOrOther === 'number') {\n        this._v[0] = Number(xOrOther);\n        this._v[1] = Number(y);\n      } else if (xOrOther instanceof Vector2) {\n        this.assign(xOrOther.getArray());\n      } else {\n        this.assign(xOrOther);\n      }\n    }\n  }\n  clone(): Vector2 {\n    return new Vector2(this);\n  }\n  get x() {\n    return this._v[0];\n  }\n  set x(v: number) {\n    this.setX(v);\n  }\n  setX(v: number) {\n    this._v[0] = v;\n    this.changeNotify();\n    return this;\n  }\n  get y() {\n    return this._v[1];\n  }\n  set y(v: number) {\n    this.setY(v);\n  }\n  setY(v: number) {\n    this._v[1] = v;\n    this.changeNotify();\n    return this;\n  }\n  get magnitude() {\n    return Vector2.magnitude(this);\n  }\n  set magnitude(val: number) {\n    this.setMagnitude(val);\n  }\n  setMagnitude(val: number) {\n    this.scaleBy(val / this.magnitude);\n    return this;\n  }\n  get magnitudeSq() {\n    return Vector2.magnitudeSq(this);\n  }\n  set(x: number, y: number) {\n    this._v[0] = x;\n    this._v[1] = y;\n    this.changeNotify();\n    return this;\n  }\n  setAndNormalize(x: number, y: number) {\n    this._v[0] = x;\n    this._v[1] = y;\n    return this.inplaceNormalize();\n  }\n  subBy(other: IVector2Like) {\n    return Vector2.sub(this, other, this);\n  }\n  addBy(other: IVector2Like) {\n    return Vector2.add(this, other, this);\n  }\n  mulBy(other: IVector2Like) {\n    return Vector2.mul(this, other, this);\n  }\n  divBy(other: IVector2Like) {\n    return Vector2.div(this, other, this);\n  }\n  scaleBy(f: number) {\n    return Vector2.scale(this, f, this);\n  }\n  inplaceNormalize() {\n    return Vector2.normalize(this, this);\n  }\n  inplaceInverse() {\n    return Vector2.inverse(this, this);\n  }\n  inplaceMin(other: IVector2Like) {\n    return Vector2.min(this, other, this);\n  }\n  inplaceMax(other: IVector2Like) {\n    return Vector2.max(this, other, this);\n  }\n  inplaceAbs() {\n    return Vector2.abs(this, this);\n  }\n  static zero(): Vector2 {\n    return new Vector2(0, 0);\n  }\n  static one(): Vector2 {\n    return new Vector2(1, 1);\n  }\n  static axisPX(): Vector2 {\n    return new Vector2(1, 0);\n  }\n  static axisNX(): Vector2 {\n    return new Vector2(-1, 0);\n  }\n  static axisPY(): Vector2 {\n    return new Vector2(0, 1);\n  }\n  static axisNY(): Vector2 {\n    return new Vector2(0, -1);\n  }\n  static magnitudeSq(v: IVector2Like): number {\n    return v.x * v.x + v.y * v.y;\n  }\n  static magnitude(v: IVector2Like): number {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n  }\n  static distance(v1: IVector2Like, v2: IVector2Like): number {\n    return Math.sqrt(this.distanceSq(v1, v2));\n  }\n  static distanceSq(v1: IVector2Like, v2: IVector2Like): number {\n    const dx = v1.x - v2.x;\n    const dy = v1.y - v2.y;\n    return dx * dx + dy * dy;\n  }\n  static normalize(v: IVector2Like, result?: Vector2): Vector2 {\n    const len = Vector2.magnitude(v);\n    const x = v.x / len;\n    const y = v.y / len;\n    return (result || new Vector2()).set(x, y);\n  }\n  static inverse(v: IVector2Like, result?: Vector2): Vector2 {\n    const x = 1 / v.x;\n    const y = 1 / v.y;\n    return (result || new Vector2()).set(x, y);\n  }\n  static sub(a: IVector2Like, b: IVector2Like, result?: Vector2): Vector2 {\n    const x = a.x - b.x;\n    const y = a.y - b.y;\n    return (result || new Vector2()).set(x, y);\n  }\n  static add(a: IVector2Like, b: IVector2Like, result?: Vector2): Vector2 {\n    const x = a.x + b.x;\n    const y = a.y + b.y;\n    return (result || new Vector2()).set(x, y);\n  }\n  static mul(a: IVector2Like, b: IVector2Like, result?: Vector2): Vector2 {\n    const x = a.x * b.x;\n    const y = a.y * b.y;\n    return (result || new Vector2()).set(x, y);\n  }\n  static div(a: IVector2Like, b: IVector2Like, result?: Vector2): Vector2 {\n    const x = a.x / b.x;\n    const y = a.y / b.y;\n    return (result || new Vector2()).set(x, y);\n  }\n  static scale(a: IVector2Like, b: number, result?: Vector2): Vector2 {\n    const x = a.x * b;\n    const y = a.y * b;\n    return (result || new Vector2()).set(x, y);\n  }\n  static min(a: IVector2Like, b: IVector2Like, result?: Vector2): Vector2 {\n    const x = a.x < b.x ? a.x : b.x;\n    const y = a.y < b.y ? a.y : b.y;\n    return (result || new Vector2()).set(x, y);\n  }\n  static max(a: IVector2Like, b: IVector2Like, result?: Vector2): Vector2 {\n    const x = a.x > b.x ? a.x : b.x;\n    const y = a.y > b.y ? a.y : b.y;\n    return (result || new Vector2()).set(x, y);\n  }\n  static abs(a: IVector2Like, result?: Vector2): Vector2 {\n    const x = a.x < 0 ? -a.x : a.x;\n    const y = a.y < 0 ? -a.y : a.y;\n    return (result || new Vector2()).set(x, y);\n  }\n  static dot(a: IVector2Like, b: IVector2Like): number {\n    return a.x * b.x + a.y * b.y;\n  }\n  static cross(a: IVector2Like, b: IVector2Like): number {\n    return a.x * b.y - a.y * b.x;\n  }\n}\nexport interface IVector3Like {\n  x: number;\n  y: number;\n  z: number;\n}\nexport class Vector3 extends VectorBase {\n  constructor(x: number, y: number, z: number);\n  constructor(array: number[]);\n  constructor(rhs: Vector3)\n  constructor(array: Float32Array)\n  constructor();\n  constructor(xOrOther?: number | number[] | Vector3 | Float32Array, y?: number, z?: number) {\n    super(xOrOther instanceof Float32Array ? xOrOther : 3);\n    if (xOrOther !== undefined && !(xOrOther instanceof Float32Array)) {\n      if (typeof xOrOther === 'number') {\n        this._v[0] = Number(xOrOther);\n        this._v[1] = Number(y);\n        this._v[2] = Number(z);\n      } else if (xOrOther instanceof Vector3) {\n        this.assign(xOrOther.getArray());\n      } else {\n        this.assign(xOrOther);\n      }\n    }\n  }\n  clone(): Vector3 {\n    return new Vector3(this);\n  }\n  get x() {\n    return this._v[0];\n  }\n  set x(v: number) {\n    this.setX(v);\n  }\n  setX(v: number) {\n    this._v[0] = v;\n    this.changeNotify();\n    return this;\n  }\n  get y() {\n    return this._v[1];\n  }\n  set y(v: number) {\n    this.setY(v);\n  }\n  setY(v: number) {\n    this._v[1] = v;\n    this.changeNotify();\n    return this;\n  }\n  get z() {\n    return this._v[2];\n  }\n  set z(v: number) {\n    this.setZ(v);\n  }\n  setZ(v: number) {\n    this._v[2] = v;\n    this.changeNotify();\n    return this;\n  }\n  get magnitude(): number {\n    return Vector3.magnitude(this);\n  }\n  set magnitude(val: number) {\n    this.setMagnitude(val);\n  }\n  setMagnitude(val: number) {\n    return this.scaleBy(val / this.magnitude);\n  }\n  get magnitudeSq(): number {\n    return Vector3.magnitudeSq(this);\n  }\n  xy(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n  set(x: number, y: number, z: number): Vector3 {\n    this._v[0] = x;\n    this._v[1] = y;\n    this._v[2] = z;\n    this.changeNotify();\n    return this;\n  }\n  setAndNormalize(x: number, y: number, z: number): Vector3 {\n    this._v[0] = x;\n    this._v[1] = y;\n    this._v[2] = z;\n    return this.inplaceNormalize();\n  }\n  subBy(other: IVector3Like): Vector3 {\n    return Vector3.sub(this, other, this);\n  }\n  addBy(other: IVector3Like): Vector3 {\n    return Vector3.add(this, other, this);\n  }\n  mulBy(other: IVector3Like): Vector3 {\n    return Vector3.mul(this, other, this);\n  }\n  divBy(other: IVector3Like): Vector3 {\n    return Vector3.div(this, other, this);\n  }\n  scaleBy(f: number): Vector3 {\n    return Vector3.scale(this, f, this);\n  }\n  crossBy(other: IVector3Like): Vector3 {\n    return Vector3.cross(this, other, this);\n  }\n  inplaceNormalize() {\n    return Vector3.normalize(this, this);\n  }\n  inplaceInverse() {\n    return Vector3.inverse(this, this);\n  }\n  inplaceMin(other: IVector3Like) {\n    return Vector3.min(this, other, this);\n  }\n  inplaceMax(other: IVector3Like) {\n    return Vector3.max(this, other, this);\n  }\n  inplaceAbs() {\n    return Vector3.abs(this, this);\n  }\n  static zero(): Vector3 {\n    return new Vector3(0, 0, 0);\n  }\n  static one(): Vector3 {\n    return new Vector3(1, 1, 1);\n  }\n  static axisPX(): Vector3 {\n    return new Vector3(1, 0, 0);\n  }\n  static axisNX(): Vector3 {\n    return new Vector3(-1, 0, 0);\n  }\n  static axisPY(): Vector3 {\n    return new Vector3(0, 1, 0);\n  }\n  static axisNY(): Vector3 {\n    return new Vector3(0, -1, 0);\n  }\n  static axisPZ(): Vector3 {\n    return new Vector3(0, 0, 1);\n  }\n  static axisNZ(): Vector3 {\n    return new Vector3(0, 0, -1);\n  }\n  static magnitude(v: IVector3Like): number {\n    return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\n  }\n  static magnitudeSq(v: IVector3Like): number {\n    return v.x * v.x + v.y * v.y + v.z * v.z;\n  }\n  static distance(v1: IVector3Like, v2: IVector3Like): number {\n    return Math.sqrt(this.distanceSq(v1, v2));\n  }\n  static distanceSq(v1: IVector3Like, v2: IVector3Like): number {\n    const dx = v1.x - v2.x;\n    const dy = v1.y - v2.y;\n    const dz = v1.z - v2.z;\n    return dx * dx + dy * dy + dz * dz;\n  }\n  static normalize(v: IVector3Like, result?: Vector3): Vector3 {\n    const len = Vector3.magnitude(v);\n    const x = v.x / len;\n    const y = v.y / len;\n    const z = v.z / len;\n    return (result || new Vector3()).set(x, y, z);\n  }\n  static inverse(v: IVector3Like, result?: Vector3): Vector3 {\n    const x = 1 / v.x;\n    const y = 1 / v.y;\n    const z = 1 / v.z;\n    return (result || new Vector3()).set(x, y, z);\n  }\n  static sub(a: IVector3Like, b: IVector3Like, result?: Vector3): Vector3 {\n    const x = a.x - b.x;\n    const y = a.y - b.y;\n    const z = a.z - b.z;\n    return (result || new Vector3()).set(x, y, z);\n  }\n  static add(a: IVector3Like, b: IVector3Like, result?: Vector3): Vector3 {\n    const x = a.x + b.x;\n    const y = a.y + b.y;\n    const z = a.z + b.z;\n    return (result || new Vector3()).set(x, y, z);\n  }\n  static mul(a: IVector3Like, b: IVector3Like, result?: Vector3): Vector3 {\n    const x = a.x * b.x;\n    const y = a.y * b.y;\n    const z = a.z * b.z;\n    return (result || new Vector3()).set(x, y, z);\n  }\n  static div(a: IVector3Like, b: IVector3Like, result?: Vector3): Vector3 {\n    const x = a.x / b.x;\n    const y = a.y / b.y;\n    const z = a.z / b.z;\n    return (result || new Vector3()).set(x, y, z);\n  }\n  static scale(a: IVector3Like, b: number, result?: Vector3): Vector3 {\n    const x = a.x * b;\n    const y = a.y * b;\n    const z = a.z * b;\n    return (result || new Vector3()).set(x, y, z);\n  }\n  static min(a: IVector3Like, b: IVector3Like, result?: Vector3): Vector3 {\n    const x = a.x < b.x ? a.x : b.x;\n    const y = a.y < b.y ? a.y : b.y;\n    const z = a.z < b.z ? a.z : b.z;\n    return (result || new Vector3()).set(x, y, z);\n  }\n  static max(a: IVector3Like, b: IVector3Like, result?: Vector3): Vector3 {\n    const x = a.x > b.x ? a.x : b.x;\n    const y = a.y > b.y ? a.y : b.y;\n    const z = a.z > b.z ? a.z : b.z;\n    return (result || new Vector3()).set(x, y, z);\n  }\n  static abs(a: IVector3Like, result?: Vector3): Vector3 {\n    const x = a.x < 0 ? -a.x : a.x;\n    const y = a.y < 0 ? -a.y : a.y;\n    const z = a.z < 0 ? -a.z : a.z;\n    return (result || new Vector3()).set(x, y, z);\n  }\n  static dot(a: IVector3Like, b: IVector3Like): number {\n    return a.x * b.x + a.y * b.y + a.z * b.z;\n  }\n  static cross(a: IVector3Like, b: IVector3Like, result?: Vector3): Vector3 {\n    const x = a.y * b.z - a.z * b.y;\n    const y = a.z * b.x - a.x * b.z;\n    const z = a.x * b.y - a.y * b.x;\n    return (result || new Vector3()).set(x, y, z);\n  }\n}\nexport interface IVector4Like {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n}\nexport class Vector4 extends VectorBase {\n  constructor(x: number, y: number, z: number, w: number);\n  constructor(array: number[]);\n  constructor(array: Float32Array);\n  constructor(rhs: Vector4);\n  constructor(v3: Vector3, w: number);\n  constructor();\n  constructor(xOrOther?: number | number[] | Vector3 | Vector4 | Float32Array, y?: number, z?: number, w?: number) {\n    super(xOrOther instanceof Float32Array ? xOrOther : 4);\n    if (xOrOther !== undefined && !(xOrOther instanceof Float32Array)) {\n      if (typeof xOrOther === 'number') {\n        this._v[0] = Number(xOrOther);\n        this._v[1] = Number(y);\n        this._v[2] = Number(z);\n        this._v[3] = Number(w);\n      } else if (xOrOther instanceof Vector3) {\n        this._v[0] = Number(xOrOther.x);\n        this._v[1] = Number(xOrOther.y);\n        this._v[2] = Number(xOrOther.z);\n        this._v[3] = Number(y);\n      } else if (xOrOther instanceof Vector4) {\n        this.assign(xOrOther.getArray());\n      } else {\n        this.assign(xOrOther);\n      }\n    }\n  }\n  clone(): Vector4 {\n    return new Vector4(this);\n  }\n  get x() {\n    return this._v[0];\n  }\n  set x(v: number) {\n    this.setX(v);\n  }\n  setX(v: number) {\n    this._v[0] = v;\n    this.changeNotify();\n    return this;\n  }\n  get y() {\n    return this._v[1];\n  }\n  set y(v: number) {\n    this.setY(v);\n  }\n  setY(v: number) {\n    this._v[1] = v;\n    this.changeNotify();\n    return this;\n  }\n  get z() {\n    return this._v[2];\n  }\n  set z(v: number) {\n    this.setZ(v);\n  }\n  setZ(v: number) {\n    this._v[2] = v;\n    this.changeNotify();\n    return this;\n  }\n  get w() {\n    return this._v[3];\n  }\n  set w(v: number) {\n    this.setW(v);\n  }\n  setW(v: number) {\n    this._v[3] = v;\n    this.changeNotify();\n    return this;\n  }\n  get magnitude(): number {\n    return Vector4.magnitude(this);\n  }\n  set magnitude(val: number) {\n    this.setMagnitude(val);\n  }\n  setMagnitude(val: number) {\n    return this.scaleBy(val / this.magnitude);\n  }\n  get magnitudeSq(): number {\n    return Vector4.magnitudeSq(this);\n  }\n  xy(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n  xyz(): Vector3 {\n    return new Vector3(this.x, this.y, this.z);\n  }\n  set(x: number, y: number, z: number, w: number): Vector4 {\n    this._v[0] = x;\n    this._v[1] = y;\n    this._v[2] = z;\n    this._v[3] = w;\n    this.changeNotify();\n    return this;\n  }\n  setAndNormalize(x: number, y: number, z: number, w: number): Vector4 {\n    this._v[0] = x;\n    this._v[1] = y;\n    this._v[2] = z;\n    this._v[3] = w;\n    return this.inplaceNormalize();\n  }\n  subBy(other: IVector4Like): Vector4 {\n    return Vector4.sub(this, other, this);\n  }\n  addBy(other: IVector4Like): Vector4 {\n    return Vector4.add(this, other, this);\n  }\n  mulBy(other: IVector4Like): Vector4 {\n    return Vector4.mul(this, other, this);\n  }\n  divBy(other: IVector4Like): Vector4 {\n    return Vector4.div(this, other, this);\n  }\n  scaleBy(f: number): Vector4 {\n    return Vector4.scale(this, f, this);\n  }\n  inplaceNormalize(): Vector4 {\n    return Vector4.normalize(this, this);\n  }\n  inplaceInverse(): Vector4 {\n    return Vector4.inverse(this, this);\n  }\n  inplaceMin(other: IVector4Like) {\n    return Vector4.min(this, other, this);\n  }\n  inplaceMax(other: IVector4Like) {\n    return Vector4.max(this, other, this);\n  }\n  inplaceAbs() {\n    return Vector4.abs(this, this);\n  }\n  static zero(): Vector4 {\n    return new Vector4(0, 0, 0, 0);\n  }\n  static one(): Vector4 {\n    return new Vector4(1, 1, 1, 1);\n  }\n  static axisPX(): Vector4 {\n    return new Vector4(1, 0, 0, 0);\n  }\n  static axisNX(): Vector4 {\n    return new Vector4(-1, 0, 0, 0);\n  }\n  static axisPY(): Vector4 {\n    return new Vector4(0, 1, 0, 0);\n  }\n  static axisNY(): Vector4 {\n    return new Vector4(0, -1, 0, 0);\n  }\n  static axisPZ(): Vector4 {\n    return new Vector4(0, 0, 1, 0);\n  }\n  static axisNZ(): Vector4 {\n    return new Vector4(0, 0, -1, 0);\n  }\n  static axisPW(): Vector4 {\n    return new Vector4(0, 0, 0, 1);\n  }\n  static axisNW(): Vector4 {\n    return new Vector4(0, 0, 0, -1);\n  }\n  static magnitude(v: IVector4Like): number {\n    return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z + v.w * v.w);\n  }\n  static magnitudeSq(v: IVector4Like): number {\n    return v.x * v.x + v.y * v.y + v.z * v.z + v.w * v.w;\n  }\n  static normalize(v: IVector4Like, result?: Vector4): Vector4 {\n    const len = Vector4.magnitude(v);\n    const x = v.x / len;\n    const y = v.y / len;\n    const z = v.z / len;\n    const w = v.w / len;\n    return (result || new Vector4()).set(x, y, z, w);\n  }\n  static inverse(v: IVector4Like, result?: Vector4): Vector4 {\n    const x = 1 / v.x;\n    const y = 1 / v.y;\n    const z = 1 / v.z;\n    const w = 1 / v.w;\n    return (result || new Vector4()).set(x, y, z, w);\n  }\n  static sub(a: IVector4Like, b: IVector4Like, result?: Vector4): Vector4 {\n    const x = a.x - b.x;\n    const y = a.y - b.y;\n    const z = a.z - b.z;\n    const w = a.w - b.w;\n    return (result || new Vector4()).set(x, y, z, w);\n  }\n  static add(a: IVector4Like, b: IVector4Like, result?: Vector4): Vector4 {\n    const x = a.x + b.x;\n    const y = a.y + b.y;\n    const z = a.z + b.z;\n    const w = a.w + b.w;\n    return (result || new Vector4()).set(x, y, z, w);\n  }\n  static mul(a: IVector4Like, b: IVector4Like, result?: Vector4): Vector4 {\n    const x = a.x * b.x;\n    const y = a.y * b.y;\n    const z = a.z * b.z;\n    const w = a.w * b.w;\n    return (result || new Vector4()).set(x, y, z, w);\n  }\n  static div(a: IVector4Like, b: IVector4Like, result?: Vector4): Vector4 {\n    const x = a.x / b.x;\n    const y = a.y / b.y;\n    const z = a.z / b.z;\n    const w = a.w / b.w;\n    return (result || new Vector4()).set(x, y, z, w);\n  }\n  static scale(a: IVector4Like, b: number, result?: Vector4): Vector4 {\n    const x = a.x * b;\n    const y = a.y * b;\n    const z = a.z * b;\n    const w = a.w * b;\n    return (result || new Vector4()).set(x, y, z, w);\n  }\n  static min(a: IVector4Like, b: IVector4Like, result?: Vector4): Vector4 {\n    const x = a.x < b.x ? a.x : b.x;\n    const y = a.y < b.y ? a.y : b.y;\n    const z = a.z < b.z ? a.z : b.z;\n    const w = a.w < b.w ? a.w : b.w;\n    return (result || new Vector4()).set(x, y, z, w);\n  }\n  static max(a: IVector4Like, b: IVector4Like, result?: Vector4): Vector4 {\n    const x = a.x > b.x ? a.x : b.x;\n    const y = a.y > b.y ? a.y : b.y;\n    const z = a.z > b.z ? a.z : b.z;\n    const w = a.w > b.w ? a.w : b.w;\n    return (result || new Vector4()).set(x, y, z, w);\n  }\n  static abs(a: IVector4Like, result?: Vector4): Vector4 {\n    const x = a.x < 0 ? -a.x : a.x;\n    const y = a.y < 0 ? -a.y : a.y;\n    const z = a.z < 0 ? -a.z : a.z;\n    const w = a.w < 0 ? -a.w : a.w;\n    return (result || new Vector4()).set(x, y, z, w);\n  }\n  static dot(a: IVector4Like, b: IVector4Like): number {\n    return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\n  }\n}\nexport class Quaternion extends VectorBase {\n  constructor(x: number, y: number, z: number, w: number);\n  constructor(array: number[]);\n  constructor(array: Float32Array);\n  constructor(rhs: Quaternion);\n  constructor(matrix: Matrix3x3);\n  constructor(matrix: Matrix4x4);\n  constructor();\n  constructor(xOrOther?: number | number[] | Quaternion | Matrix3x3 | Matrix4x4 | Float32Array, y?: number, z?: number, w?: number) {\n    super(xOrOther instanceof Float32Array ? xOrOther : 4);\n    if (xOrOther !== undefined && !(xOrOther instanceof Float32Array)) {\n      if (xOrOther instanceof Matrix3x3 || xOrOther instanceof Matrix4x4) {\n        this.fromRotationMatrix(xOrOther);\n      } else if (xOrOther instanceof Quaternion) {\n        this.assign(xOrOther.getArray());\n      } else if (typeof xOrOther === 'number') {\n        this._v[0] = Number(xOrOther);\n        this._v[1] = Number(y);\n        this._v[2] = Number(z);\n        this._v[3] = Number(w);\n      } else {\n        this.assign(xOrOther);\n      }\n    }\n  }\n  clone(): Quaternion {\n    return new Quaternion(this);\n  }\n  get x() {\n    return this._v[0];\n  }\n  set x(v: number) {\n    this.setX(v);\n  }\n  setX(v: number) {\n    this._v[0] = v;\n    this.changeNotify();\n    return this;\n  }\n  get y() {\n    return this._v[1];\n  }\n  set y(v: number) {\n    this.setY(v);\n  }\n  setY(v: number) {\n    this._v[1] = v;\n    this.changeNotify();\n    return this;\n  }\n  get z() {\n    return this._v[2];\n  }\n  set z(v: number) {\n    this.setZ(v);\n  }\n  setZ(v: number) {\n    this._v[2] = v;\n    this.changeNotify();\n    return this;\n  }\n  get w() {\n    return this._v[3];\n  }\n  set w(v: number) {\n    this.setW(v);\n  }\n  setW(v: number) {\n    this._v[3] = v;\n    this.changeNotify();\n    return this;\n  }\n  set(x: number, y: number, z: number, w: number): Quaternion {\n    this._v[0] = x;\n    this._v[1] = y;\n    this._v[2] = z;\n    this._v[3] = w;\n    this.changeNotify();\n    return this;\n  }\n  scaleBy(f: number): Quaternion {\n    return Quaternion.scale(this, f, this);\n  }\n  setAndNormalize(x: number, y: number, z: number, w: number): Quaternion {\n    this._v[0] = x;\n    this._v[1] = y;\n    this._v[2] = z;\n    this._v[3] = w;\n    return this.inplaceNormalize();\n  }\n  get magnitude(): number {\n    return Quaternion.magnitude(this);\n  }\n  get magnitudeSq(): number {\n    return Quaternion.magnitudeSq(this);\n  }\n  identity(): Quaternion {\n    return Quaternion.identity(this);\n  }\n  inplaceNormalize(): Quaternion {\n    return Quaternion.normalize(this, this);\n  }\n  inplaceConjugate(): Quaternion {\n    return Quaternion.conjugate(this, this);\n  }\n  multiplyRight(other: IVector4Like) {\n    return Quaternion.multiply(this, other, this);\n  }\n  multiplyLeft(other: IVector4Like) {\n    return Quaternion.multiply(other, this, this);\n  }\n  slerpRight(other: IVector4Like, t: number) {\n    return Quaternion.slerp(this, other, t, this);\n  }\n  slerpLeft(other: IVector4Like, t: number) {\n    return Quaternion.slerp(other, this, t, this);\n  }\n  unitVectorToUnitVector(from: IVector3Like, to: IVector3Like) {\n    return Quaternion.unitVectorToUnitVector(from, to, this);\n  }\n  fromEulerAngle(\n    a: number,\n    b: number,\n    c: number,\n    order: 'XYZ' | 'YXZ' | 'ZXY' | 'ZYX' | 'YZX' | 'XZY',\n  ) {\n    return Quaternion.fromEulerAngle(a, b, c, order, this);\n  }\n  fromAxisAngle(axis: IVector3Like, angle: number) {\n    return Quaternion.fromAxisAngle(axis, angle, this);\n  }\n  fromRotationMatrix(matrix: Matrix3x3 | Matrix4x4) {\n    return Quaternion.fromRotationMatrix(matrix, this);\n  }\n  toMatrix3x3(matrix?: Matrix3x3): Matrix3x3 {\n    const m = matrix || new Matrix3x3();\n    this.toMatrix(m);\n    return m;\n  }\n  toMatrix4x4(matrix?: Matrix4x4): Matrix4x4 {\n    const m = matrix || Matrix4x4.identity();\n    this.toMatrix(m);\n    return m;\n  }\n  toMatrix(matrix: Matrix3x3 | Matrix4x4) {\n    const xx = this.x * this.x;\n    const yy = this.y * this.y;\n    const zz = this.z * this.z;\n    const xy = this.x * this.y;\n    const zw = this.z * this.w;\n    const zx = this.z * this.x;\n    const yw = this.y * this.w;\n    const yz = this.y * this.z;\n    const xw = this.x * this.w;\n    matrix.m00 = 1 - 2 * (yy + zz);\n    matrix.m10 = 2 * (xy + zw);\n    matrix.m20 = 2 * (zx - yw);\n    matrix.m01 = 2 * (xy - zw);\n    matrix.m11 = 1 - 2 * (zz + xx);\n    matrix.m21 = 2 * (yz + xw);\n    matrix.m02 = 2 * (zx + yw);\n    matrix.m12 = 2 * (yz - xw);\n    matrix.m22 = 1 - 2 * (yy + xx);\n  }\n  getAxisAngle(): Vector4 {\n    const sign = this.w < 0 ? -1 : 1;\n    const x = this.x * sign;\n    const y = this.y * sign;\n    const z = this.z * sign;\n    const w = this.w * sign;\n    const halfAngle = Math.acos(w);\n    const sinHalf = Math.sin(halfAngle);\n    return new Vector4(x / sinHalf, y / sinHalf, z / sinHalf, 2 * halfAngle);\n  }\n  transform(v: IVector3Like, result?: Vector3): Vector3 {\n    result = result || new Vector3();\n    const x = this.x * 2;\n    const y = this.y * 2;\n    const z = this.z * 2;\n    const xx = this.x * x;\n    const yy = this.y * y;\n    const zz = this.z * z;\n    const xy = this.x * y;\n    const xz = this.x * z;\n    const yz = this.y * z;\n    const wx = this.w * x;\n    const wy = this.w * y;\n    const wz = this.w * z;\n    return result.set(\n      (1 - yy - zz) * v.x + (xy - wz) * v.y + (xz + wy) * v.z,\n      (xy + wz) * v.x + (1 - xx - zz) * v.y + (yz - wx) * v.z,\n      (xz - wy) * v.x + (yz + wx) * v.y + (1 - xx - yy) * v.z,\n    );\n  }\n  addBy(other: Quaternion): Quaternion {\n    return Quaternion.add(this, other, this);\n  }\n  static magnitude(q: IVector4Like): number {\n    return Math.sqrt(q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w);\n  }\n  static magnitudeSq(q: IVector4Like): number {\n    return q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w;\n  }\n  static add(q: Quaternion, other: Quaternion, result?: Quaternion): Quaternion {\n    result = result || q;\n    result.x = q.x + other.x;\n    result.y = q.y + other.y;\n    result.z = q.z + other.z;\n    result.w = q.w + other.w;\n    return result;\n  }\n  static scale(q: Quaternion, t: number, result?: Quaternion): Quaternion {\n    result = result || q;\n    result.x = q.x * t;\n    result.y = q.y * t;\n    result.z = q.z * t;\n    result.w = q.w * t;\n    return result;\n  }\n  static dot(a: IVector4Like, b: IVector4Like): number {\n    return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\n  }\n  static identity(q?: Quaternion): Quaternion {\n    return (q || new Quaternion()).set(0, 0, 0, 1);\n  }\n  static normalize(q: IVector4Like, result?: Quaternion): Quaternion {\n    const mag = Quaternion.magnitude(q);\n    return (result || new Quaternion()).set(q.x / mag, q.y / mag, q.z / mag, q.w / mag);\n  }\n  static conjugate(q: IVector4Like, result?: Quaternion): Quaternion {\n    return (result || new Quaternion()).set(-q.x, -q.y, -q.z, q.w);\n  }\n  static multiply(a: IVector4Like, b: IVector4Like, result?: Quaternion): Quaternion {\n    result = result || new Quaternion();\n    const x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    const y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    const z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    const w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return result.set(x, y, z, w);\n  }\n  static slerp(a: IVector4Like, b: IVector4Like, t: number, result?: Quaternion): Quaternion {\n    result = result || new Quaternion();\n    if (t <= 0) {\n      return result.set(a.x, a.y, a.z, a.w);\n    }\n    if (t >= 1) {\n      return result.set(b.x, b.y, b.z, b.w);\n    }\n    const halfCos1 = this.dot(a, b);\n    const inv = halfCos1 < 0 ? -1 : 1;\n    const ax = a.x;\n    const ay = a.y;\n    const az = a.z;\n    const aw = a.w;\n    const bx = b.x * inv;\n    const by = b.y * inv;\n    const bz = b.z * inv;\n    const bw = b.w * inv;\n    const halfCos = halfCos1 * inv;\n    if (halfCos >= 1) {\n      return result.set(ax, ay, az, aw);\n    }\n    const halfSinSqr = 1 - halfCos * halfCos;\n    if (halfSinSqr <= Number.EPSILON) {\n      const s = 1 - t;\n      return result.setAndNormalize(\n        a.x * s + b.x * t,\n        a.y * s + b.y * t,\n        a.z * s + b.z * t,\n        a.w * s + b.w * t,\n      );\n    }\n    const halfSin = Math.sqrt(halfSinSqr);\n    const halfTheta = Math.atan2(halfSin, halfCos);\n    const ratioA = Math.sin((1 - t) * halfTheta) / halfSin;\n    const ratioB = Math.sin(t * halfTheta) / halfSin;\n    return result.set(\n      ax * ratioA + bx * ratioB,\n      ay * ratioA + by * ratioB,\n      az * ratioA + bz * ratioB,\n      aw * ratioA + bw * ratioB,\n    );\n  }\n  static angleBetween(a: IVector4Like, b: IVector4Like): number {\n    return 2 * Math.acos(Math.abs(numberClamp(this.dot(a, b), -1, 1)));\n  }\n  static unitVectorToUnitVector(\n    from: IVector3Like,\n    to: IVector3Like,\n    result?: Quaternion,\n  ): Quaternion {\n    // assume from and to are unit vectors\n    result = result || new Quaternion();\n    let r = Vector3.dot(from, to) + 1;\n    if (r < 0.000001) {\n      r = 0;\n      if (Math.abs(from.x) > Math.abs(from.z)) {\n        return result.setAndNormalize(-from.y, from.x, 0, r);\n      } else {\n        return result.setAndNormalize(0, -from.z, from.y, r);\n      }\n    } else {\n      return result.setAndNormalize(\n        from.y * to.z - from.z * to.y,\n        from.z * to.x - from.x * to.z,\n        from.x * to.y - from.y * to.x,\n        r,\n      );\n    }\n  }\n  static fromEulerAngle(\n    a: number,\n    b: number,\n    c: number,\n    order: 'XYZ' | 'YXZ' | 'ZXY' | 'ZYX' | 'YZX' | 'XZY',\n    result?: Quaternion,\n  ): Quaternion {\n    result = result || new Quaternion();\n    const c1 = Math.cos(a / 2);\n    const c2 = Math.cos(b / 2);\n    const c3 = Math.cos(c / 2);\n    const s1 = Math.sin(a / 2);\n    const s2 = Math.sin(b / 2);\n    const s3 = Math.sin(c / 2);\n    switch (order) {\n      case 'XYZ':\n        return result.set(\n          s1 * c2 * c3 + c1 * s2 * s3,\n          c1 * s2 * c3 - s1 * c2 * s3,\n          c1 * c2 * s3 + s1 * s2 * c3,\n          c1 * c2 * c3 - s1 * s2 * s3,\n        );\n      case 'YXZ':\n        return result.set(\n          s1 * c2 * c3 + c1 * s2 * s3,\n          c1 * s2 * c3 - s1 * c2 * s3,\n          c1 * c2 * s3 - s1 * s2 * c3,\n          c1 * c2 * c3 + s1 * s2 * s3,\n        );\n      case 'ZXY':\n        return result.set(\n          s1 * c2 * c3 - c1 * s2 * s3,\n          c1 * s2 * c3 + s1 * c2 * s3,\n          c1 * c2 * s3 + s1 * s2 * c3,\n          c1 * c2 * c3 - s1 * s2 * s3,\n        );\n      case 'ZYX':\n        return result.set(\n          s1 * c2 * c3 - c1 * s2 * s3,\n          c1 * s2 * c3 + s1 * c2 * s3,\n          c1 * c2 * s3 - s1 * s2 * c3,\n          c1 * c2 * c3 + s1 * s2 * s3,\n        );\n      case 'YZX':\n        return result.set(\n          s1 * c2 * c3 + c1 * s2 * s3,\n          c1 * s2 * c3 + s1 * c2 * s3,\n          c1 * c2 * s3 - s1 * s2 * c3,\n          c1 * c2 * c3 - s1 * s2 * s3,\n        );\n      case 'XZY':\n        return result.set(\n          s1 * c2 * c3 - c1 * s2 * s3,\n          c1 * s2 * c3 - s1 * c2 * s3,\n          c1 * c2 * s3 + s1 * s2 * c3,\n          c1 * c2 * c3 + s1 * s2 * s3,\n        );\n    }\n  }\n  static fromAxisAngle(axis: IVector3Like, angle: number, result?: Quaternion): Quaternion {\n    // assume axis is normalized\n    result = result || new Quaternion();\n    const halfAngle = angle / 2;\n    const s = Math.sin(halfAngle);\n    return result.set(axis.x * s, axis.y * s, axis.z * s, Math.cos(halfAngle));\n  }\n  static fromRotationMatrix(matrix: Matrix3x3 | Matrix4x4, result?: Quaternion): Quaternion {\n    // assume matrix contains rotation without scaling\n    result = result || new Quaternion();\n    const trace = matrix.m00 + matrix.m11 + matrix.m22;\n    let s;\n    if (trace > 0) {\n      s = 0.5 / Math.sqrt(trace + 1);\n      result.set(\n        (matrix.m21 - matrix.m12) * s,\n        (matrix.m02 - matrix.m20) * s,\n        (matrix.m10 - matrix.m01) * s,\n        0.25 / s,\n      );\n    } else if (matrix.m00 > matrix.m11 && matrix.m00 > matrix.m22) {\n      s = 2 * Math.sqrt(1 + matrix.m00 - matrix.m11 - matrix.m22);\n      result.set(\n        0.25 * s,\n        (matrix.m01 + matrix.m10) / s,\n        (matrix.m02 + matrix.m20) / s,\n        (matrix.m21 - matrix.m12) / s,\n      );\n    } else if (matrix.m11 > matrix.m22) {\n      s = 2 * Math.sqrt(1 - matrix.m00 + matrix.m11 - matrix.m22);\n      result.set(\n        (matrix.m10 + matrix.m01) / s,\n        0.25 * s,\n        (matrix.m21 + matrix.m12) / s,\n        (matrix.m02 - matrix.m20) / s,\n      );\n    } else {\n      s = 2 * Math.sqrt(1 - matrix.m00 - matrix.m11 + matrix.m22);\n      result.set(\n        (matrix.m02 + matrix.m20) / s,\n        (matrix.m12 + matrix.m21) / s,\n        0.25 * s,\n        (matrix.m10 - matrix.m01) / s,\n      );\n    }\n    return result;\n  }\n}\nexport class Matrix3x3 extends VectorBase {\n  constructor();\n  constructor(q: Quaternion);\n  constructor(rhs: Matrix3x3);\n  constructor(m4: Matrix4x4);\n  constructor(array: number[]);\n  constructor(array: Float32Array);\n  constructor(quatOrArray?: Quaternion | Matrix3x3 | Matrix4x4 | number[] | Float32Array) {\n    super(quatOrArray instanceof Float32Array ? quatOrArray : 9);\n    if (quatOrArray !== undefined && !(quatOrArray instanceof Float32Array)) {\n      if (quatOrArray instanceof Quaternion) {\n        quatOrArray.toMatrix(this);\n      } else if (quatOrArray instanceof Matrix3x3) {\n        this.assign(quatOrArray.getArray());\n      } else if (quatOrArray instanceof Matrix4x4) {\n        const data = quatOrArray.getArray();\n        this._v[0] = data[0];\n        this._v[1] = data[1];\n        this._v[2] = data[2];\n        this._v[3] = data[4];\n        this._v[4] = data[5];\n        this._v[5] = data[6];\n        this._v[6] = data[8];\n        this._v[7] = data[9];\n        this._v[8] = data[10];\n      } else {\n        this.assign(quatOrArray);\n      }\n    }\n  }\n  clone(): Matrix3x3 {\n    return new Matrix3x3(this);\n  }\n  get m00() {\n    return this._v[0];\n  }\n  set m00(v: number) {\n    this._v[0] = v;\n    this.changeNotify();\n  }\n  get m10() {\n    return this._v[1];\n  }\n  set m10(v: number) {\n    this._v[1] = v;\n    this.changeNotify();\n  }\n  get m20() {\n    return this._v[2];\n  }\n  set m20(v: number) {\n    this._v[2] = v;\n    this.changeNotify();\n  }\n  get m01() {\n    return this._v[3];\n  }\n  set m01(v: number) {\n    this._v[3] = v;\n    this.changeNotify();\n  }\n  get m11() {\n    return this._v[4];\n  }\n  set m11(v: number) {\n    this._v[4] = v;\n    this.changeNotify();\n  }\n  get m21() {\n    return this._v[5];\n  }\n  set m21(v: number) {\n    this._v[5] = v;\n    this.changeNotify();\n  }\n  get m02() {\n    return this._v[6];\n  }\n  set m02(v: number) {\n    this._v[6] = v;\n    this.changeNotify();\n  }\n  get m12() {\n    return this._v[7];\n  }\n  set m12(v: number) {\n    this._v[7] = v;\n    this.changeNotify();\n  }\n  get m22() {\n    return this._v[8];\n  }\n  set m22(v: number) {\n    this._v[8] = v;\n    this.changeNotify();\n  }\n  getRow(row: number, result?: Vector3): Vector3 {\n    return (result || new Vector3()).set(\n      this._v[row * 3],\n      this._v[row * 3 + 1],\n      this._v[row * 3 + 2],\n    );\n  }\n  setRow(row: number, v: IVector3Like) {\n    this._v[row * 3] = v.x;\n    this._v[row * 3 + 1] = v.y;\n    this._v[row * 3 + 2] = v.z;\n    this.changeNotify();\n    return this;\n  }\n  getCol(col: number, result?: Vector3): Vector3 {\n    return (result || new Vector3()).set(this._v[col], this._v[3 + col], this._v[6 + col]);\n  }\n  setCol(col: number, v: IVector3Like) {\n    this._v[col] = v.x;\n    this._v[3 + col] = v.y;\n    this._v[6 + col] = v.z;\n    this.changeNotify();\n    return this;\n  }\n  static add(a: Matrix3x3, b: Matrix3x3, result?: Matrix3x3) {\n    result = result || new Matrix3x3();\n    const v1 = a.getArray();\n    const v2 = b.getArray();\n    const v = result.getArray();\n    for (let i = 0; i < 9; i++) {\n      v[i] = v1[i] + v2[i];\n    }\n    result.changeNotify();\n    return result;\n  }\n  static sub(a: Matrix3x3, b: Matrix3x3, result?: Matrix3x3) {\n    result = result || new Matrix3x3();\n    const v1 = a.getArray();\n    const v2 = b.getArray();\n    const v = result.getArray();\n    for (let i = 0; i < 9; i++) {\n      v[i] = v1[i] - v2[i];\n    }\n    result.changeNotify();\n    return result;\n  }\n  static mul(a: Matrix3x3, b: Matrix3x3, result?: Matrix3x3) {\n    result = result || new Matrix3x3();\n    const v1 = a.getArray();\n    const v2 = b.getArray();\n    const v = result.getArray();\n    for (let i = 0; i < 9; i++) {\n      v[i] = v1[i] * v2[i];\n    }\n    result.changeNotify();\n    return result;\n  }\n  static div(a: Matrix3x3, b: Matrix3x3, result?: Matrix3x3) {\n    result = result || new Matrix3x3();\n    const v1 = a.getArray();\n    const v2 = b.getArray();\n    const v = result.getArray();\n    for (let i = 0; i < 9; i++) {\n      v[i] = v1[i] / v2[i];\n    }\n    result.changeNotify();\n    return result;\n  }\n  static scale(a: Matrix3x3, f: number, result?: Matrix3x3) {\n    result = result || new Matrix3x3();\n    const v1 = a.getArray();\n    const v = result.getArray();\n    for (let i = 0; i < 9; i++) {\n      v[i] = v1[i] * f;\n    }\n    result.changeNotify();\n    return result;\n  }\n  static identity(result?: Matrix3x3): Matrix3x3 {\n    result = result || new Matrix3x3();\n    const v = result.getArray();\n    v[0] = 1;\n    v[1] = 0;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = 1;\n    v[5] = 0;\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = 1;\n    result.changeNotify();\n    return result;\n  }\n  static transpose(matrix: Matrix3x3, result?: Matrix3x3): Matrix3x3 {\n    result = result || new Matrix3x3();\n    const v = matrix.getArray();\n    const d = result.getArray();\n    if (v === d) {\n      let t: number;\n      t = d[1];\n      d[1] = d[3];\n      d[3] = t;\n      t = d[2];\n      d[2] = d[6];\n      d[6] = t;\n      t = d[5];\n      d[5] = d[7];\n      d[7] = t;\n    } else {\n      d[0] = v[0];\n      d[1] = v[3];\n      d[2] = v[6];\n      d[3] = v[1];\n      d[4] = v[4];\n      d[5] = v[7];\n      d[6] = v[2];\n      d[7] = v[5];\n      d[8] = v[8];\n    }\n    result.changeNotify();\n    return result;\n  }\n  static inverse(matrix: Matrix3x3, result?: Matrix3x3): Matrix3x3 {\n    result = result || new Matrix3x3();\n    const v = matrix.getArray();\n    const t = result.getArray();\n    const m00 = v[0];\n    const m01 = v[1];\n    const m02 = v[2];\n    const m10 = v[3];\n    const m11 = v[4];\n    const m12 = v[5];\n    const m20 = v[6];\n    const m21 = v[7];\n    const m22 = v[8];\n    const tmp_0 = m22 * m11 - m12 * m21;\n    const tmp_1 = m12 * m20 - m22 * m10;\n    const tmp_2 = m21 * m10 - m20 * m11;\n    const d = 1 / (m00 * tmp_0 + m01 * tmp_1 + m02 * tmp_2);\n    t[0] = tmp_0 * d;\n    t[1] = (m02 * m21 - m22 * m01) * d;\n    t[2] = (m12 * m01 - m02 * m11) * d;\n    t[3] = tmp_1 * d;\n    t[4] = (m22 * m00 - m02 * m20) * d;\n    t[5] = (m02 * m10 - m12 * m00) * d;\n    t[6] = tmp_2 * d;\n    t[7] = (m01 * m20 - m21 * m00) * d;\n    t[8] = (m11 * m00 - m01 * m10) * d;\n    result.changeNotify();\n    return result;\n  }\n  static inverseAffine(matrix: Matrix3x3, result?: Matrix3x3): Matrix3x3 {\n    // TODO optimize?\n    return this.inverse(matrix, result);\n  }\n  static scaling(s: IVector3Like, result?: Matrix3x3): Matrix3x3 {\n    result = result || new Matrix3x3();\n    const v = result.getArray();\n    v[0] = s.x;\n    v[1] = 0;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = s.y;\n    v[5] = 0;\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = s.z;\n    result.changeNotify();\n    return result;\n  }\n  static rotationX(angle: number, result?: Matrix3x3): Matrix3x3 {\n    result = result || new Matrix3x3();\n    const v = result.getArray();\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    v[0] = 1;\n    v[1] = 0;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = c;\n    v[5] = s;\n    v[6] = 0;\n    v[7] = -s;\n    v[8] = c;\n    result.changeNotify();\n    return result;\n  }\n  static rotationY(angle: number, result?: Matrix3x3): Matrix3x3 {\n    result = result || new Matrix3x3();\n    const v = result.getArray();\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    v[0] = c;\n    v[1] = 0;\n    v[2] = -s;\n    v[3] = 0;\n    v[4] = 1;\n    v[5] = 0;\n    v[6] = s;\n    v[7] = 0;\n    v[8] = c;\n    result.changeNotify();\n    return result;\n  }\n  static rotationZ(angle: number, result?: Matrix3x3): Matrix3x3 {\n    result = result || new Matrix3x3();\n    const v = result.getArray();\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    v[0] = c;\n    v[1] = s;\n    v[2] = 0;\n    v[3] = -s;\n    v[4] = c;\n    v[5] = 0;\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = 1;\n    result.changeNotify();\n    return result;\n  }\n  static rotation(axis: IVector3Like, angle: number, result?: Matrix3x3): Matrix3x3 {\n    result = result || new Matrix3x3();\n    const v = result.getArray();\n    let x = axis.x;\n    let y = axis.y;\n    let z = axis.z;\n    const n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n    const xx = x * x;\n    const yy = y * y;\n    const zz = z * z;\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const oneMinusCosine = 1 - c;\n    v[0] = xx + (1 - xx) * c;\n    v[1] = x * y * oneMinusCosine + z * s;\n    v[2] = x * z * oneMinusCosine - y * s;\n    v[3] = x * y * oneMinusCosine - z * s;\n    v[4] = yy + (1 - yy) * c;\n    v[5] = y * z * oneMinusCosine + x * s;\n    v[6] = x * z * oneMinusCosine + y * s;\n    v[7] = y * z * oneMinusCosine - x * s;\n    v[8] = zz + (1 - zz) * c;\n    result.changeNotify();\n    return result;\n  }\n  static multiply(m1: Matrix3x3, m2: Matrix3x3, result?: Matrix3x3): Matrix3x3 {\n    result = result || new Matrix3x3();\n    const v = result.getArray();\n    const a = m1.getArray();\n    const b = m2.getArray();\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b10 = b[3];\n    const b11 = b[4];\n    const b12 = b[5];\n    const b20 = b[6];\n    const b21 = b[7];\n    const b22 = b[8];\n\n    v[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    v[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    v[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    v[3] = a00 * b10 + a10 * b11 + a20 * b12;\n    v[4] = a01 * b10 + a11 * b11 + a21 * b12;\n    v[5] = a02 * b10 + a12 * b11 + a22 * b12;\n    v[6] = a00 * b20 + a10 * b21 + a20 * b22;\n    v[7] = a01 * b20 + a11 * b21 + a21 * b22;\n    v[8] = a02 * b20 + a12 * b21 + a22 * b22;\n\n    result.changeNotify();\n    return result;\n  }\n  static multiplyAffine(m1: Matrix3x3, m2: Matrix3x3, result?: Matrix3x3): Matrix3x3 {\n    return this.multiply(m1, m2, result);\n  }\n  subBy(other: Matrix3x3) {\n    return Matrix3x3.sub(this, other, this);\n  }\n  addBy(other: Matrix3x3) {\n    return Matrix3x3.add(this, other, this);\n  }\n  mulBy(other: Matrix3x3) {\n    return Matrix3x3.mul(this, other, this);\n  }\n  divBy(other: Matrix3x3) {\n    return Matrix3x3.div(this, other, this);\n  }\n  scaleBy(f: number) {\n    return Matrix3x3.scale(this, f, this);\n  }\n  identity() {\n    return Matrix3x3.identity(this);\n  }\n  scaling(s: IVector3Like) {\n    return Matrix3x3.scaling(s, this);\n  }\n  inplaceInverse() {\n    return Matrix3x3.inverse(this, this);\n  }\n  inplaceInverseAffine() {\n    return Matrix3x3.inverseAffine(this, this);\n  }\n  transpose() {\n    return Matrix3x3.transpose(this, this);\n  }\n  multiplyRight(other: Matrix3x3) {\n    return Matrix3x3.multiply(this, other, this);\n  }\n  multiplyRightAffine(other: Matrix3x3) {\n    return Matrix3x3.multiplyAffine(this, other, this);\n  }\n  multiplyLeft(other: Matrix3x3) {\n    return Matrix3x3.multiply(other, this, this);\n  }\n  multiplyLeftAffine(other: Matrix3x3) {\n    return Matrix3x3.multiplyAffine(other, this, this);\n  }\n  rotationX(angle: number) {\n    return Matrix3x3.rotationX(angle, this);\n  }\n  rotationY(angle: number) {\n    return Matrix3x3.rotationY(angle, this);\n  }\n  rotationZ(angle: number) {\n    return Matrix3x3.rotationZ(angle, this);\n  }\n  rotation(axis: IVector3Like, angle: number) {\n    return Matrix3x3.rotation(axis, angle, this);\n  }\n  transform(point: IVector3Like, result?: Vector3): Vector3 {\n    result = result || new Vector3();\n    const v = this.getArray();\n    const px = point.x,\n      py = point.y,\n      pz = point.z;\n    return result.set(\n      v[0] * px + v[3] * py + v[6] * pz,\n      v[1] * px + v[4] * py + v[7] * pz,\n      v[2] * px + v[5] * py + v[8] * pz,\n    );\n  }\n  transformPoint(vec: IVector3Like, result?: Vector3): Vector3 {\n    return this.transform(vec, result);\n  }\n  transformPointAffine(point: IVector3Like, result?: Vector3): Vector3 {\n    return this.transform(point, result);\n  }\n  transformVector(vec: IVector3Like, result?: Vector3): Vector3 {\n    return this.transform(vec, result);\n  }\n  transformVectorAffine(vec: IVector3Like, result?: Vector3): Vector3 {\n    return this.transform(vec, result);\n  }\n  transformAffine(vec: IVector4Like, result?: Vector3): Vector3 {\n    return this.transform(vec, result);\n  }\n  testRotationPart(epsl?: number) {\n    const v = this._v;\n    if (epsl === undefined) epsl = 0.0001;\n    for (let i = 0; i < 3; i++) {\n      const t = v[i * 3] * v[i * 3] + v[i * 3 + 1] * v[i * 3 + 1] + v[i * 3 + 2] * v[i * 4 + 2];\n      if (!numberEquals(t, 1, epsl)) {\n        return false;\n      }\n      const q = v[i] * v[i] + v[3 + i] * v[3 + i] + v[6 + i] * v[6 + i];\n      if (!numberEquals(q, 1, epsl)) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class Matrix4x4 extends VectorBase {\n  constructor();\n  constructor(array: number[]);\n  constructor(array: Float32Array);\n  constructor(rhs: Matrix4x4);\n  constructor(mat33: Matrix3x3);\n  constructor(quat: Quaternion);\n  constructor(arrayOrMatOrQuat?: number[] | Matrix3x3 | Matrix4x4 | Quaternion | Float32Array) {\n    super(arrayOrMatOrQuat instanceof Float32Array ? arrayOrMatOrQuat : 16);\n    if (arrayOrMatOrQuat !== undefined && !(arrayOrMatOrQuat instanceof Float32Array)) {\n      if (arrayOrMatOrQuat instanceof Matrix3x3) {\n        this.m00 = arrayOrMatOrQuat.m00;\n        this.m01 = arrayOrMatOrQuat.m01;\n        this.m02 = arrayOrMatOrQuat.m02;\n        this.m03 = 0;\n        this.m10 = arrayOrMatOrQuat.m10;\n        this.m11 = arrayOrMatOrQuat.m11;\n        this.m12 = arrayOrMatOrQuat.m12;\n        this.m13 = 0;\n        this.m20 = arrayOrMatOrQuat.m20;\n        this.m21 = arrayOrMatOrQuat.m21;\n        this.m22 = arrayOrMatOrQuat.m22;\n        this.m23 = 0;\n        this.m30 = 0;\n        this.m31 = 0;\n        this.m32 = 0;\n        this.m33 = 1;\n      } else if (arrayOrMatOrQuat instanceof Matrix4x4) {\n        this.assign(arrayOrMatOrQuat.getArray());\n      } else if (arrayOrMatOrQuat instanceof Quaternion) {\n        arrayOrMatOrQuat.toMatrix(this);\n        this.m03 = 0;\n        this.m13 = 0;\n        this.m23 = 0;\n        this.m30 = 0;\n        this.m31 = 0;\n        this.m32 = 0;\n        this.m33 = 1;\n      } else {\n        this.assign(arrayOrMatOrQuat);\n      }\n    }\n  }\n  clone(): Matrix4x4 {\n    return new Matrix4x4(this);\n  }\n  get m00() {\n    return this._v[0];\n  }\n  set m00(v: number) {\n    this._v[0] = v;\n    this.changeNotify();\n  }\n  get m10() {\n    return this._v[1];\n  }\n  set m10(v: number) {\n    this._v[1] = v;\n    this.changeNotify();\n  }\n  get m20() {\n    return this._v[2];\n  }\n  set m20(v: number) {\n    this._v[2] = v;\n    this.changeNotify();\n  }\n  get m30() {\n    return this._v[3];\n  }\n  set m30(v: number) {\n    this._v[3] = v;\n    this.changeNotify();\n  }\n  get m01() {\n    return this._v[4];\n  }\n  set m01(v: number) {\n    this._v[4] = v;\n    this.changeNotify();\n  }\n  get m11() {\n    return this._v[5];\n  }\n  set m11(v: number) {\n    this._v[5] = v;\n    this.changeNotify();\n  }\n  get m21() {\n    return this._v[6];\n  }\n  set m21(v: number) {\n    this._v[6] = v;\n    this.changeNotify();\n  }\n  get m31() {\n    return this._v[7];\n  }\n  set m31(v: number) {\n    this._v[7] = v;\n    this.changeNotify();\n  }\n  get m02() {\n    return this._v[8];\n  }\n  set m02(v: number) {\n    this._v[8] = v;\n    this.changeNotify();\n  }\n  get m12() {\n    return this._v[9];\n  }\n  set m12(v: number) {\n    this._v[9] = v;\n    this.changeNotify();\n  }\n  get m22() {\n    return this._v[10];\n  }\n  set m22(v: number) {\n    this._v[10] = v;\n    this.changeNotify();\n  }\n  get m32() {\n    return this._v[11];\n  }\n  set m32(v: number) {\n    this._v[11] = v;\n    this.changeNotify();\n  }\n  get m03() {\n    return this._v[12];\n  }\n  set m03(v: number) {\n    this._v[12] = v;\n    this.changeNotify();\n  }\n  get m13() {\n    return this._v[13];\n  }\n  set m13(v: number) {\n    this._v[13] = v;\n    this.changeNotify();\n  }\n  get m23() {\n    return this._v[14];\n  }\n  set m23(v: number) {\n    this._v[14] = v;\n    this.changeNotify();\n  }\n  get m33() {\n    return this._v[15];\n  }\n  set m33(v: number) {\n    this._v[15] = v;\n    this.changeNotify();\n  }\n  getRow(row: number, result?: Vector4): Vector4 {\n    return (result || new Vector4()).set(\n      this._v[row * 4],\n      this._v[row * 4 + 1],\n      this._v[row * 4 + 2],\n      this._v[row * 4 + 3],\n    );\n  }\n  getRow3(row: number, result?: Vector3): Vector3 {\n    return (result || new Vector3()).set(\n      this._v[row * 4],\n      this._v[row * 4 + 1],\n      this._v[row * 4 + 2],\n    );\n  }\n  setRow(row: number, v: IVector4Like) {\n    this._v[row * 4] = v.x;\n    this._v[row * 4 + 1] = v.y;\n    this._v[row * 4 + 2] = v.z;\n    this._v[row * 4 + 3] = v.w;\n    this.changeNotify();\n    return this;\n  }\n  getCol(col: number, result?: Vector4): Vector4 {\n    return (result || new Vector4()).set(\n      this._v[col],\n      this._v[4 + col],\n      this._v[8 + col],\n      this._v[12 + col],\n    );\n  }\n  setCol(col: number, v: IVector4Like) {\n    this._v[col] = v.x;\n    this._v[4 + col] = v.y;\n    this._v[8 + col] = v.z;\n    this._v[12 + col] = v.w;\n    this.changeNotify();\n    return this;\n  }\n  static add(a: Matrix4x4, b: Matrix4x4, result?: Matrix4x4) {\n    result = result || new Matrix4x4();\n    const v1 = a.getArray();\n    const v2 = b.getArray();\n    const v = result.getArray();\n    for (let i = 0; i < 16; i++) {\n      v[i] = v1[i] + v2[i];\n    }\n    result.changeNotify();\n    return result;\n  }\n  static sub(a: Matrix4x4, b: Matrix4x4, result?: Matrix4x4) {\n    result = result || new Matrix4x4();\n    const v1 = a.getArray();\n    const v2 = b.getArray();\n    const v = result.getArray();\n    for (let i = 0; i < 16; i++) {\n      v[i] = v1[i] - v2[i];\n    }\n    result.changeNotify();\n    return result;\n  }\n  static mul(a: Matrix4x4, b: Matrix4x4, result?: Matrix4x4) {\n    result = result || new Matrix4x4();\n    const v1 = a.getArray();\n    const v2 = b.getArray();\n    const v = result.getArray();\n    for (let i = 0; i < 16; i++) {\n      v[i] = v1[i] * v2[i];\n    }\n    result.changeNotify();\n    return result;\n  }\n  static div(a: Matrix4x4, b: Matrix4x4, result?: Matrix4x4) {\n    result = result || new Matrix4x4();\n    const v1 = a.getArray();\n    const v2 = b.getArray();\n    const v = result.getArray();\n    for (let i = 0; i < 16; i++) {\n      v[i] = v1[i] / v2[i];\n    }\n    result.changeNotify();\n    return result;\n  }\n  static scale(a: Matrix4x4, f: number, result?: Matrix4x4) {\n    result = result || new Matrix4x4();\n    const v1 = a.getArray();\n    const v = result.getArray();\n    for (let i = 0; i < 16; i++) {\n      v[i] = v1[i] * f;\n    }\n    result.changeNotify();\n    return result;\n  }\n  static identity(result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    v[0] = 1;\n    v[1] = 0;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = 0;\n    v[5] = 1;\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = 0;\n    v[9] = 0;\n    v[10] = 1;\n    v[11] = 0;\n    v[12] = 0;\n    v[13] = 0;\n    v[14] = 0;\n    v[15] = 1;\n    result.changeNotify();\n    return result;\n  }\n  static ortho(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    znear: number,\n    zfar: number,\n    result?: Matrix4x4,\n  ): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    v[0] = 2 / (right - left);\n    v[1] = 0;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = 0;\n    v[5] = 2 / (top - bottom);\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = 0;\n    v[9] = 0;\n    v[10] = 2 / (znear - zfar);\n    v[11] = 0;\n    v[12] = (left + right) / (left - right);\n    v[13] = (bottom + top) / (bottom - top);\n    v[14] = (znear + zfar) / (znear - zfar);\n    v[15] = 1;\n    result.changeNotify();\n    return result;\n  }\n  static reflection(nx: number, ny: number, nz: number, d: number, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    result.m00 = 1 - 2 * nx * nx;\n    result.m01 = -2 * nx * ny;\n    result.m02 = -2 * nx * nz;\n    result.m03 = -2 * nx * d;\n    result.m10 = result.m01;\n    result.m11 = 1 - 2 * ny * ny;\n    result.m12 = -2 * ny * nz;\n    result.m13 = -2 * ny * d;\n    result.m20 = result.m02;\n    result.m21 = result.m12;\n    result.m22 = 1 - 2 * nz * nz;\n    result.m23 = -2 * nz * d;\n    result.m30 = 0;\n    result.m31 = 0;\n    result.m32 = 0;\n    result.m33 = 1;\n    return result;\n  }\n  static perspective(\n    fovY: number,\n    aspect: number,\n    znear: number,\n    zfar: number,\n    result?: Matrix4x4,\n  ): Matrix4x4 {\n    const h = znear * Math.tan(fovY * 0.5);\n    const w = h * aspect;\n    return this.frustum(-w, w, -h, h, znear, zfar, result);\n  }\n  static perspectiveZ(\n    fovY: number,\n    aspect: number,\n    znear: number,\n    zfar: number,\n    result?: Matrix4x4,\n  ): Matrix4x4 {\n    const h = znear * Math.tan(fovY * 0.5);\n    const w = h * aspect;\n    return this.frustumZ(-w, w, -h, h, znear, zfar, result);\n  }\n  static obliquePerspective(perspectiveMatrix: Matrix4x4, nearPlane: Vector4): Matrix4x4 {\n    const result = new Matrix4x4(perspectiveMatrix);\n    const q = new Vector4(\n      ((nearPlane.x > 0 ? 1 : nearPlane.x < 0 ? -1 : 0) + perspectiveMatrix.m20) / perspectiveMatrix.m00,\n      ((nearPlane.y > 0 ? 1 : nearPlane.y < 0 ? -1 : 0) + perspectiveMatrix.m21) / perspectiveMatrix.m11,\n      -1,\n      (1 + perspectiveMatrix.m22) / perspectiveMatrix.m32);\n    const c = Vector4.scale(nearPlane, 2 / Vector4.dot(nearPlane, q));\n    result.m02 = c.x;\n    result.m12 = c.y;\n    result.m22 = c.z + 1;\n    result.m32 = c.w;\n    return result;\n    /*\n        float       matrix[16];\n        Vector4D    q;\n\n        // Grab the current projection matrix from OpenGL\n        glGetFloatv(GL_PROJECTION_MATRIX, matrix);\n\n        // Calculate the clip-space corner point opposite the clipping plane\n        // as (sgn(clipPlane.x), sgn(clipPlane.y), 1, 1) and\n        // transform it into camera space by multiplying it\n        // by the inverse of the projection matrix\n\n        q.x = (sgn(clipPlane.x) + matrix[8]) / matrix[0];\n        q.y = (sgn(clipPlane.y) + matrix[9]) / matrix[5];\n        q.z = -1.0F;\n        q.w = (1.0F + matrix[10]) / matrix[14];\n\n        // Calculate the scaled plane vector\n        Vector4D c = clipPlane * (2.0F / Dot(clipPlane, q));\n\n        // Replace the third row of the projection matrix\n        matrix[2] = c.x;\n        matrix[6] = c.y;\n        matrix[10] = c.z + 1.0F;\n        matrix[14] = c.w;\n\n        // Load it back into OpenGL\n        glMatrixMode(GL_PROJECTION);\n        glLoadMatrix(matrix);\n    }\n    */\n  }\n  static frustum(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    znear: number,\n    zfar: number,\n    result?: Matrix4x4,\n  ): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const dx = right - left;\n    const dy = top - bottom;\n    const dz = znear - zfar;\n    v[0] = (2 * znear) / dx;\n    v[1] = 0;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = 0;\n    v[5] = (2 * znear) / dy;\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = (left + right) / dx;\n    v[9] = (top + bottom) / dy;\n    v[10] = (znear + zfar) / dz;\n    v[11] = -1;\n    v[12] = 0;\n    v[13] = 0;\n    v[14] = (2 * znear * zfar) / dz;\n    v[15] = 0;\n\n    result.changeNotify();\n    return result;\n  }\n  static frustumZ(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    znear: number,\n    zfar: number,\n    result?: Matrix4x4,\n  ): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const dx = right - left;\n    const dy = top - bottom;\n    const dz = znear - zfar;\n    v[0] = (2 * znear) / dx;\n    v[1] = 0;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = 0;\n    v[5] = (2 * znear) / dy;\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = (left + right) / dx;\n    v[9] = (top + bottom) / dy;\n    v[10] = zfar / dz;\n    v[11] = -1;\n    v[12] = 0;\n    v[13] = 0;\n    v[14] = znear * zfar / dz;\n    v[15] = 0;\n\n    result.changeNotify();\n    return result;\n  }\n  static transpose(matrix: Matrix4x4, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = matrix.getArray();\n    const d = result.getArray();\n    if (v === d) {\n      let t: number;\n      t = d[1];\n      d[1] = d[4];\n      d[4] = t;\n      t = d[2];\n      d[2] = d[8];\n      d[8] = t;\n      t = d[3];\n      d[3] = d[12];\n      d[12] = t;\n      t = d[6];\n      d[6] = d[9];\n      d[9] = t;\n      t = d[7];\n      d[7] = d[13];\n      d[13] = t;\n      t = d[11];\n      d[11] = d[14];\n      d[14] = t;\n    } else {\n      d[0] = v[0];\n      d[1] = v[4];\n      d[2] = v[8];\n      d[3] = v[12];\n      d[4] = v[1];\n      d[5] = v[5];\n      d[6] = v[9];\n      d[7] = v[13];\n      d[8] = v[2];\n      d[9] = v[6];\n      d[10] = v[10];\n      d[11] = v[14];\n      d[12] = v[3];\n      d[13] = v[7];\n      d[14] = v[11];\n      d[15] = v[15];\n    }\n    result.changeNotify();\n    return result;\n  }\n  static inverse(matrix: Matrix4x4, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = matrix.getArray();\n    const t = result.getArray();\n    const m00 = v[0 * 4 + 0];\n    const m01 = v[0 * 4 + 1];\n    const m02 = v[0 * 4 + 2];\n    const m03 = v[0 * 4 + 3];\n    const m10 = v[1 * 4 + 0];\n    const m11 = v[1 * 4 + 1];\n    const m12 = v[1 * 4 + 2];\n    const m13 = v[1 * 4 + 3];\n    const m20 = v[2 * 4 + 0];\n    const m21 = v[2 * 4 + 1];\n    const m22 = v[2 * 4 + 2];\n    const m23 = v[2 * 4 + 3];\n    const m30 = v[3 * 4 + 0];\n    const m31 = v[3 * 4 + 1];\n    const m32 = v[3 * 4 + 2];\n    const m33 = v[3 * 4 + 3];\n    const tmp_0 = m22 * m33;\n    const tmp_1 = m32 * m23;\n    const tmp_2 = m12 * m33;\n    const tmp_3 = m32 * m13;\n    const tmp_4 = m12 * m23;\n    const tmp_5 = m22 * m13;\n    const tmp_6 = m02 * m33;\n    const tmp_7 = m32 * m03;\n    const tmp_8 = m02 * m23;\n    const tmp_9 = m22 * m03;\n    const tmp_10 = m02 * m13;\n    const tmp_11 = m12 * m03;\n    const tmp_12 = m20 * m31;\n    const tmp_13 = m30 * m21;\n    const tmp_14 = m10 * m31;\n    const tmp_15 = m30 * m11;\n    const tmp_16 = m10 * m21;\n    const tmp_17 = m20 * m11;\n    const tmp_18 = m00 * m31;\n    const tmp_19 = m30 * m01;\n    const tmp_20 = m00 * m21;\n    const tmp_21 = m20 * m01;\n    const tmp_22 = m00 * m11;\n    const tmp_23 = m10 * m01;\n\n    const t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n    const t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n    const t2 =\n      tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n    const t3 =\n      tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n    const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n    t[0] = d * t0;\n    t[1] = d * t1;\n    t[2] = d * t2;\n    t[3] = d * t3;\n    t[4] =\n      d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n    t[5] =\n      d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n    t[6] =\n      d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n    t[7] =\n      d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n    t[8] =\n      d *\n      (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n    t[9] =\n      d *\n      (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n    t[10] =\n      d *\n      (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n    t[11] =\n      d *\n      (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n    t[12] =\n      d *\n      (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n    t[13] =\n      d *\n      (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n    t[14] =\n      d *\n      (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n    t[15] =\n      d *\n      (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n\n    result.changeNotify();\n    return result;\n  }\n  static inverseAffine(matrix: Matrix4x4, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = matrix.getArray();\n    const t = result.getArray();\n    const m00 = v[0 * 4 + 0];\n    const m01 = v[0 * 4 + 1];\n    const m02 = v[0 * 4 + 2];\n    const m10 = v[1 * 4 + 0];\n    const m11 = v[1 * 4 + 1];\n    const m12 = v[1 * 4 + 2];\n    const m20 = v[2 * 4 + 0];\n    const m21 = v[2 * 4 + 1];\n    const m22 = v[2 * 4 + 2];\n    const m30 = v[3 * 4 + 0];\n    const m31 = v[3 * 4 + 1];\n    const m32 = v[3 * 4 + 2];\n    const t0 = m22 * m11 - m12 * m21;\n    const t1 = m02 * m21 - m22 * m01;\n    const t2 = m12 * m01 - m02 * m11;\n    const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2);\n    t[0] = d * t0;\n    t[1] = d * t1;\n    t[2] = d * t2;\n    t[3] = 0;\n    t[4] = d * (m12 * m20 - m22 * m10);\n    t[5] = d * (m22 * m00 - m02 * m20);\n    t[6] = d * (m02 * m10 - m12 * m00);\n    t[7] = 0;\n    t[8] = d * (m10 * m21 - m20 * m11);\n    t[9] = d * (m20 * m01 - m00 * m21);\n    t[10] = d * (m00 * m11 - m10 * m01);\n    t[11] = 0;\n    t[12] =\n      d *\n      (m10 * m31 * m22 +\n        m20 * m11 * m32 +\n        m30 * m21 * m12 -\n        (m10 * m21 * m32 + m20 * m31 * m12 + m30 * m11 * m22));\n    t[13] =\n      d *\n      (m00 * m21 * m32 +\n        m20 * m31 * m02 +\n        m30 * m01 * m22 -\n        (m00 * m31 * m22 + m20 * m01 * m32 + m30 * m21 * m02));\n    t[14] =\n      d *\n      (m00 * m31 * m12 +\n        m10 * m01 * m32 +\n        m30 * m11 * m02 -\n        (m00 * m11 * m32 + m10 * m31 * m02 + m30 * m01 * m12));\n    t[15] = 1;\n\n    result.changeNotify();\n    return result;\n  }\n  static translation(t: IVector3Like, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    v[0] = 1;\n    v[1] = 0;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = 0;\n    v[5] = 1;\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = 0;\n    v[9] = 0;\n    v[10] = 1;\n    v[11] = 0;\n    v[12] = t.x;\n    v[13] = t.y;\n    v[14] = t.z;\n    v[15] = 1;\n\n    result.changeNotify();\n    return result;\n  }\n  static scaling(s: IVector3Like, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    v[0] = s.x;\n    v[1] = 0;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = 0;\n    v[5] = s.y;\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = 0;\n    v[9] = 0;\n    v[10] = s.z;\n    v[11] = 0;\n    v[12] = 0;\n    v[13] = 0;\n    v[14] = 0;\n    v[15] = 1;\n\n    result.changeNotify();\n    return result;\n  }\n  static rotationX(angle: number, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    v[0] = 1;\n    v[1] = 0;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = 0;\n    v[5] = c;\n    v[6] = s;\n    v[7] = 0;\n    v[8] = 0;\n    v[9] = -s;\n    v[10] = c;\n    v[11] = 0;\n    v[12] = 0;\n    v[13] = 0;\n    v[14] = 0;\n    v[15] = 1;\n\n    result.changeNotify();\n    return result;\n  }\n  static rotationY(angle: number, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    v[0] = c;\n    v[1] = 0;\n    v[2] = -s;\n    v[3] = 0;\n    v[4] = 0;\n    v[5] = 1;\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = s;\n    v[9] = 0;\n    v[10] = c;\n    v[11] = 0;\n    v[12] = 0;\n    v[13] = 0;\n    v[14] = 0;\n    v[15] = 1;\n\n    result.changeNotify();\n    return result;\n  }\n  static rotationZ(angle: number, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    v[0] = c;\n    v[1] = s;\n    v[2] = 0;\n    v[3] = 0;\n    v[4] = -s;\n    v[5] = c;\n    v[6] = 0;\n    v[7] = 0;\n    v[8] = 0;\n    v[9] = 0;\n    v[10] = 1;\n    v[11] = 0;\n    v[12] = 0;\n    v[13] = 0;\n    v[14] = 0;\n    v[15] = 1;\n\n    result.changeNotify();\n    return result;\n  }\n  static rotation(axis: IVector3Like, angle: number, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    let x = axis.x;\n    let y = axis.y;\n    let z = axis.z;\n    const n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n    const xx = x * x;\n    const yy = y * y;\n    const zz = z * z;\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const oneMinusCosine = 1 - c;\n    v[0] = xx + (1 - xx) * c;\n    v[1] = x * y * oneMinusCosine + z * s;\n    v[2] = x * z * oneMinusCosine - y * s;\n    v[3] = 0;\n    v[4] = x * y * oneMinusCosine - z * s;\n    v[5] = yy + (1 - yy) * c;\n    v[6] = y * z * oneMinusCosine + x * s;\n    v[7] = 0;\n    v[8] = x * z * oneMinusCosine + y * s;\n    v[9] = y * z * oneMinusCosine - x * s;\n    v[10] = zz + (1 - zz) * c;\n    v[11] = 0;\n    v[12] = 0;\n    v[13] = 0;\n    v[14] = 0;\n    v[15] = 1;\n\n    result.changeNotify();\n    return result;\n  }\n  static lookAt(\n    eye: IVector3Like,\n    target: IVector3Like,\n    up: IVector3Like,\n    result?: Matrix4x4,\n  ): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const zAxis = Vector3.normalize(Vector3.sub(eye, target));\n    const xAxis = Vector3.normalize(Vector3.cross(up, zAxis));\n    const yAxis = Vector3.normalize(Vector3.cross(zAxis, xAxis));\n    v[0] = xAxis.x;\n    v[1] = xAxis.y;\n    v[2] = xAxis.z;\n    v[3] = 0;\n    v[4] = yAxis.x;\n    v[5] = yAxis.y;\n    v[6] = yAxis.z;\n    v[7] = 0;\n    v[8] = zAxis.x;\n    v[9] = zAxis.y;\n    v[10] = zAxis.z;\n    v[11] = 0;\n    v[12] = eye.x;\n    v[13] = eye.y;\n    v[14] = eye.z;\n    v[15] = 1;\n\n    result.changeNotify();\n    return result;\n  }\n  static lookAtCubeFace(face: CubeFace, result?: Matrix4x4): Matrix4x4 {\n    switch (face) {\n      case CubeFace.PX:\n        return this.lookAt(Vector3.zero(), Vector3.axisPX(), Vector3.axisNY(), result);\n      case CubeFace.NX:\n        return this.lookAt(Vector3.zero(), Vector3.axisNX(), Vector3.axisNY(), result);\n      case CubeFace.PY:\n        return this.lookAt(Vector3.zero(), Vector3.axisPY(), Vector3.axisPZ(), result);\n      case CubeFace.NY:\n        return this.lookAt(Vector3.zero(), Vector3.axisNY(), Vector3.axisNZ(), result);\n      case CubeFace.PZ:\n        return this.lookAt(Vector3.zero(), Vector3.axisPZ(), Vector3.axisNY(), result);\n      case CubeFace.NZ:\n        return this.lookAt(Vector3.zero(), Vector3.axisNZ(), Vector3.axisNY(), result);\n      default:\n        return null;\n    }\n  }\n  static multiply(m1: Matrix4x4, m2: Matrix4x4, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const a = m1.getArray();\n    const b = m2.getArray();\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b03 = b[3];\n    const b10 = b[4];\n    const b11 = b[5];\n    const b12 = b[6];\n    const b13 = b[7];\n    const b20 = b[8];\n    const b21 = b[9];\n    const b22 = b[10];\n    const b23 = b[11];\n    const b30 = b[12];\n    const b31 = b[13];\n    const b32 = b[14];\n    const b33 = b[15];\n\n    v[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n    v[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n    v[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n    v[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n    v[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n    v[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n    v[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n    v[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n    v[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n    v[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n    v[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n    v[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n    v[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n    v[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n    v[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n    v[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n    result.changeNotify();\n    return result;\n  }\n  static multiplyAffine(m1: Matrix4x4, m2: Matrix4x4, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const a = m1.getArray();\n    const b = m2.getArray();\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b10 = b[4];\n    const b11 = b[5];\n    const b12 = b[6];\n    const b20 = b[8];\n    const b21 = b[9];\n    const b22 = b[10];\n    const b30 = b[12];\n    const b31 = b[13];\n    const b32 = b[14];\n\n    v[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    v[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    v[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    v[3] = 0;\n    v[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    v[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    v[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    v[7] = 0;\n    v[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    v[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    v[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    v[11] = 0;\n    v[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30;\n    v[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31;\n    v[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32;\n    v[15] = 1;\n\n    result.changeNotify();\n    return result;\n  }\n  static translateRight(m: Matrix4x4, t: IVector3Like, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const a = m.getArray();\n    if (v !== a) {\n      v[0] = a[0];\n      v[1] = a[1];\n      v[2] = a[2];\n      v[3] = a[3];\n      v[4] = a[4];\n      v[5] = a[5];\n      v[6] = a[6];\n      v[7] = a[7];\n      v[8] = a[8];\n      v[9] = a[9];\n      v[10] = a[10];\n      v[11] = a[11];\n      v[12] = a[0] * t.x + a[4] * t.y + a[8] * t.z + a[12];\n      v[13] = a[1] * t.x + a[5] * t.y + a[9] * t.z + a[13];\n      v[14] = a[2] * t.x + a[6] * t.y + a[10] * t.z + a[14];\n      v[15] = a[15];\n    } else {\n      const x = a[0] * t.x + a[4] * t.y + a[8] * t.z + a[12];\n      const y = a[1] * t.x + a[5] * t.y + a[9] * t.z + a[13];\n      const z = a[2] * t.x + a[6] * t.y + a[10] * t.z + a[14];\n      v[12] = x;\n      v[13] = y;\n      v[14] = z;\n    }\n    result.changeNotify();\n    return result;\n  }\n  static translateLeft(m: Matrix4x4, t: IVector3Like, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const a = m.getArray();\n    if (v !== a) {\n      v[0] = a[0];\n      v[1] = a[1];\n      v[2] = a[2];\n      v[3] = a[3];\n      v[4] = a[4];\n      v[5] = a[5];\n      v[6] = a[6];\n      v[7] = a[7];\n      v[8] = a[8];\n      v[9] = a[9];\n      v[10] = a[10];\n      v[11] = a[11];\n      v[12] = a[12] + t.x;\n      v[13] = a[13] + t.y;\n      v[14] = a[14] + t.z;\n      v[15] = a[15];\n    } else {\n      v[12] += t.x;\n      v[13] += t.y;\n      v[14] += t.z;\n    }\n    result.changeNotify();\n    return result;\n  }\n  static scaleRight(m: Matrix4x4, s: IVector3Like, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const a = m.getArray();\n    if (v !== a) {\n      v[0] = a[0] * s.x;\n      v[1] = a[1] * s.x;\n      v[2] = a[2] * s.x;\n      v[3] = a[3] * s.x;\n      v[4] = a[4] * s.y;\n      v[5] = a[5] * s.y;\n      v[6] = a[6] * s.y;\n      v[7] = a[7] * s.y;\n      v[8] = a[8] * s.z;\n      v[9] = a[9] * s.z;\n      v[10] = a[10] * s.z;\n      v[11] = a[11] * s.z;\n      v[12] = a[12];\n      v[13] = a[13];\n      v[14] = a[14];\n      v[15] = a[15];\n    } else {\n      v[0] *= s.x;\n      v[1] *= s.x;\n      v[2] *= s.x;\n      v[3] *= s.x;\n      v[4] *= s.y;\n      v[5] *= s.y;\n      v[6] *= s.y;\n      v[7] *= s.y;\n      v[8] *= s.z;\n      v[9] *= s.z;\n      v[10] *= s.z;\n      v[11] *= s.z;\n    }\n\n    result.changeNotify();\n    return result;\n  }\n  static scaleLeft(m: Matrix4x4, s: IVector3Like, result?: Matrix4x4): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const a = m.getArray();\n    if (v !== a) {\n      v[0] = a[0] * s.x;\n      v[1] = a[1] * s.y;\n      v[2] = a[2] * s.z;\n      v[3] = a[3];\n      v[4] = a[4] * s.x;\n      v[5] = a[5] * s.y;\n      v[6] = a[6] * s.z;\n      v[7] = a[7];\n      v[8] = a[8] * s.x;\n      v[9] = a[9] * s.y;\n      v[10] = a[10] * s.z;\n      v[11] = a[11];\n      v[12] = a[12] * s.x;\n      v[13] = a[13] * s.y;\n      v[14] = a[14] * s.z;\n      v[15] = a[15];\n    } else {\n      v[0] *= s.x;\n      v[1] *= s.y;\n      v[2] *= s.z;\n      v[4] *= s.x;\n      v[5] *= s.y;\n      v[6] *= s.z;\n      v[8] *= s.x;\n      v[9] *= s.y;\n      v[10] *= s.z;\n      v[12] *= s.x;\n      v[13] *= s.y;\n      v[14] *= s.z;\n    }\n\n    result.changeNotify();\n    return result;\n  }\n  static rotateRight(\n    m: Matrix4x4,\n    r: Matrix3x3 | Matrix4x4 | Quaternion,\n    result?: Matrix4x4,\n  ): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const a = m.getArray();\n    const b = r instanceof Quaternion ? new Matrix3x3(r) : r;\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = b.m00;\n    const b01 = b.m10;\n    const b02 = b.m20;\n    const b10 = b.m01;\n    const b11 = b.m11;\n    const b12 = b.m21;\n    const b20 = b.m02;\n    const b21 = b.m12;\n    const b22 = b.m22;\n    v[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    v[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    v[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    v[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    v[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    v[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    v[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    v[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    v[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    v[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    v[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    v[11] = a03 * b20 + a13 * b21 + a23 * b22;\n    v[12] = a30;\n    v[13] = a31;\n    v[14] = a32;\n    v[15] = a33;\n\n    result.changeNotify();\n    return result;\n  }\n  static rotateLeft(\n    m: Matrix4x4,\n    r: Matrix3x3 | Matrix4x4 | Quaternion,\n    result?: Matrix4x4,\n  ): Matrix4x4 {\n    result = result || new Matrix4x4();\n    const v = result.getArray();\n    const a = r instanceof Quaternion ? new Matrix3x3(r) : r;\n    const b = m.getArray();\n    const a00 = a.m00;\n    const a01 = a.m10;\n    const a02 = a.m20;\n    const a10 = a.m01;\n    const a11 = a.m11;\n    const a12 = a.m21;\n    const a20 = a.m02;\n    const a21 = a.m12;\n    const a22 = a.m22;\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b03 = b[3];\n    const b10 = b[4];\n    const b11 = b[5];\n    const b12 = b[6];\n    const b13 = b[7];\n    const b20 = b[8];\n    const b21 = b[9];\n    const b22 = b[10];\n    const b23 = b[11];\n    const b30 = b[12];\n    const b31 = b[13];\n    const b32 = b[14];\n    const b33 = b[15];\n\n    v[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    v[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    v[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    v[3] = b03;\n    v[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    v[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    v[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    v[7] = b13;\n    v[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    v[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    v[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    v[11] = b23;\n    v[12] = a00 * b30 + a10 * b31 + a20 * b32;\n    v[13] = a01 * b30 + a11 * b31 + a21 * b32;\n    v[14] = a02 * b30 + a12 * b31 + a22 * b32;\n    v[15] = b33;\n\n    result.changeNotify();\n    return result;\n  }\n  subBy(other: Matrix4x4) {\n    return Matrix4x4.sub(this, other, this);\n  }\n  addBy(other: Matrix4x4) {\n    return Matrix4x4.add(this, other, this);\n  }\n  mulBy(other: Matrix4x4) {\n    return Matrix4x4.mul(this, other, this);\n  }\n  divBy(other: Matrix4x4) {\n    return Matrix4x4.div(this, other, this);\n  }\n  scaleBy(f: number) {\n    return Matrix4x4.scale(this, f, this);\n  }\n  identity() {\n    return Matrix4x4.identity(this);\n  }\n  perspective(fovY: number, aspect: number, znear: number, zfar: number) {\n    return Matrix4x4.perspective(fovY, aspect, znear, zfar, this);\n  }\n  frustum(left: number, right: number, bottom: number, top: number, znear: number, zfar: number) {\n    return Matrix4x4.frustum(left, right, bottom, top, znear, zfar, this);\n  }\n  ortho(left: number, right: number, bottom: number, top: number, znear: number, zfar: number) {\n    return Matrix4x4.ortho(left, right, bottom, top, znear, zfar, this);\n  }\n  isOrtho(): boolean {\n    // assum this is a projection matrix\n    return this._v[15] === 1;\n  }\n  isPerspective(): boolean {\n    // assum this is a projection matrix\n    return this._v[15] === 0;\n  }\n  getNearPlaneWidth(): number {\n    if (this.isPerspective()) {\n      return 2 * this.getNearPlane() / this._v[0];\n    } else {\n      return 2 / this._v[0];\n    }\n  }\n  getNearPlaneHeight(): number {\n    if (this.isPerspective()) {\n      return 2 * this.getNearPlane() / this._v[5];\n    } else {\n      return 2 / this._v[5];\n    }\n  }\n  getNearPlane(): number {\n    // assum this is a projection matrix\n    if (this.isPerspective()) {\n      return this._v[14] / (this._v[10] - 1);\n    } else {\n      return (this._v[14] + 1) / this._v[10];\n    }\n  }\n  getFarPlaneWidth(): number {\n    if (this.isPerspective()) {\n      return this.getNearPlaneWidth() * this.getFarPlane() / this.getNearPlane();\n    } else {\n      return this.getNearPlaneWidth();\n    }\n  }\n  getFarPlaneHeight(): number {\n    if (this.isPerspective()) {\n      return this.getNearPlaneHeight() * this.getFarPlane() / this.getNearPlane();\n    } else {\n      return this.getNearPlaneHeight();\n    }\n  }\n  getFarPlane(): number {\n    // assum this is a projection matrix\n    if (this.isPerspective()) {\n      return this._v[14] / (this._v[10] + 1);\n    } else {\n      return (this._v[14] - 1) / this._v[10];\n    }\n  }\n  getFov(): number {\n    // assum this is a projection matrix\n    return this.isOrtho() ? 0 : Math.atan(1 / this._v[5]) * 2;\n  }\n  getTanHalfFov(): number {\n    // assum this is a projection matrix\n    return this.isOrtho() ? 0 : 1 / this._v[5];\n  }\n  getAspect(): number {\n    // assum this is a projection matrix\n    return this._v[5] / this._v[0];\n  }\n  setNearFar(znear: number, zfar: number): this {\n    if (this.isPerspective()) {\n      this.perspective(this.getFov(), this.getAspect(), znear, zfar);\n    } else {\n      this._v[10] = 2 / (znear - zfar);\n      this._v[14] = (znear + zfar) / (znear - zfar);\n      this.changeNotify();\n    }\n    return this;\n  }\n  translation(t: IVector3Like) {\n    return Matrix4x4.translation(t, this);\n  }\n  scaling(s: IVector3Like) {\n    return Matrix4x4.scaling(s, this);\n  }\n  inplaceInverse() {\n    return Matrix4x4.inverse(this, this);\n  }\n  inplaceInverseAffine() {\n    return Matrix4x4.inverseAffine(this, this);\n  }\n  transpose() {\n    return Matrix4x4.transpose(this, this);\n  }\n  multiplyRight(other: Matrix4x4) {\n    return Matrix4x4.multiply(this, other, this);\n  }\n  multiplyRightAffine(other: Matrix4x4) {\n    return Matrix4x4.multiplyAffine(this, other, this);\n  }\n  multiplyLeft(other: Matrix4x4) {\n    return Matrix4x4.multiply(other, this, this);\n  }\n  multiplyLeftAffine(other: Matrix4x4) {\n    return Matrix4x4.multiplyAffine(other, this, this);\n  }\n  rotationX(angle: number) {\n    return Matrix4x4.rotationX(angle, this);\n  }\n  rotationY(angle: number) {\n    return Matrix4x4.rotationY(angle, this);\n  }\n  rotationZ(angle: number) {\n    return Matrix4x4.rotationZ(angle, this);\n  }\n  rotation(axis: IVector3Like, angle: number) {\n    return Matrix4x4.rotation(axis, angle, this);\n  }\n  translateRight(t: IVector3Like) {\n    return Matrix4x4.translateRight(this, t, this);\n  }\n  translateLeft(t: IVector3Like) {\n    return Matrix4x4.translateLeft(this, t, this);\n  }\n  scaleRight(s: IVector3Like) {\n    return Matrix4x4.scaleRight(this, s, this);\n  }\n  scaleLeft(s: IVector3Like) {\n    return Matrix4x4.scaleLeft(this, s, this);\n  }\n  rotateRight(r: Matrix3x3 | Matrix4x4 | Quaternion) {\n    return Matrix4x4.rotateRight(this, r, this);\n  }\n  rotateLeft(r: Matrix3x3 | Matrix4x4 | Quaternion) {\n    return Matrix4x4.rotateLeft(this, r, this);\n  }\n  lookAt(eye: IVector3Like, target: IVector3Like, up: IVector3Like) {\n    return Matrix4x4.lookAt(eye, target, up, this);\n  }\n  transformPoint(point: IVector3Like, result?: Vector4): Vector4 {\n    result = result || new Vector4();\n    const v = this.getArray();\n    const px = point.x,\n      py = point.y,\n      pz = point.z;\n    return result.set(\n      v[0] * px + v[4] * py + v[8] * pz + v[12],\n      v[1] * px + v[5] * py + v[9] * pz + v[13],\n      v[2] * px + v[6] * py + v[10] * pz + v[14],\n      v[3] * px + v[7] * py + v[11] * pz + v[15],\n    );\n  }\n  transformPointAffine(point: IVector3Like, result?: Vector3): Vector3 {\n    result = result || new Vector3();\n    const v = this.getArray();\n    const px = point.x;\n    const py = point.y;\n    const pz = point.z;\n    return result.set(\n      v[0] * px + v[4] * py + v[8] * pz + v[12],\n      v[1] * px + v[5] * py + v[9] * pz + v[13],\n      v[2] * px + v[6] * py + v[10] * pz + v[14],\n    );\n  }\n  transformVector(vec: IVector3Like, result?: Vector4): Vector4 {\n    result = result || new Vector4();\n    const v = this.getArray();\n    const vx = vec.x,\n      vy = vec.y,\n      vz = vec.z;\n    return result.set(\n      v[0] * vx + v[4] * vy + v[8] * vz,\n      v[1] * vx + v[5] * vy + v[9] * vz,\n      v[2] * vx + v[6] * vy + v[10] * vz,\n      v[3] * vx + v[7] * vy + v[11] * vz,\n    );\n  }\n  transformVectorAffine(vec: IVector3Like, result?: Vector3): Vector3 {\n    result = result || new Vector3();\n    const v = this.getArray();\n    const vx = vec.x,\n      vy = vec.y,\n      vz = vec.z;\n    return result.set(\n      v[0] * vx + v[4] * vy + v[8] * vz,\n      v[1] * vx + v[5] * vy + v[9] * vz,\n      v[2] * vx + v[6] * vy + v[10] * vz,\n    );\n  }\n  transform(vec: IVector4Like, result?: Vector4): Vector4 {\n    result = result || new Vector4();\n    const v = this.getArray();\n    const vx = vec.x,\n      vy = vec.y,\n      vz = vec.z,\n      vw = vec.w;\n    return result.set(\n      v[0] * vx + v[4] * vy + v[8] * vz + v[12] * vw,\n      v[1] * vx + v[5] * vy + v[9] * vz + v[13] * vw,\n      v[2] * vx + v[6] * vy + v[10] * vz + v[14] * vw,\n      v[3] * vx + v[7] * vy + v[11] * vz + v[15] * vw,\n    );\n  }\n  transformAffine(vec: IVector4Like, result?: Vector4): Vector4 {\n    result = result || new Vector4();\n    const v = this.getArray();\n    const vx = vec.x,\n      vy = vec.y,\n      vz = vec.z,\n      vw = vec.w;\n    return result.set(\n      v[0] * vx + v[4] * vy + v[8] * vz + v[12] * vw,\n      v[1] * vx + v[5] * vy + v[9] * vz + v[13] * vw,\n      v[2] * vx + v[6] * vy + v[10] * vz + v[14] * vw,\n      vec.w,\n    );\n  }\n  det() {\n    const v = this._v;\n    const m00 = v[0],\n      m01 = v[1],\n      m02 = v[2],\n      m03 = v[3];\n    const m10 = v[4],\n      m11 = v[5],\n      m12 = v[6],\n      m13 = v[7];\n    const m20 = v[8],\n      m21 = v[9],\n      m22 = v[10],\n      m23 = v[11];\n    const m30 = v[12],\n      m31 = v[13],\n      m32 = v[14],\n      m33 = v[15];\n    const det_22_33 = m22 * m33 - m32 * m23;\n    const det_21_33 = m21 * m33 - m31 * m23;\n    const det_21_32 = m21 * m32 - m31 * m22;\n    const det_20_33 = m20 * m33 - m30 * m23;\n    const det_20_32 = m20 * m32 - m22 * m30;\n    const det_20_31 = m20 * m31 - m30 * m21;\n    const cofact_00 = +(m11 * det_22_33 - m12 * det_21_33 + m13 * det_21_32);\n    const cofact_01 = -(m10 * det_22_33 - m12 * det_20_33 + m13 * det_20_32);\n    const cofact_02 = +(m10 * det_21_33 - m11 * det_20_33 + m13 * det_20_31);\n    const cofact_03 = -(m10 * det_21_32 - m11 * det_20_32 + m12 * det_20_31);\n    return m00 * cofact_00 + m01 * cofact_01 + m02 * cofact_02 + m03 * cofact_03;\n  }\n  det2() {\n    const v = this._v;\n    const m00 = v[0],\n      m01 = v[1],\n      m02 = v[2],\n      m03 = v[3];\n    const m10 = v[4],\n      m11 = v[5],\n      m12 = v[6],\n      m13 = v[7];\n    const m20 = v[8],\n      m21 = v[9],\n      m22 = v[10],\n      m23 = v[11];\n    const m30 = v[12],\n      m31 = v[13],\n      m32 = v[14],\n      m33 = v[15];\n    return (\n      (m00 * m11 - m01 * m10) * (m22 * m33 - m23 * m32) -\n      (m00 * m12 - m02 * m10) * (m21 * m33 - m23 * m31) +\n      (m00 * m13 - m03 * m10) * (m21 * m32 - m22 * m31) +\n      (m01 * m12 - m02 * m11) * (m20 * m33 - m23 * m30) -\n      (m01 * m13 - m03 * m11) * (m20 * m32 - m22 * m30) +\n      (m02 * m13 - m03 * m12) * (m20 * m31 - m21 * m30)\n    );\n  }\n  decompose(scale?: Vector3, rotation?: Quaternion | Matrix3x3 | Matrix4x4, translation?: Vector3) {\n    const v = this._v;\n    if (translation) {\n      translation.set(this._v[12], this._v[13], this._v[14]);\n    }\n    const sign = this.det() <= 0 ? -1 : 1;\n    const sx = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    const sy = Math.sqrt(v[4] * v[4] + v[5] * v[5] + v[6] * v[6]) * sign;\n    const sz = Math.sqrt(v[8] * v[8] + v[9] * v[9] + v[10] * v[10]);\n    if (scale) {\n      scale.set(sx, sy, sz);\n    }\n    if (rotation instanceof Quaternion) {\n      const rotationMatrix = new Matrix3x3(this);\n      const data = rotationMatrix.getArray();\n      data[0] /= sx;\n      data[1] /= sx;\n      data[2] /= sx;\n      data[3] /= sy;\n      data[4] /= sy;\n      data[5] /= sy;\n      data[6] /= sz;\n      data[7] /= sz;\n      data[8] /= sz;\n      rotation.fromRotationMatrix(rotationMatrix);\n    } else if (rotation instanceof Matrix3x3) {\n      const data = rotation.getArray();\n      data[0] = v[0] / sx;\n      data[1] = v[1] / sx;\n      data[2] = v[2] / sx;\n      data[3] = v[4] / sy;\n      data[4] = v[5] / sy;\n      data[5] = v[6] / sy;\n      data[6] = v[8] / sz;\n      data[7] = v[9] / sz;\n      data[8] = v[10] / sz;\n    } else if (rotation instanceof Matrix4x4) {\n      const data = rotation.getArray();\n      data[0] = v[0] / sx;\n      data[1] = v[1] / sx;\n      data[2] = v[2] / sx;\n      data[3] = 0;\n      data[4] = v[4] / sy;\n      data[5] = v[5] / sy;\n      data[6] = v[6] / sy;\n      data[7] = 0;\n      data[8] = v[8] / sz;\n      data[9] = v[9] / sz;\n      data[10] = v[10] / sz;\n      data[11] = 0;\n      data[12] = 0;\n      data[13] = 0;\n      data[14] = 0;\n      data[15] = 1;\n    }\n    return this;\n  }\n  decomposeLookAt(eye?: Vector3, target?: Vector3, up?: Vector3) {\n    eye && eye.set(this._v[12], this._v[13], this._v[14]);\n    up && up.set(this._v[4], this._v[5], this._v[6]);\n    target &&\n      target.set(this._v[12] - this._v[8], this._v[13] - this._v[9], this._v[14] - this._v[10]);\n    return this;\n  }\n  toDualQuaternion(): { real: Quaternion, dual: Quaternion, scale: Vector3 } {\n    const t = new Vector3();\n    const r = new Quaternion();\n    const s = new Vector3();\n    this.decompose(s, r, t);\n    const translation = new Quaternion(this.m03 * 0.5, this.m13 * 0.5, this.m23 * 0.5, 0);\n    const dual = Quaternion.multiply(translation, r);\n    return { real: r, dual: dual, scale: s };\n  }\n  testRotationPart(epsl?: number) {\n    const v = this._v;\n    if (epsl === undefined) epsl = 0.0001;\n    for (let i = 0; i < 3; i++) {\n      const t = v[i * 4] * v[i * 4] + v[i * 4 + 1] * v[i * 4 + 1] + v[i * 4 + 2] * v[i * 4 + 2];\n      if (!numberEquals(t, 1, epsl)) {\n        return false;\n      }\n      const q = v[i] * v[i] + v[4 + i] * v[4 + i] + v[8 + i] * v[8 + i];\n      if (!numberEquals(q, 1, epsl)) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n"],"names":[],"mappings":"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CjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAEjB,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,G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AC;QACzB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACzB,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB,QAAA,MA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AAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAElB,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEtD,MAAM,CAAC,YAAY,EAAE,CAAC;AACtB,QAAA,OAAO,MAAM,CAAC;KACf;AACD,IAAA,OAAO,cAAc,CAAC,EAAa,EAAE,EAAa,EAAE,MAAkB,EAAA;AACpE,QAAA,MAAM,GAAG,MAAM,IAAI,IAAI,SAAS,EAAE,CAAC;AACnC,QAAA,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;AAC5B,QAAA,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;AACxB,QAAA,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;AACxB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAElB,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACT,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACT,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC1C,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACV,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAChD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAChD,QAAA,CAAC,CAAC,EAAE,C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G,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzC,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GA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"}