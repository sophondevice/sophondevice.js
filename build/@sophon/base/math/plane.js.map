{"version":3,"file":"plane.js","sources":["../../../../libs/base/src/math/plane.ts"],"sourcesContent":["import { VectorBase, Vector3, IVector3Like, Vector4, Matrix4x4 } from './vector';\n\nexport class Plane extends VectorBase {\n  /** @internal */\n  private _px: number;\n  /** @internal */\n  private _py: number;\n  /** @internal */\n  private _pz: number;\n  /** @internal */\n  private _nx: number;\n  /** @internal */\n  private _ny: number;\n  /** @internal */\n  private _nz: number;\n  /** @internal */\n  private _npDirty: boolean;\n  constructor();\n  constructor(a: number, b: number, c: number, d: number);\n  constructor(other: Plane);\n  constructor(origin: IVector3Like, normal: IVector3Like);\n  constructor(p0: IVector3Like, p1: IVector3Like, p2: IVector3Like);\n  constructor(arg0?: unknown, arg1?: unknown, arg2?: unknown, arg3?: unknown) {\n    super(4);\n    switch (arguments.length) {\n      case 0: {\n        this._v[0] = 0;\n        this._v[1] = 1;\n        this._v[2] = 0;\n        this._v[3] = 0;\n        this._npDirty = true;\n        break;\n      }\n      case 1: {\n        this.assign((arg0 as Plane).getArray());\n        break;\n      }\n      case 2: {\n        this.initWithOriginNormal(arg0 as IVector3Like, arg1 as IVector3Like);\n        break;\n      }\n      case 3: {\n        this.initWithPoints(arg0 as IVector3Like, arg1 as IVector3Like, arg2 as IVector3Like);\n        break;\n      }\n      case 4: {\n        this.set(arg0 as number, arg1 as number, arg2 as number, arg3 as number);\n        break;\n      }\n      default: {\n        console.log('ERROR: Plane constructor must have 0/2/3/4 arguments');\n      }\n    }\n  }\n  get a() {\n    return this._v[0];\n  }\n  set a(val: number) {\n    this._v[0] = val;\n    this._npDirty = true;\n    this.changeNotify();\n  }\n  get b() {\n    return this._v[1];\n  }\n  set b(val: number) {\n    this._v[1] = val;\n    this._npDirty = true;\n    this.changeNotify();\n  }\n  get c() {\n    return this._v[2];\n  }\n  set c(val: number) {\n    this._v[2] = val;\n    this._npDirty = true;\n    this.changeNotify();\n  }\n  get d() {\n    return this._v[3];\n  }\n  set d(val: number) {\n    this._v[3] = val;\n    this._npDirty = true;\n    this.changeNotify();\n  }\n  get px() {\n    if (this._npDirty) {\n      this._npDirty = false;\n      this._calcNP();\n    }\n    return this._px;\n  }\n  get py() {\n    if (this._npDirty) {\n      this._npDirty = false;\n      this._calcNP();\n    }\n    return this._py;\n  }\n  get pz() {\n    if (this._npDirty) {\n      this._npDirty = false;\n      this._calcNP();\n    }\n    return this._pz;\n  }\n  get nx() {\n    if (this._npDirty) {\n      this._npDirty = false;\n      this._calcNP();\n    }\n    return this._nx;\n  }\n  get ny() {\n    if (this._npDirty) {\n      this._npDirty = false;\n      this._calcNP();\n    }\n    return this._ny;\n  }\n  get nz() {\n    if (this._npDirty) {\n      this._npDirty = false;\n      this._calcNP();\n    }\n    return this._nz;\n  }\n  assign(other: ArrayLike<number>) {\n    this._npDirty = true;\n    return super.assign(other);\n  }\n  set(a: number, b: number, c: number, d: number) {\n    this._v[0] = a;\n    this._v[1] = b;\n    this._v[2] = c;\n    this._v[3] = d;\n    this._npDirty = true;\n    this.changeNotify();\n    return this;\n  }\n  initWithOriginNormal(origin: IVector3Like, normal: IVector3Like) {\n    // assume normal is normalized\n    return this.set(normal.x, normal.y, normal.z, -Vector3.dot(origin, normal));\n  }\n  initWithPoints(p0: IVector3Like, p1: IVector3Like, p2: IVector3Like) {\n    const normal = Vector3.cross(Vector3.sub(p1, p0), Vector3.sub(p2, p0)).inplaceNormalize();\n    return this.initWithOriginNormal(p0, normal);\n  }\n  distanceToPoint(p: IVector3Like): number {\n    return p.x * this._v[0] + p.y * this._v[1] + p.z * this._v[2] + this._v[3];\n  }\n  nearestPointToPoint(p: IVector3Like, result?: Vector3): Vector3 {\n    const d = this.distanceToPoint(p);\n    return (result || new Vector3()).set(\n      p.x - this._v[0] * d,\n      p.y - this._v[1] * d,\n      p.z - this._v[2] * d,\n    );\n  }\n  getNormal(result?: Vector3): Vector3 {\n    return (result || new Vector3()).set(this._v[0], this._v[1], this._v[2]);\n  }\n  inplaceFlip() {\n    return Plane.flip(this, this);\n  }\n  inplaceNormalize() {\n    return Plane.normalize(this, this);\n  }\n  static flip(plane: Plane, result?: Plane): Plane {\n    const v = plane._v;\n    return (result || new Plane()).set(-v[0], -v[1], -v[2], -v[3]);\n  }\n  static normalize(plane: Plane, result?: Plane): Plane {\n    const v = plane._v;\n    const len = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    return (result || new Plane()).set(v[0] / len, v[1] / len, v[2] / len, v[3] / len);\n  }\n  static transform(plane: Plane, matrix: Matrix4x4, result?: Plane): Plane {\n    const v = plane._v;\n    const adjMatrix = Matrix4x4.transpose(Matrix4x4.inverseAffine(matrix));\n    const p = adjMatrix.transform(new Vector4(v[0], v[1], v[2], v[3]));\n    const ret: Plane = result || plane;\n    ret.set(p.x, p.y, p.z, p.w);\n    return ret.inplaceNormalize();\n  }\n  /** @internal */\n  private _calcNP() {\n    this._px = this._v[0] > 0 ? 1 : -1;\n    this._py = this._v[1] > 0 ? 1 : -1;\n    this._pz = this._v[2] > 0 ? 1 : -1;\n    this._nx = -this._px;\n    this._ny = -this._py;\n    this._nz = -this._pz;\n  }\n}\n"],"names":[],"mappings":"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"}