{"version":3,"file":"uniformdata.js","sources":["../../../../libs/device/src/device/uniformdata.ts"],"sourcesContent":["import { PBPrimitiveType } from './builder/types';\nimport type { StructuredValue, UniformBufferLayout, StructuredBuffer } from './gpuobject';\nimport type { TypedArray, TypedArrayConstructor } from '../misc';\n\n\nexport class StructuredBufferData {\n  protected _cache: ArrayBuffer;\n  protected _buffer: StructuredBuffer;\n  protected _size: number;\n  protected _uniformMap: { [name: string]: TypedArray };\n  protected _uniformPositions: { [name: string]: [number, number] };\n  constructor(layout: UniformBufferLayout, buffer?: StructuredBuffer | ArrayBuffer) {\n    this._size = (layout.byteSize + 15) & ~15;\n    if (this._size <= 0) {\n      throw new Error(`UniformBuffer(): invalid uniform buffer byte size: ${this._size}`);\n    }\n    // this._cache = new ArrayBuffer(size);\n    this._uniformMap = {};\n    this._uniformPositions = {};\n    this._cache = buffer instanceof ArrayBuffer ? buffer : null;\n    this._buffer = buffer instanceof ArrayBuffer ? null : buffer;\n    this.init(layout, 0, '');\n  }\n  get byteLength(): number {\n    return this._size;\n  }\n  get buffer(): ArrayBuffer {\n    return this._cache;\n  }\n  get uniforms(): { [name: string]: TypedArray } {\n    return this._uniformMap;\n  }\n  set(name: string, value: StructuredValue) {\n    if (value !== undefined) {\n      const view = this._uniformMap[name];\n      if (view) {\n        if (this._cache) {\n          if (typeof value === 'number') {\n            view[0] = value;\n          } else if ((value as any)?._v) {\n            view.set((value as any)._v);\n          } else if (typeof (value as any)?.length === 'number') {\n            view.set(value as any);\n          } else {\n            throw new Error('invalid uniform value');\n          }\n        } else {\n          if (typeof value === 'number') {\n            view[0] = value;\n            this._buffer.bufferSubData(this._uniformPositions[name][0], view);\n          } else if ((value as any)?._v) {\n            this._buffer.bufferSubData(this._uniformPositions[name][0], (value as any)._v);\n          } else if (typeof (value as any)?.length === 'number') {\n            this._buffer.bufferSubData(this._uniformPositions[name][0], value as TypedArray);\n          } else {\n            throw new Error('invalid uniform value');\n          }\n        }\n      } else {\n        const proto = Object.getPrototypeOf(value);\n        if (proto === Object.getPrototypeOf({})) {\n          this.setStruct(name, value);\n        } else {\n          throw new Error('invalid uniform value');\n        }\n      }\n    }\n  }\n  /** @internal */\n  private setStruct(name: string, value: any) {\n    for (const k in value) {\n      this.set(`${name}.${k}`, value[k]);\n    }\n  }\n  /** @internal */\n  private init(layout: UniformBufferLayout, offset: number, prefix: string): number {\n    for (const entry of layout.entries) {\n      if (entry.subLayout) {\n        offset = this.init(entry.subLayout, offset, `${prefix}${entry.name}.`);\n      } else {\n        const name = `${prefix}${entry.name}`;\n        if (this._uniformPositions[name]) {\n          throw new Error(`UniformBuffer(): duplicate uniform name: ${name}`);\n        }\n        if (entry.offset < offset || entry.byteSize < 0) {\n          throw new Error('UniformBuffer(): invalid layout');\n        }\n        this._uniformPositions[name] = [entry.offset, entry.byteSize];\n        let viewCtor: TypedArrayConstructor = null;\n        switch (entry.type) {\n          case PBPrimitiveType.F32:\n            viewCtor = Float32Array;\n            break;\n          case PBPrimitiveType.U32:\n          case PBPrimitiveType.BOOL:\n            viewCtor = Uint32Array;\n            break;\n          case PBPrimitiveType.I32:\n            viewCtor = Int32Array;\n            break;\n          case PBPrimitiveType.U16:\n          case PBPrimitiveType.U16_NORM:\n          case PBPrimitiveType.F16:\n            viewCtor = Uint16Array;\n            break;\n          case PBPrimitiveType.I16:\n          case PBPrimitiveType.I16_NORM:\n            viewCtor = Int16Array;\n            break;\n          case PBPrimitiveType.U8:\n          case PBPrimitiveType.U8_NORM:\n            viewCtor = Uint8Array;\n            break;\n          case PBPrimitiveType.I8:\n          case PBPrimitiveType.I8_NORM:\n            viewCtor = Int8Array;\n            break;\n        }\n        if (!viewCtor) {\n          throw new Error(`UniformBuffer(): invalid data type for uniform: ${name}`);\n        }\n        if (entry.byteSize % viewCtor.BYTES_PER_ELEMENT) {\n          throw new Error(`UniformBuffer(): invalid byte size for uniform: ${name}`);\n        }\n        if (this._cache) {\n          this._uniformMap[name] = new viewCtor(this._cache, entry.offset, entry.byteSize / viewCtor.BYTES_PER_ELEMENT);\n        } else {\n          this._uniformMap[name] = new viewCtor(1);\n        }\n        offset = entry.offset + entry.byteSize;\n      }\n    }\n    return offset;\n  }\n}\n"],"names":[],"mappings":"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"}