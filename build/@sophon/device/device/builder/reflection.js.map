{"version":3,"file":"reflection.js","sources":["../../../../../libs/device/src/device/builder/reflection.ts"],"sourcesContent":["import type {PBShaderExp, PBGlobalScope, ProgramBuilder} from './programbuilder';\r\n\r\nexport type PBReflectionTagGetter = (scope: PBGlobalScope)=>PBShaderExp;\r\n\r\nexport class PBReflection {\r\n  /** @internal */\r\n  private _builder: ProgramBuilder;\r\n  /** @internal */\r\n  private _tagList: Record<string, PBReflectionTagGetter>;\r\n  /** @internal */\r\n  private _attribList: Record<number, PBShaderExp>;\r\n  constructor(builder: ProgramBuilder) {\r\n    this._builder = builder;\r\n    this._tagList = {};\r\n    this._attribList = {};\r\n  }\r\n  get vertexAttributes(): number[] {\r\n    return this._builder.getVertexAttributes();\r\n  }\r\n  hasVertexAttribute(attrib: number): boolean {\r\n    return this.vertexAttributes.indexOf(attrib) >= 0;\r\n  }\r\n  clear(): void {\r\n    this._tagList = {};\r\n    this._attribList = {};\r\n  }\r\n  tag(name: string): PBShaderExp;\r\n  tag(name: string, getter: PBReflectionTagGetter): void;\r\n  tag(values: Record<string, PBReflectionTagGetter>): void;\r\n  tag(arg0: string|Record<string, PBReflectionTagGetter>, arg1?: PBReflectionTagGetter): PBShaderExp|void {\r\n    if (typeof arg0 === 'string') {\r\n      if (arg1 === undefined) {\r\n        return this.getTag(arg0);\r\n      } else {\r\n        this.addTag(arg0, arg1);\r\n      }\r\n    } else {\r\n      for (const k of Object.keys(arg0)) {\r\n        this.addTag(k, arg0[k]);\r\n      }\r\n    }\r\n  }\r\n  attribute(attrib: number): PBShaderExp {\r\n    return this._attribList[attrib] || null;\r\n  }\r\n  /** @internal */\r\n  setAttrib(attrib: number, exp: PBShaderExp) {\r\n    this._attribList[attrib] = exp;\r\n  }\r\n  /** @internal */\r\n  private addTag(name: string, exp: PBReflectionTagGetter): void {\r\n    this._tagList[name] = exp;\r\n  }\r\n  /** @internal */\r\n  private getTag(name: string): PBShaderExp {\r\n    const getter = this._tagList[name];\r\n    return getter ? getter(this._builder.globalScope) : null;\r\n  }\r\n}\r\n"],"names":[],"mappings":";MAIa,YAAY,CAAA;AAEf,IAAA,QAAQ,CAAiB;AAEzB,IAAA,QAAQ,CAAwC;AAEhD,IAAA,WAAW,CAA8B;AACjD,IAAA,WAAA,CAAY,OAAuB,EAAA;AACjC,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;KACvB;AACD,IAAA,IAAI,gBAAgB,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;KAC5C;AACD,IAAA,kBAAkB,CAAC,MAAc,EAAA;QAC/B,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACnD;IACD,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;KACvB;IAID,GAAG,CAAC,IAAkD,EAAE,IAA4B,EAAA;AAClF,QAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,IAAI,IAAI,KAAK,SAAS,EAAE;AACtB,gBAAA,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACzB,aAAA;AACF,SAAA;AAAM,aAAA;YACL,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACjC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,aAAA;AACF,SAAA;KACF;AACD,IAAA,SAAS,CAAC,MAAc,EAAA;QACtB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;KACzC;IAED,SAAS,CAAC,MAAc,EAAE,GAAgB,EAAA;AACxC,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;KAChC;IAEO,MAAM,CAAC,IAAY,EAAE,GAA0B,EAAA;AACrD,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;KAC3B;AAEO,IAAA,MAAM,CAAC,IAAY,EAAA;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnC,QAAA,OAAO,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;KAC1D;AACF;;;;"}