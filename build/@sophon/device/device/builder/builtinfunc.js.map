{"version":3,"file":"builtinfunc.js","sources":["../../../../../libs/device/src/device/builder/builtinfunc.ts"],"sourcesContent":["import * as typeinfo from './types';\nimport { ASTExpression, ASTUnaryFunc, ASTBinaryFunc } from './ast';\nimport { PBShaderExp } from './base';\nimport { PBDeviceNotSupport, PBOverloadingMatchError, PBParamLengthError, PBParamTypeError, PBParamValueError } from './errors';\nimport type { ExpValueType, ProgramBuilder } from './programbuilder';\n\nconst genTypeList = [\n  [typeinfo.typeF32, typeinfo.typeF32Vec2, typeinfo.typeF32Vec3, typeinfo.typeF32Vec4],\n  [typeinfo.typeI32, typeinfo.typeI32Vec2, typeinfo.typeI32Vec3, typeinfo.typeI32Vec4],\n  [typeinfo.typeU32, typeinfo.typeU32Vec2, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4],\n  [typeinfo.typeBool, typeinfo.typeBVec2, typeinfo.typeBVec3, typeinfo.typeBVec4],\n];\n\nconst genMatrixTypeList = [\n  typeinfo.typeMat2, typeinfo.typeMat2x3, typeinfo.typeMat2x4,\n  typeinfo.typeMat3x2, typeinfo.typeMat3, typeinfo.typeMat3x4,\n  typeinfo.typeMat4x2, typeinfo.typeMat4x3, typeinfo.typeMat4\n];\n\ntype WrapFunction = (pb: ProgramBuilder, name: string, ...args: ExpValueType[]) => PBShaderExp;\n\nfunction matchFunctionOverloadings(pb: ProgramBuilder, name: string, ...args: ExpValueType[]) {\n  const bit = pb.getDeviceType() === 'webgl' ? MASK_WEBGL1 : (pb.getDeviceType() === 'webgl2' ? MASK_WEBGL2 : MASK_WEBGPU);\n  const overloadings = builtinFunctionsAll?.[name].overloads.filter(val => !!(val[1] & bit)).map(val => val[0]);\n  if (!overloadings || overloadings.length === 0) {\n    throw new PBDeviceNotSupport(`builtin shader function '${name}'`);\n  }\n  const argsNonArray = args.map(val => pb.normalizeExpValue(val));\n  const matchResult = pb._matchFunctionOverloading(overloadings, argsNonArray);\n  if (!matchResult) {\n    throw new PBOverloadingMatchError(name);\n  }\n  return matchResult;\n}\nfunction callBuiltinChecked(pb: ProgramBuilder, matchResult: [typeinfo.PBFunctionTypeInfo, ASTExpression[]]) {\n  return pb.$callFunction(matchResult[0].name, matchResult[1], matchResult[0].returnType);\n}\nfunction callBuiltin(pb: ProgramBuilder, name: string, ...args: ExpValueType[]): PBShaderExp {\n  return callBuiltinChecked(pb, matchFunctionOverloadings(pb, name, ...args));\n}\n\nfunction genMatrixType(name: string, shaderTypeMask: number, r: typeinfo.PBTypeInfo, args: (typeinfo.PBPrimitiveTypeInfo)[])\n  : [typeinfo.PBFunctionTypeInfo, number][] {\n  const result: [typeinfo.PBFunctionTypeInfo, number][] = [];\n  for (let i = 0; i < genMatrixTypeList.length; i++) {\n    const returnType = r || genMatrixTypeList[i];\n    const argTypes = args.map(arg => {\n      return { type: arg || genMatrixTypeList[i] };\n    });\n    result.push([new typeinfo.PBFunctionTypeInfo(name, returnType, argTypes), shaderTypeMask]);\n  }\n  return result;\n}\n\nfunction genType(name: string, shaderTypeMask, r: typeinfo.PBTypeInfo | number, args: (typeinfo.PBTypeInfo | number)[], vecOnly?: boolean)\n  : [typeinfo.PBFunctionTypeInfo, number][] {\n  if (args.findIndex(val => (typeof val === 'number')) < 0) {\n    return [[new typeinfo.PBFunctionTypeInfo(name, r as typeinfo.PBPrimitiveTypeInfo, args.map(arg => ({ type: arg as typeinfo.PBTypeInfo }))), shaderTypeMask]];\n  } else {\n    const result: [typeinfo.PBFunctionTypeInfo, number][] = [];\n    let i = vecOnly ? 1 : 0;\n    for (; i < 4; i++) {\n      const returnType = typeof r === 'number' ? genTypeList[r][i] : r;\n      const argTypes = args.map(arg => {\n        if (typeof arg === 'number') {\n          return { type: genTypeList[arg][i] };\n        } else {\n          return { type: arg };\n        }\n      });\n      result.push([new typeinfo.PBFunctionTypeInfo(name, returnType, argTypes), shaderTypeMask]);\n    }\n    return result;\n  }\n}\n\nfunction unaryFunc(a: ASTExpression, op: string, type: typeinfo.PBTypeInfo): PBShaderExp {\n  const exp = new PBShaderExp('', type);\n  exp.$ast = new ASTUnaryFunc(a, op, type);\n  return exp;\n}\n\nfunction binaryFunc(\n  a: ASTExpression,\n  b: ASTExpression,\n  op: string,\n  type: typeinfo.PBTypeInfo\n): PBShaderExp {\n  const exp = new PBShaderExp('', type);\n  exp.$ast = new ASTBinaryFunc(a, b, op, type);\n  return exp;\n}\n\nconst MASK_WEBGL1 = 1 << 0;\nconst MASK_WEBGL2 = 1 << 1;\nconst MASK_WEBGPU = 1 << 2;\nconst MASK_WEBGL = MASK_WEBGL1 | MASK_WEBGL2;\nconst MASK_ALL = MASK_WEBGL | MASK_WEBGPU;\n\nconst builtinFunctionsAll: { [name: string]: { overloads?: [typeinfo.PBFunctionTypeInfo, number][], normalizeFunc?: WrapFunction } } = {\n  add_2: {\n    overloads: [\n      ...genType('', MASK_ALL, 0, [0, 0]),\n      ...genType('', MASK_ALL, 1, [1, 1]),\n      ...genType('', MASK_ALL, 2, [2, 2]),\n      ...genType('', MASK_ALL, 3, [3, 3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32, typeinfo.typeF32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32, typeinfo.typeF32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32, typeinfo.typeF32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec4, typeinfo.typeF32]),\n\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32, typeinfo.typeI32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32, typeinfo.typeI32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeI32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32Vec4, typeinfo.typeI32]),\n\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32, typeinfo.typeU32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32Vec2, typeinfo.typeU32]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32, typeinfo.typeU32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32Vec3, typeinfo.typeU32]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32, typeinfo.typeU32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32Vec4, typeinfo.typeU32]),\n\n      ...genMatrixType('', MASK_ALL, null, [null, null]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '+', matchResult[0].returnType);\n    }\n  },\n  add: {\n    overloads: [],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length < 2) {\n        throw new PBParamLengthError('add');\n      }\n      let result = args[0];\n      for (let i = 1; i < args.length; i++) {\n        result = pb.add_2(result as number | PBShaderExp, args[i] as number | PBShaderExp);\n      }\n      return result as PBShaderExp;\n    }\n  },\n  sub: {\n    overloads: [\n      ...genType('', MASK_ALL, 0, [0, 0]),\n      ...genType('', MASK_ALL, 1, [1, 1]),\n      ...genType('', MASK_ALL, 2, [2, 2]),\n      ...genType('', MASK_ALL, 3, [3, 3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32, typeinfo.typeF32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32, typeinfo.typeF32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32, typeinfo.typeF32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec4, typeinfo.typeF32]),\n\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32, typeinfo.typeI32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32, typeinfo.typeI32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeI32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32Vec4, typeinfo.typeI32]),\n\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32, typeinfo.typeU32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32Vec2, typeinfo.typeU32]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32, typeinfo.typeU32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32Vec3, typeinfo.typeU32]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32, typeinfo.typeU32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32Vec4, typeinfo.typeU32]),\n\n      ...genMatrixType('', MASK_ALL, null, [null, null]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '-', matchResult[0].returnType);\n    }\n  },\n  div: {\n    overloads: [\n      ...genType('', MASK_ALL, 0, [0, 0]),\n      ...genType('', MASK_ALL, 1, [1, 1]),\n      ...genType('', MASK_ALL, 2, [2, 2]),\n      ...genType('', MASK_ALL, 3, [3, 3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32, typeinfo.typeF32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32, typeinfo.typeF32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32, typeinfo.typeF32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec4, typeinfo.typeF32]),\n\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32, typeinfo.typeI32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32, typeinfo.typeI32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeI32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32Vec4, typeinfo.typeI32]),\n\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32, typeinfo.typeU32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32Vec2, typeinfo.typeU32]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32, typeinfo.typeU32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32Vec3, typeinfo.typeU32]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32, typeinfo.typeU32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32Vec4, typeinfo.typeU32]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '/', matchResult[0].returnType);\n    }\n  },\n  mul_2: {\n    overloads: [\n      ...genType('', MASK_ALL, 0, [0, 0]),\n      ...genType('', MASK_ALL, 1, [1, 1]),\n      ...genType('', MASK_ALL, 2, [2, 2]),\n      ...genType('', MASK_ALL, 3, [3, 3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32, typeinfo.typeF32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32, typeinfo.typeF32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32, typeinfo.typeF32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec4, typeinfo.typeF32]),\n\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32, typeinfo.typeI32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32, typeinfo.typeI32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeI32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32Vec4, typeinfo.typeI32]),\n\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32, typeinfo.typeU32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32Vec2, typeinfo.typeU32]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32, typeinfo.typeU32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32Vec3, typeinfo.typeU32]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32, typeinfo.typeU32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32Vec4, typeinfo.typeU32]),\n\n      ...genMatrixType('', MASK_ALL, null, [typeinfo.typeF32, null]),\n      ...genMatrixType('', MASK_ALL, null, [null, typeinfo.typeF32]),\n\n      ...genType('', MASK_ALL, typeinfo.typeMat2, [typeinfo.typeMat2, typeinfo.typeMat2]),\n      ...genType('', MASK_ALL, typeinfo.typeMat3x2, [typeinfo.typeMat2, typeinfo.typeMat3x2]),\n      ...genType('', MASK_ALL, typeinfo.typeMat4x2, [typeinfo.typeMat2, typeinfo.typeMat4x2]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeMat2, typeinfo.typeF32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec2, typeinfo.typeMat2]),\n\n      ...genType('', MASK_ALL, typeinfo.typeMat2x3, [typeinfo.typeMat2x3, typeinfo.typeMat2]),\n      ...genType('', MASK_ALL, typeinfo.typeMat3, [typeinfo.typeMat2x3, typeinfo.typeMat3x2]),\n      ...genType('', MASK_ALL, typeinfo.typeMat4x3, [typeinfo.typeMat2x3, typeinfo.typeMat4x2]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeMat2x3, typeinfo.typeF32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec3, typeinfo.typeMat2x3]),\n\n      ...genType('', MASK_ALL, typeinfo.typeMat2x4, [typeinfo.typeMat2x4, typeinfo.typeMat2]),\n      ...genType('', MASK_ALL, typeinfo.typeMat3x4, [typeinfo.typeMat2x4, typeinfo.typeMat3x2]),\n      ...genType('', MASK_ALL, typeinfo.typeMat4, [typeinfo.typeMat2x4, typeinfo.typeMat4x2]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeMat2x4, typeinfo.typeF32Vec2]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec4, typeinfo.typeMat2x4]),\n\n      ...genType('', MASK_ALL, typeinfo.typeMat2, [typeinfo.typeMat3x2, typeinfo.typeMat2x3]),\n      ...genType('', MASK_ALL, typeinfo.typeMat3x2, [typeinfo.typeMat3x2, typeinfo.typeMat3]),\n      ...genType('', MASK_ALL, typeinfo.typeMat4x2, [typeinfo.typeMat3x2, typeinfo.typeMat4x3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeMat3x2, typeinfo.typeF32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec2, typeinfo.typeMat3x2]),\n\n      ...genType('', MASK_ALL, typeinfo.typeMat2x3, [typeinfo.typeMat3, typeinfo.typeMat2x3]),\n      ...genType('', MASK_ALL, typeinfo.typeMat3, [typeinfo.typeMat3, typeinfo.typeMat3]),\n      ...genType('', MASK_ALL, typeinfo.typeMat4x3, [typeinfo.typeMat3, typeinfo.typeMat4x3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeMat3, typeinfo.typeF32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeMat3]),\n\n      ...genType('', MASK_ALL, typeinfo.typeMat2x4, [typeinfo.typeMat3x4, typeinfo.typeMat2x3]),\n      ...genType('', MASK_ALL, typeinfo.typeMat3x4, [typeinfo.typeMat3x4, typeinfo.typeMat3]),\n      ...genType('', MASK_ALL, typeinfo.typeMat4, [typeinfo.typeMat3x4, typeinfo.typeMat4x3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeMat3x4, typeinfo.typeF32Vec3]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec4, typeinfo.typeMat3x4]),\n\n      ...genType('', MASK_ALL, typeinfo.typeMat2, [typeinfo.typeMat4x2, typeinfo.typeMat2x4]),\n      ...genType('', MASK_ALL, typeinfo.typeMat3x2, [typeinfo.typeMat4x2, typeinfo.typeMat3x4]),\n      ...genType('', MASK_ALL, typeinfo.typeMat4x2, [typeinfo.typeMat4x2, typeinfo.typeMat4]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeMat4x2, typeinfo.typeF32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec2, typeinfo.typeMat4x2]),\n\n      ...genType('', MASK_ALL, typeinfo.typeMat2x3, [typeinfo.typeMat4x3, typeinfo.typeMat2x4]),\n      ...genType('', MASK_ALL, typeinfo.typeMat3, [typeinfo.typeMat4x3, typeinfo.typeMat3x4]),\n      ...genType('', MASK_ALL, typeinfo.typeMat4x3, [typeinfo.typeMat4x3, typeinfo.typeMat4]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeMat4x3, typeinfo.typeF32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec3, typeinfo.typeMat4x3]),\n\n      ...genType('', MASK_ALL, typeinfo.typeMat2x4, [typeinfo.typeMat4, typeinfo.typeMat2x4]),\n      ...genType('', MASK_ALL, typeinfo.typeMat3x4, [typeinfo.typeMat4, typeinfo.typeMat3x4]),\n      ...genType('', MASK_ALL, typeinfo.typeMat4, [typeinfo.typeMat4, typeinfo.typeMat4]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeMat4, typeinfo.typeF32Vec4]),\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec4, typeinfo.typeMat4]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '*', matchResult[0].returnType);\n    }\n  },\n  mul: {\n    overloads: [],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length < 2) {\n        throw new PBParamLengthError('mul');\n      }\n      let result = args[0];\n      for (let i = 1; i < args.length; i++) {\n        result = pb.mul_2(result as number | PBShaderExp, args[i] as number | PBShaderExp);\n      }\n      return result as PBShaderExp;\n    }\n  },\n  mod: {\n    overloads: [\n      ...genType('mod', MASK_ALL, 0, [0, 0]),\n      ...genType('mod', MASK_ALL, 1, [1, 1]),\n      ...genType('mod', MASK_ALL, 2, [2, 2]),\n      ...genType('mod', MASK_ALL, 3, [3, 3]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      const argType = matchResult[1][0].getType();\n      const isIntegerType = argType.isPrimitiveType() && (argType.scalarType === typeinfo.PBPrimitiveType.I32 || argType.scalarType === typeinfo.PBPrimitiveType.U32);\n      if (pb.getDeviceType() === 'webgl' && isIntegerType) {\n        throw new PBDeviceNotSupport('integer modulus');\n      }\n      if (pb.getDeviceType() === 'webgpu' || isIntegerType) {\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '%', matchResult[0].returnType);\n      } else {\n        return callBuiltinChecked(pb, matchResult);\n      }\n    }\n  },\n  radians: { overloads: genType('radians', MASK_ALL, 0, [0]) },\n  degrees: { overloads: genType('degrees', MASK_ALL, 0, [0]) },\n  sin: { overloads: genType('sin', MASK_ALL, 0, [0]) },\n  cos: { overloads: genType('cos', MASK_ALL, 0, [0]) },\n  tan: { overloads: genType('tan', MASK_ALL, 0, [0]) },\n  asin: { overloads: genType('asin', MASK_ALL, 0, [0]) },\n  acos: { overloads: genType('acos', MASK_ALL, 0, [0]) },\n  atan: { overloads: genType('atan', MASK_ALL, 0, [0]) },\n  atan2: {\n    overloads: [\n      ...genType('atan', MASK_WEBGL, 0, [0, 0]),\n      ...genType('atan2', MASK_WEBGPU, 0, [0, 0]),\n    ]\n  },\n  sinh: { overloads: genType('sinh', MASK_WEBGL2 | MASK_WEBGPU, 0, [0]) },\n  cosh: { overloads: genType('cosh', MASK_WEBGL2 | MASK_WEBGPU, 0, [0]) },\n  tanh: { overloads: genType('tanh', MASK_WEBGL2 | MASK_WEBGPU, 0, [0]) },\n  asinh: { overloads: genType('asinh', MASK_WEBGL2, 0, [0]) },\n  acosh: { overloads: genType('acosh', MASK_WEBGL2, 0, [0]) },\n  atanh: { overloads: genType('atanh', MASK_WEBGL2, 0, [0]) },\n  pow: { overloads: genType('pow', MASK_ALL, 0, [0, 0]) },\n  exp: { overloads: genType('exp', MASK_ALL, 0, [0]) },\n  exp2: { overloads: genType('exp2', MASK_ALL, 0, [0]) },\n  log: { overloads: genType('log', MASK_ALL, 0, [0]) },\n  log2: { overloads: genType('log2', MASK_ALL, 0, [0]) },\n  sqrt: { overloads: genType('sqrt', MASK_ALL, 0, [0]) },\n  inverseSqrt: {\n    overloads: [\n      ...genType('inversesqrt', MASK_WEBGL, 0, [0]),\n      ...genType('inverseSqrt', MASK_WEBGPU, 0, [0])\n    ]\n  },\n  abs: {\n    overloads: [\n      ...genType('abs', MASK_ALL, 0, [0]),\n      ...genType('abs', MASK_WEBGL2 | MASK_WEBGPU, 1, [1]),\n      ...genType('abs', MASK_WEBGPU, 2, [2])\n    ]\n  },\n  sign: {\n    overloads: [\n      ...genType('sign', MASK_ALL, 0, [0]),\n      ...genType('sign', MASK_WEBGL2, 1, [1])\n    ]\n  },\n  floor: { overloads: genType('floor', MASK_ALL, 0, [0]) },\n  ceil: { overloads: genType('ceil', MASK_ALL, 0, [0]) },\n  fract: { overloads: genType('fract', MASK_ALL, 0, [0]) },\n  fma: { overloads: genType('fma', MASK_WEBGPU, 0, [0, 0, 0]) },\n  round: { overloads: genType('round', MASK_WEBGPU, 0, [0]) },\n  trunc: { overloads: genType('trunc', MASK_WEBGPU, 0, [0]) },\n  // TODO: modf\n  min: {\n    overloads: [\n      ...genType('min', MASK_ALL, 0, [0, 0]),\n      ...genType('min', MASK_WEBGL2 | MASK_WEBGPU, 1, [1, 1]),\n      ...genType('min', MASK_WEBGL2 | MASK_WEBGPU, 2, [2, 2]),\n    ]\n  },\n  max: {\n    overloads: [\n      ...genType('max', MASK_ALL, 0, [0, 0]),\n      ...genType('max', MASK_WEBGL2 | MASK_WEBGPU, 1, [1, 1]),\n      ...genType('max', MASK_WEBGL2 | MASK_WEBGPU, 2, [2, 2]),\n    ]\n  },\n  clamp: {\n    overloads: [\n      ...genType('clamp', MASK_ALL, 0, [0, 0, 0]),\n      ...genType('clamp', MASK_WEBGL2 | MASK_WEBGPU, 1, [1, 1, 1]),\n      ...genType('clamp', MASK_WEBGL2 | MASK_WEBGPU, 2, [2, 2, 2]),\n    ]\n  },\n  mix: {\n    overloads: [\n      ...genType('mix', MASK_ALL, 0, [0, 0, 0]),\n      ...genType('mix', MASK_ALL, 0, [0, 0, typeinfo.typeF32]),\n    ]\n  },\n  step: { overloads: genType('step', MASK_ALL, 0, [0, 0]) },\n  smoothStep: { overloads: genType('smoothstep', MASK_ALL, 0, [0, 0, 0]) },\n  isnan: { overloads: genType('isnan', MASK_WEBGL2, 3, [0]) },\n  isinf: { overloads: genType('isinf', MASK_WEBGL2, 3, [0]) },\n  length: { overloads: genType('length', MASK_ALL, typeinfo.typeF32, [0]) },\n  distance: { overloads: genType('distance', MASK_ALL, typeinfo.typeF32, [0, 0]) },\n  dot: {\n    overloads: [\n      ...genType('dot', MASK_ALL, typeinfo.typeF32, [0, 0], true),\n      ...genType('dot', MASK_WEBGPU, typeinfo.typeI32, [1, 1], true),\n      ...genType('dot', MASK_WEBGPU, typeinfo.typeU32, [2, 2], true),\n    ]\n  },\n  cross: { overloads: genType('cross', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]) },\n  normalize: { overloads: genType('normalize', MASK_ALL, 0, [0], true) },\n  faceForward: {\n    overloads: [\n      ...genType('faceforward', MASK_WEBGL, 0, [0, 0, 0], true),\n      ...genType('faceForward', MASK_WEBGPU, 0, [0, 0, 0], true),\n    ]\n  },\n  reflect: { overloads: genType('reflect', MASK_ALL, 0, [0, 0], true) },\n  refract: { overloads: genType('refract', MASK_ALL, 0, [0, 0, typeinfo.typeF32], true) },\n  frexp: {\n    overloads: [\n      ...genType('frexp', MASK_WEBGPU, typeinfo.typeFrexpResult, [typeinfo.typeF32]),\n      ...genType('frexp', MASK_WEBGPU, typeinfo.typeFrexpResultVec2, [typeinfo.typeF32Vec2]),\n      ...genType('frexp', MASK_WEBGPU, typeinfo.typeFrexpResultVec3, [typeinfo.typeF32Vec3]),\n      ...genType('frexp', MASK_WEBGPU, typeinfo.typeFrexpResultVec4, [typeinfo.typeF32Vec4]),\n    ]\n  },\n  outerProduct: {\n    overloads: [\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat2, [typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat3, [typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat4, [typeinfo.typeF32Vec4, typeinfo.typeF32Vec4]),\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat2x3, [typeinfo.typeF32Vec3, typeinfo.typeF32Vec2]),\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat3x2, [typeinfo.typeF32Vec2, typeinfo.typeF32Vec3]),\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat2x4, [typeinfo.typeF32Vec4, typeinfo.typeF32Vec2]),\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat4x2, [typeinfo.typeF32Vec2, typeinfo.typeF32Vec4]),\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat3x4, [typeinfo.typeF32Vec4, typeinfo.typeF32Vec3]),\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat4x3, [typeinfo.typeF32Vec3, typeinfo.typeF32Vec4]),\n    ]\n  },\n  transpose: {\n    overloads: [\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat2, [typeinfo.typeMat2]),\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat3, [typeinfo.typeMat3]),\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat4, [typeinfo.typeMat4]),\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat2x3, [typeinfo.typeMat3x2]),\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat3x2, [typeinfo.typeMat2x3]),\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat2x4, [typeinfo.typeMat4x2]),\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat4x2, [typeinfo.typeMat2x4]),\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat3x4, [typeinfo.typeMat4x3]),\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat4x3, [typeinfo.typeMat3x4]),\n    ]\n  },\n  determinant: {\n    overloads: [\n      ...genType('determinant', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeMat2]),\n      ...genType('determinant', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeMat3]),\n      ...genType('determinant', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeMat4]),\n    ]\n  },\n  inverse: {\n    overloads: [\n      ...genType('inverse', MASK_WEBGL2, typeinfo.typeMat2, [typeinfo.typeMat2]),\n      ...genType('inverse', MASK_WEBGL2, typeinfo.typeMat3, [typeinfo.typeMat3]),\n      ...genType('inverse', MASK_WEBGL2, typeinfo.typeMat4, [typeinfo.typeMat4]),\n    ]\n  },\n  lessThan: {\n    overloads: [\n      ...genType('lessThan', MASK_ALL, 3, [0, 0]),\n      ...genType('lessThan', MASK_ALL, 3, [1, 1]),\n      ...genType('lessThan', MASK_ALL, 3, [2, 2]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      const argType = matchResult[1][0].getType();\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '<', matchResult[0].returnType);\n      } else {\n        return callBuiltinChecked(pb, matchResult);\n      }\n    }\n  },\n  lessThanEqual: {\n    overloads: [\n      ...genType('lessThanEqual', MASK_ALL, 3, [0, 0]),\n      ...genType('lessThanEqual', MASK_ALL, 3, [1, 1]),\n      ...genType('lessThanEqual', MASK_ALL, 3, [2, 2]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      const argType = matchResult[1][0].getType();\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '<=', matchResult[0].returnType);\n      } else {\n        return callBuiltinChecked(pb, matchResult);\n      }\n    }\n  },\n  greaterThan: {\n    overloads: [\n      ...genType('greaterThan', MASK_ALL, 3, [0, 0]),\n      ...genType('greaterThan', MASK_ALL, 3, [1, 1]),\n      ...genType('greaterThan', MASK_ALL, 3, [2, 2]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      const argType = matchResult[1][0].getType();\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '>', matchResult[0].returnType);\n      } else {\n        return callBuiltinChecked(pb, matchResult);\n      }\n    }\n  },\n  greaterThanEqual: {\n    overloads: [\n      ...genType('greaterThanEqual', MASK_ALL, 3, [0, 0]),\n      ...genType('greaterThanEqual', MASK_ALL, 3, [1, 1]),\n      ...genType('greaterThanEqual', MASK_ALL, 3, [2, 2]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      const argType = matchResult[1][0].getType();\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '>=', matchResult[0].returnType);\n      } else {\n        return callBuiltinChecked(pb, matchResult);\n      }\n    }\n  },\n  compEqual: {\n    overloads: [\n      ...genType('equal', MASK_ALL, 3, [0, 0]),\n      ...genType('equal', MASK_ALL, 3, [1, 1]),\n      ...genType('equal', MASK_ALL, 3, [2, 2]),\n      ...genType('equal', MASK_ALL, 3, [3, 3]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      const argType = matchResult[1][0].getType();\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '==', matchResult[0].returnType);\n      } else {\n        return callBuiltinChecked(pb, matchResult);\n      }\n    }\n  },\n  compNotEqual: {\n    overloads: [\n      ...genType('notEqual', MASK_ALL, 3, [0, 0]),\n      ...genType('notEqual', MASK_ALL, 3, [1, 1]),\n      ...genType('notEqual', MASK_ALL, 3, [2, 2]),\n      ...genType('notEqual', MASK_ALL, 3, [3, 3]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      const argType = matchResult[1][0].getType();\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '!=', matchResult[0].returnType);\n      } else {\n        return callBuiltinChecked(pb, matchResult);\n      }\n    }\n  },\n  equal: {\n    overloads: [\n      ...genType('equal', MASK_ALL, typeinfo.typeBool, [0, 0]),\n      ...genType('equal', MASK_ALL, typeinfo.typeBool, [1, 1]),\n      ...genType('equal', MASK_ALL, typeinfo.typeBool, [2, 2]),\n      ...genType('equal', MASK_ALL, typeinfo.typeBool, [3, 3]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      const argType = matchResult[1][0].getType();\n      if (pb.getDeviceType() === 'webgpu' && argType.isPrimitiveType() && !argType.isScalarType()) {\n        return pb.all(pb.compEqual(args[0] as PBShaderExp, args[1] as PBShaderExp))\n      } else {\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '==', matchResult[0].returnType);\n      }\n    }\n  },\n  notEqual: {\n    overloads: [\n      ...genType('notEqual', MASK_ALL, typeinfo.typeBool, [0, 0]),\n      ...genType('notEqual', MASK_ALL, typeinfo.typeBool, [1, 1]),\n      ...genType('notEqual', MASK_ALL, typeinfo.typeBool, [2, 2]),\n      ...genType('notEqual', MASK_ALL, typeinfo.typeBool, [3, 3]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      const argType = matchResult[1][0].getType();\n      if (pb.getDeviceType() === 'webgpu' && argType.isPrimitiveType() && !argType.isScalarType()) {\n        return pb.any(pb.compNotEqual(args[0] as PBShaderExp, args[1] as PBShaderExp))\n      } else {\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '!=', matchResult[0].returnType);\n      }\n    }\n  },\n  any: { overloads: genType('any', MASK_ALL, typeinfo.typeBool, [3], true) },\n  all: { overloads: genType('all', MASK_ALL, typeinfo.typeBool, [3], true) },\n  not: {\n    overloads: genType('not', MASK_ALL, 3, [3]),\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      const argType = matchResult[1][0].getType();\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\n        return unaryFunc(matchResult[1][0], '!', matchResult[0].returnType);\n      } else {\n        return callBuiltinChecked(pb, matchResult);\n      }\n    }\n  },\n  neg: {\n    overloads: [\n      ...genType('neg', MASK_ALL, 0, [0]),\n      ...genType('neg', MASK_ALL, 1, [1]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      return unaryFunc(matchResult[1][0], '-', matchResult[0].returnType);\n    }\n  },\n  or: {\n    overloads: genType('or', MASK_ALL, typeinfo.typeBool, [3, 3]),\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '||', matchResult[0].returnType);\n    }\n  },\n  compOr: {\n    overloads: genType('compOr', MASK_WEBGL2 | MASK_WEBGPU, 3, [3, 3]),\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '|', matchResult[0].returnType);\n    }\n  },\n  and_2: {\n    overloads: genType('and', MASK_ALL, typeinfo.typeBool, [3, 3]),\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '&&', matchResult[0].returnType);\n    }\n  },\n  and: {\n    overloads: [],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length < 2) {\n        throw new PBParamLengthError('and');\n      }\n      let result = args[0];\n      for (let i = 1; i < args.length; i++) {\n        result = pb.and_2(result as PBShaderExp | number | boolean, args[i] as PBShaderExp | number | boolean);\n      }\n      return result as PBShaderExp;\n    }\n  },\n  compAnd: {\n    overloads: genType('compAnd', MASK_WEBGL2 | MASK_WEBGPU, 3, [3, 3]),\n    normalizeFunc(pb, name, ...args) {\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '&', matchResult[0].returnType);\n    }\n  },\n  arrayLength: {\n    normalizeFunc(pb, name, ...args) {\n      if (pb.getDeviceType() !== 'webgpu') {\n        throw new PBDeviceNotSupport('arrayLength builtin function');\n      }\n      if (args.length !== 1\n        || !(args[0] instanceof PBShaderExp)\n        || !args[0].$ast.getType().isPointerType()\n        || !((args[0].$ast.getType() as typeinfo.PBPointerTypeInfo).pointerType.isArrayType())) {\n        throw new PBParamTypeError('arrayLength');\n      }\n      return pb.$callFunction(name, [args[0].$ast], typeinfo.typeU32);\n    }\n  },\n  select: {\n    overloads: [\n      ...genType('select', MASK_WEBGPU, 0, [0, 0, typeinfo.typeBool]),\n      ...genType('select', MASK_WEBGPU, 1, [1, 1, typeinfo.typeBool]),\n      ...genType('select', MASK_WEBGPU, 2, [2, 2, typeinfo.typeBool]),\n      ...genType('select', MASK_WEBGPU, 3, [3, 3, typeinfo.typeBool]),\n      ...genType('select', MASK_WEBGPU, 0, [0, 0, 3], true),\n      ...genType('select', MASK_WEBGPU, 1, [1, 1, 3], true),\n      ...genType('select', MASK_WEBGPU, 2, [2, 2, 3], true),\n      ...genType('select', MASK_WEBGPU, 3, [3, 3, 3], true),\n      ...genType('mix', MASK_WEBGL2, 0, [0, 0, 3]),\n      ...genType('mix', MASK_WEBGL2, 1, [1, 1, 3]),\n      ...genType('mix', MASK_WEBGL2, 2, [2, 2, 3]),\n    ]\n  },\n  floatBitsToInt: { overloads: genType('floatBitsToInt', MASK_WEBGL2, 1, [0]) },\n  floatBitsToUint: { overloads: genType('floatBitsToUint', MASK_WEBGL2, 2, [0]) },\n  intBitsToFloat: { overloads: genType('intBitsToFloat', MASK_WEBGL2, 0, [1]) },\n  uintBitsToFloat: { overloads: genType('uintBitsToFloat', MASK_WEBGL2, 0, [2]) },\n  pack4x8snorm: { overloads: genType('pack4x8snorm', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeF32Vec4]) },\n  unpack4x8snorm: { overloads: genType('unpack4x8snorm', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeU32]) },\n  pack4x8unorm: { overloads: genType('pack4x8unorm', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeF32Vec4]) },\n  unpack4x8unorm: { overloads: genType('unpack4x8unorm', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeU32]) },\n  pack2x16snorm: {\n    overloads: [\n      ...genType('pack2x16snorm', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\n      ...genType('packSnorm2x16', MASK_WEBGL2, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\n    ]\n  },\n  unpack2x16snorm: {\n    overloads: [\n      ...genType('unpack2x16snorm', MASK_WEBGPU, typeinfo.typeF32Vec2, [typeinfo.typeU32]),\n      ...genType('unpackSnorm2x16', MASK_WEBGL2, typeinfo.typeF32Vec2, [typeinfo.typeU32])\n    ]\n  },\n  pack2x16unorm: {\n    overloads: [\n      ...genType('pack2x16unorm', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\n      ...genType('packUnorm2x16', MASK_WEBGL2, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\n    ]\n  },\n  unpack2x16unorm: {\n    overloads: [\n      ...genType('unpack2x16unorm', MASK_WEBGPU, typeinfo.typeF32Vec2, [typeinfo.typeU32]),\n      ...genType('unpackUnorm2x16', MASK_WEBGL2, typeinfo.typeF32Vec2, [typeinfo.typeU32]),\n    ]\n  },\n  pack2x16float: {\n    overloads: [\n      ...genType('pack2x16float', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\n      ...genType('packHalf2x16', MASK_WEBGL2, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\n    ]\n  },\n  unpack2x16float: {\n    overloads: [\n      ...genType('unpack2x16float', MASK_WEBGPU, typeinfo.typeF32Vec2, [typeinfo.typeU32]),\n      ...genType('unpackHalf2x16', MASK_WEBGL2, typeinfo.typeF32Vec2, [typeinfo.typeU32]),\n    ]\n  },\n  matrixCompMult: { overloads: genMatrixType('matrixCompMult', MASK_WEBGL, null, [null, null]) },\n  dpdx: {\n    overloads: [\n      ...genType('dFdx', MASK_WEBGL, 0, [0]),\n      ...genType('dpdx', MASK_WEBGPU, 0, [0]),\n    ]\n  },\n  dpdy: {\n    overloads: [\n      ...genType('dFdy', MASK_WEBGL, 0, [0]),\n      ...genType('dpdy', MASK_WEBGPU, 0, [0]),\n    ]\n  },\n  fwidth: { overloads: genType('fwidth', MASK_ALL, 0, [0]) },\n  dpdxCoarse: {\n    overloads: [\n      ...genType('dpdxCoarse', MASK_WEBGPU, 0, [0]),\n      ...genType('dFdx', MASK_WEBGL, 0, [0]),\n    ]\n  },\n  dpdxFine: {\n    overloads: [\n      ...genType('dpdxFine', MASK_WEBGPU, 0, [0]),\n      ...genType('dFdx', MASK_WEBGL, 0, [0]),\n    ]\n  },\n  dpdyCoarse: {\n    overloads: [\n      ...genType('dpdyCoarse', MASK_WEBGPU, 0, [0]),\n      ...genType('dFdy', MASK_WEBGL, 0, [0]),\n    ]\n  },\n  dpdyFine: {\n    overloads: [\n      ...genType('dpdyFine', MASK_WEBGPU, 0, [0]),\n      ...genType('dFdy', MASK_WEBGL, 0, [0]),\n    ]\n  },\n  // textureDimensions(tex: PBShaderExp, level?: number|PBShaderExp);\n  textureDimensions: {\n    overloads: [\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTex1D, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeITex1D, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeUTex1D, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTex2D, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeITex2D, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeUTex2D, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTex2DArray, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeITex2DArray, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeUTex2DArray, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTex3D, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeITex3D, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeUTex3D, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexCube, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeITexCube, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeUTexCube, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexCubeArray, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeITexCubeArray, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeUTexCubeArray, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexMultisampled2D]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeITexMultisampled2D]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeUTexMultisampled2D]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexDepth2D, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexDepth2DArray, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexDepthCube, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexDepthCubeArray, typeinfo.typeI32]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexDepthMultisampled2D]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba8unorm]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba8snorm]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba8uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba8sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba16uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba16sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba16float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rg32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rg32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rg32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_r32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_r32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_r32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba8unorm]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba8snorm]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba8uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba8sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba16uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba16sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba16float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rg32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rg32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rg32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_r32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_r32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_r32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba8unorm]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba8snorm]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba8uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba8sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba16uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba16sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba16float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rg32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rg32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rg32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_r32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_r32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_r32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba8unorm]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba8snorm]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba8uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba8sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba16uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba16sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba16float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rg32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rg32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rg32float]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_r32uint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_r32sint]),\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_r32float]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTex1D, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTex2D, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeITex1D, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeITex2D, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeUTex1D, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeUTex2D, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTex2DArray, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeITex2DArray, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeUTex2DArray, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTexCube, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeITexCube, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeUTexCube, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec3, [typeinfo.typeTex3D, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec3, [typeinfo.typeITex3D, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec3, [typeinfo.typeUTex3D, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTexDepth2D, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTexDepthCube, typeinfo.typeI32]),\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTexDepth2DArray, typeinfo.typeI32]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length < 1 || args.length > 2) {\n        throw new PBParamLengthError('textureDimensions');\n      }\n      if (!(args[0] instanceof PBShaderExp)) {\n        throw new PBParamValueError('textureDimensions', 'tex');\n      }\n      const texType = args[0].$ast.getType();\n      if (!texType.isTextureType()) {\n        throw new PBParamTypeError('textureDimensions', 'tex');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        if (texType.isMultisampledTexture() || texType.isStorageTexture()) {\n          if (args[1] !== undefined) {\n            throw new PBParamValueError('textureDimensions', 'level');\n          }\n        }\n        return callBuiltin(pb, name, ...args);\n      } else if (pb.getDeviceType() === 'webgl2') {\n        const tex = args[0];\n        const level = args[1] || 0;\n        return texType.is1DTexture() ? callBuiltin(pb, name, tex, level).x : callBuiltin(pb, name, tex, level);\n      }\n    }\n  },\n  // textureGather(tex: PBShaderExp, sampler: PBShaderExp, coords: PBShaderExp);\n  // textureGather(component: number|PBShaderExp, tex: PBShaderExp, sampler: PBShaderExp, coords: PBShaderExp);\n  textureGather: {\n    overloads: [\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeI32, typeinfo.typeTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeITex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeI32, typeinfo.typeUTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeI32, typeinfo.typeTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeITexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeI32, typeinfo.typeUTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\n    ]\n  },\n  // textureArrayGather(tex: PBShaderExp, sampler: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp);\n  // textureArrayGather(component: number|PBShaderExp, tex: PBShaderExp, sampler: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp);\n  textureArrayGather: {\n    overloads: [\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeI32, typeinfo.typeTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeITex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeI32, typeinfo.typeUTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeI32, typeinfo.typeTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeITexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeI32, typeinfo.typeUTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\n    ]\n  },\n  // textureGatherCompare(tex: PBShaderExp, samplerCompare: PBShaderExp, coords: PBShaderExp, depthRef: number|PBShaderExp);\n  textureGatherCompare: {\n    overloads: [\n      ...genType('textureGatherCompare', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('textureGatherCompare', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n    ]\n  },\n  // textureArrayGatherCompare(tex: PBShaderExp, samplerCompare: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, depthRef: number|PBShaderExp);\n  textureArrayGatherCompare: {\n    overloads: [\n      ...genType('textureGatherCompare', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2DArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32]),\n      ...genType('textureGatherCompare', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32]),\n    ]\n  },\n  // textureLoad(tex: PBShaderExp, coords: number|PBShaderExp, levelOrSampleIndex: number|PBShaderExp);\n  textureLoad: {\n    overloads: [\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex1D, typeinfo.typeI32, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeITex1D, typeinfo.typeI32, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeUTex1D, typeinfo.typeI32, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeITex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeUTex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeITex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeUTex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexMultisampled2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeITexMultisampled2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeUTexMultisampled2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeI32Vec2]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthMultisampled2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex1D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeU32Vec4, [typeinfo.typeTexExternal, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeITex1D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeI32Vec4, [typeinfo.typeITex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeI32Vec4, [typeinfo.typeITex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeUTex1D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeU32Vec4, [typeinfo.typeUTex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeU32Vec4, [typeinfo.typeUTex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length === 0) {\n        throw new PBParamLengthError('textureLoad');\n      }\n      if (!(args[0] instanceof PBShaderExp)) {\n        throw new PBParamValueError('textureLoad', 'tex');\n      }\n      const texType = args[0].$ast.getType();\n      if (!texType.isTextureType()) {\n        throw new PBParamTypeError('textureLoad', 'tex');\n      }\n      if (pb.getDeviceType() === 'webgl2') {\n        if (args.length !== 3) {\n          throw new PBParamLengthError('textureLoad');\n        }\n        if (texType.is1DTexture()) {\n          if (typeof args[1] === 'number') {\n            if (!Number.isInteger(args[1])) {\n              throw new PBParamTypeError('textureLoad', 'coord');\n            }\n          } else if (args[1] instanceof PBShaderExp) {\n            const coordType = args[1].$ast.getType();\n            if (!coordType.isPrimitiveType() || !coordType.isScalarType() || coordType.scalarType !== typeinfo.PBPrimitiveType.I32) {\n              throw new PBParamTypeError('textureLoad', 'coord');\n            }\n          } else {\n            throw new PBParamTypeError('textureLoad', 'coord');\n          }\n          args[1] = pb.ivec2(args[1], 0);\n        }\n      } else if (pb.getDeviceType() === 'webgpu' && texType.isExternalTexture()) {\n        args = args.slice(0, 2);\n      }\n      return callBuiltin(pb, name, ...args);\n    }\n  },\n  // textureArrayLoad(tex: PBShaderExp, coords: number|PBShaderExp, arrayIndex: number|PBShaderExp, level: number|PBShaderExp);\n  textureArrayLoad: {\n    overloads: [\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeITex2DArray, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeUTex2DArray, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32]),\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeI32Vec4, [typeinfo.typeITex2DArray, typeinfo.typeI32Vec3, typeinfo.typeI32]),\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeU32Vec4, [typeinfo.typeUTex2DArray, typeinfo.typeI32Vec3, typeinfo.typeI32]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (pb.getDeviceType() === 'webgl2') {\n        if (args.length !== 4) {\n          throw new PBParamLengthError('textureArrayLoad');\n        }\n        const tex = args[0];\n        const coords = pb.ivec3(args[1] as PBShaderExp, args[2] as PBShaderExp);\n        const level = args[3];\n        return callBuiltin(pb, name, tex, coords, level);\n      } else {\n        return callBuiltin(pb, name, ...args);\n      }\n    },\n  },\n  // textureStore(tex: PBShaderExp, coords: number|PBShaderExp, value: PBShaderExp);\n  textureStore: {\n    overloads: [\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba8unorm, typeinfo.typeU32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba8snorm, typeinfo.typeU32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba8uint, typeinfo.typeU32, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba8sint, typeinfo.typeU32, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba16uint, typeinfo.typeU32, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba16sint, typeinfo.typeU32, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba16float, typeinfo.typeU32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba32uint, typeinfo.typeU32, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba32sint, typeinfo.typeU32, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba32float, typeinfo.typeU32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rg32uint, typeinfo.typeU32, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rg32sint, typeinfo.typeU32, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rg32float, typeinfo.typeU32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_r32uint, typeinfo.typeU32, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_r32sint, typeinfo.typeU32, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_r32float, typeinfo.typeU32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba8unorm, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba8snorm, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba8uint, typeinfo.typeU32Vec2, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba8sint, typeinfo.typeU32Vec2, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba16uint, typeinfo.typeU32Vec2, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba16sint, typeinfo.typeU32Vec2, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba16float, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba32uint, typeinfo.typeU32Vec2, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba32sint, typeinfo.typeU32Vec2, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba32float, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rg32uint, typeinfo.typeU32Vec2, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rg32sint, typeinfo.typeU32Vec2, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rg32float, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_r32uint, typeinfo.typeU32Vec2, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_r32sint, typeinfo.typeU32Vec2, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_r32float, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba8unorm, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba8snorm, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba8uint, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba8sint, typeinfo.typeU32Vec3, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba16uint, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba16sint, typeinfo.typeU32Vec3, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba16float, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba32uint, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba32sint, typeinfo.typeU32Vec3, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba32float, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rg32uint, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rg32sint, typeinfo.typeU32Vec3, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rg32float, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_r32uint, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_r32sint, typeinfo.typeU32Vec3, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_r32float, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\n    ]\n  },\n  // textureArrayStore(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, value: PBShaderExp);\n  textureArrayStore: {\n    overloads: [\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba8unorm, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba8snorm, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba8uint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba8sint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba16uint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba16sint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba16float, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba32uint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba32sint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba32float, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rg32uint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rg32sint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rg32float, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_r32uint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeU32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_r32sint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32Vec4]),\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_r32float, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\n\n    ]\n  },\n  // textureNumLayers(tex: PBShaderExp);\n  textureNumLayers: {\n    overloads: [\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTex2DArray]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITex2DArray]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTex2DArray]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexCubeArray]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITexCubeArray]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTexCubeArray]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepth2DArray]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepthCubeArray]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_r32float]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_r32sint]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_r32uint]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rg32float]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rg32sint]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rg32uint]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba16float]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba16sint]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba16uint]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba32float]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba32sint]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba32uint]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba8sint]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba8snorm]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba8uint]),\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba8unorm]),\n    ]\n  },\n  // textureNumLevels(tex: PBShaderExp);\n  textureNumLevels: {\n    overloads: [\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTex1D]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITex1D]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTex1D]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTex2D]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITex2D]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTex2D]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTex2DArray]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITex2DArray]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTex2DArray]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTex3D]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITex3D]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTex3D]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexCube]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITexCube]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTexCube]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexCubeArray]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITexCubeArray]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTexCubeArray]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepth2D]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepth2DArray]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepthCube]),\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepthCubeArray]),\n    ]\n  },\n  // textureNumSamples(tex: PBShaderExp);\n  textureNumSamples: {\n    overloads: [\n      ...genType('textureNumSamples', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexMultisampled2D]),\n      ...genType('textureNumSamples', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITexMultisampled2D]),\n      ...genType('textureNumSamples', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTexMultisampled2D]),\n      ...genType('textureNumSamples', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepthMultisampled2D]),\n    ]\n  },\n  // textureSample(tex: texture, coords: number|PBShaderExp);\n  textureSample: {\n    overloads: [\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex1D, typeinfo.typeSampler, typeinfo.typeF32]),\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex1D, typeinfo.typeF32Vec2]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeF32Vec2]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec2]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeF32Vec3]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec3]),\n      ...genType('texture2D', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTex1D, typeinfo.typeF32Vec2]),\n      ...genType('texture2D', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2]),\n      ...genType('texture2D', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeF32Vec2]),\n      ...genType('texture2D', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec2]),\n      ...genType('textureCube', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3]),\n      ...genType('textureCube', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec3]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 2) {\n        throw new PBParamLengthError('textureSample');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureSample', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType()) {\n        throw new PBParamTypeError('textureSample', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        if (texType.isExternalTexture()) {\n          return pb.textureLoad(tex, pb.ivec2(args[1] as any), 0);\n        } else {\n          const sampler = pb.getDefaultSampler(tex, false);\n          const coords = args[1];\n          const ret = callBuiltin(pb, name, tex, sampler, coords);\n          if (ret.$ast.getType().typeId === typeinfo.typeF32.typeId) {\n            return pb.vec4(ret, 0, 0, 1);\n          } else {\n            return ret;\n          }\n        }\n      } else {\n        pb.getDefaultSampler(tex, false);\n        if (texType.is1DTexture()) {\n          if (args[1] instanceof PBShaderExp) {\n            const coordType = args[1].$ast.getType();\n            if (!coordType.isPrimitiveType() || !coordType.isScalarType() || coordType.scalarType !== typeinfo.PBPrimitiveType.F32) {\n              throw new PBParamTypeError('textureSample', 'coord');\n            }\n          } else if (typeof args[1] !== 'number') {\n            throw new PBParamTypeError('textureSample', 'coord');\n          }\n          args[1] = pb.vec2(args[1], 0);\n        }\n        return callBuiltin(pb, name, ...args);\n      }\n    }\n  },\n  // textureArraySample(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp)\n  textureArraySample: {\n    overloads: [\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeF32Vec3]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 3) {\n        throw new PBParamLengthError('textureArraySample');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureArraySample', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType()) {\n        throw new PBParamTypeError('textureArraySample', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        const sampler = pb.getDefaultSampler(tex, false);\n        const coords = args[1];\n        const arrayIndex = args[2];\n        const ret = callBuiltin(pb, name, tex, sampler, coords, arrayIndex);\n        if (ret.$ast.getType().typeId === typeinfo.typeF32.typeId) {\n          return pb.vec4(ret, 0, 0, 1);\n        } else {\n          return ret;\n        }\n      } else if (pb.getDeviceType() === 'webgl2') {\n        pb.getDefaultSampler(tex, false);\n        const coords = args[1];\n        const arrayIndex = args[2];\n        const coordsComposit = pb.vec3(coords as number | PBShaderExp, pb.float(arrayIndex as PBShaderExp));\n        return callBuiltin(pb, name, tex, coordsComposit);\n      }\n    }\n  },\n  // textureSampleBias(tex: PBShaderExp, coords: PBShaderExp, bias: number|PBShaderExp)\n  textureSampleBias: {\n    overloads: [\n      ...genType('textureSampleBias', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('textureSampleBias', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('textureSampleBias', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('texture2D', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('textureCube', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 3) {\n        throw new PBParamLengthError('textureSampleBias');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureSampleBias', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType()) {\n        throw new PBParamTypeError('textureSampleBias', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        const sampler = pb.getDefaultSampler(tex, false);\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2]);\n      } else {\n        pb.getDefaultSampler(tex, false);\n        return callBuiltin(pb, name, ...args);\n      }\n    }\n  },\n  // textureArraySampleBias(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, bias: number|PBShaderExp)\n  textureArraySampleBias: {\n    overloads: [\n      ...genType('textureSampleBias', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32]),\n      ...genType('textureSampleBias', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 4) {\n        throw new PBParamLengthError('textureArraySampleBias');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureArraySampleBias', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType()) {\n        throw new PBParamTypeError('textureArraySampleBias', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        const sampler = pb.getDefaultSampler(tex, false);\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2], args[3]);\n      } else if (pb.getDeviceType() === 'webgl2') {\n        pb.getDefaultSampler(tex, false);\n        const coords = args[1];\n        const arrayIndex = args[2];\n        const coordsComposit = pb.vec3(coords as number | PBShaderExp, pb.float(arrayIndex as PBShaderExp));\n        return callBuiltin(pb, name, tex, coordsComposit, args[3]);\n      }\n    }\n  },\n  // textureSampleCompare(tex: PBShaderExp, coords: PBShaderExp, depthRef: number|PBShaderExp)\n  textureSampleCompare: {\n    overloads: [\n      ...genType('textureSampleCompare', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('textureSampleCompare', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec3]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec4]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 3) {\n        throw new PBParamLengthError('textureSampleCompare');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureSampleCompare', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType() || !texType.isDepthTexture()) {\n        throw new PBParamTypeError('textureSampleCompare', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        const sampler = pb.getDefaultSampler(args[0] as PBShaderExp, true);\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2]);\n      } else {\n        pb.getDefaultSampler(args[0] as PBShaderExp, true);\n        let coordsComposite: PBShaderExp;\n        if (texType.isCubeTexture() || texType.isArrayTexture()) {\n          coordsComposite = pb.vec4(args[1] as any, args[2] as any);\n        } else {\n          coordsComposite = pb.vec3(args[1] as any, args[2] as any);\n        }\n        return callBuiltin(pb, name, tex, coordsComposite);\n      }\n    }\n  },\n  // textureArraySampleCompare(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, depthRef: number|PBShaderExp)\n  textureArraySampleCompare: {\n    overloads: [\n      ...genType('textureSampleCompare', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32]),\n      ...genType('textureSampleCompare', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeF32Vec4]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 4) {\n        throw new PBParamLengthError('textureArraySampleCompare');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureArraySampleCompare', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType() || !texType.isDepthTexture()) {\n        throw new PBParamTypeError('textureArraySampleCompare', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        const sampler = pb.getDefaultSampler(args[0] as PBShaderExp, true);\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2], args[3]);\n      } else {\n        pb.getDefaultSampler(args[0] as PBShaderExp, true);\n        const coordsComposite = pb.vec4(args[1] as any, pb.float(args[2] as any), args[3] as any);\n        return callBuiltin(pb, name, tex, coordsComposite);\n      }\n    }\n  },\n  // textureSampleLevel(tex: PBShaderExp, coords: PBShaderExp, level: number|PBShaderExp)\n  textureSampleLevel: {\n    overloads: [\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('texture2DLodEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('texture2DLodEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('texture2DLodEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('textureCubeLodEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('textureCubeLodEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureSampleLevel', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType()) {\n        throw new PBParamTypeError('textureSampleLevel', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        if (texType.isExternalTexture()) {\n          return pb.textureLoad(tex, pb.ivec2(args[1] as any), 0);\n        } else {\n          const sampler = pb.getDefaultSampler(tex, false);\n          const level = texType.isDepthTexture() && (typeof args[2] === 'number' || (args[2] instanceof PBShaderExp && args[2].$ast.getType().typeId === typeinfo.typeF32.typeId)) ? pb.int(args[2]) : args[2];\n          const ret = texType.isExternalTexture() ? callBuiltin(pb, name, tex, sampler, args[1]) : callBuiltin(pb, name, tex, sampler, args[1], level);\n          if (ret.$ast.getType().typeId === typeinfo.typeF32.typeId) {\n            return pb.vec4(ret, 0, 0, 1);\n          } else {\n            return ret;\n          }\n        }\n      } else {\n        pb.getDefaultSampler(tex, false);\n        return texType.isExternalTexture() ? callBuiltin(pb, name, args[0], args[1], 0) : callBuiltin(pb, name, args[0], args[1], args[2]);\n      }\n    }\n  },\n  // textureArraySampleLevel(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, level: number|PBShaderExp)\n  textureArraySampleLevel: {\n    overloads: [\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32]),\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32]),\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeI32]),\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeI32]),\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 4) {\n        throw new PBParamLengthError('textureArraySampleLevel');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureArraySampleLevel', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType()) {\n        throw new PBParamTypeError('textureArraySampleLevel', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        const sampler = pb.getDefaultSampler(tex, false);\n        const level = texType.isDepthTexture() && (typeof args[3] === 'number' || (args[3] instanceof PBShaderExp && args[3].$ast.getType().typeId === typeinfo.typeF32.typeId)) ? pb.int(args[3]) : args[3];\n        const ret = callBuiltin(pb, name, tex, sampler, args[1], args[2], level);\n        if (ret.$ast.getType().typeId === typeinfo.typeF32.typeId) {\n          return pb.vec4(ret, 0, 0, 1);\n        } else {\n          return ret;\n        }\n      } else {\n        pb.getDefaultSampler(tex, false);\n        const coordsComposite = pb.vec3(args[1] as any, pb.float(args[2] as any));\n        return callBuiltin(pb, name, tex, coordsComposite, args[3]);\n      }\n    }\n  },\n  // textureSampleCompare(tex: PBShaderExp, coords: PBShaderExp, depthRef: number|PBShaderExp)\n  textureSampleCompareLevel: {\n    overloads: [\n      ...genType('textureSampleCompareLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeF32]),\n      ...genType('textureSampleCompareLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec3, typeinfo.typeF32]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec4]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 3) {\n        throw new PBParamLengthError('textureSampleCompareLevel');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureSampleCompareLevel', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType() || !texType.isDepthTexture()) {\n        throw new PBParamTypeError('textureSampleCompareLevel', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        const sampler = pb.getDefaultSampler(tex, true);\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2]);\n      } else {\n        pb.getDefaultSampler(args[0] as PBShaderExp, true);\n        let coordsComposite: PBShaderExp;\n        if (texType.isCubeTexture() || texType.isArrayTexture()) {\n          coordsComposite = pb.vec4(args[1] as any, args[2] as any);\n        } else {\n          coordsComposite = pb.vec3(args[1] as any, args[2] as any);\n        }\n        return texType.isCubeTexture() ? callBuiltin(pb, name, tex, coordsComposite) : callBuiltin(pb, name, tex, coordsComposite, 0);\n      }\n    }\n  },\n  // textureArraySampleCompareLevel(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, depthRef: number|PBShaderExp)\n  textureArraySampleCompareLevel: {\n    overloads: [\n      ...genType('textureSampleCompareLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32]),\n      ...genType('textureSampleCompareLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32]),\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeF32Vec4]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 4) {\n        throw new PBParamLengthError('textureArraySampleCompareLevel');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureArraySampleCompareLevel', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType() || !texType.isDepthTexture()) {\n        throw new PBParamTypeError('textureArraySampleCompareLevel', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        const sampler = pb.getDefaultSampler(tex, true);\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2], args[3]);\n      } else {\n        pb.getDefaultSampler(args[0] as PBShaderExp, true);\n        const coordsComposite = pb.vec4(args[1] as any, pb.float(args[2] as any), args[3] as any);\n        return callBuiltin(pb, name, tex, coordsComposite);\n      }\n    }\n  },\n  // textureSampleGrad(tex: PBShaderExp, coords: PBShaderExp, ddx: PBShaderExp, ddy: PBShaderExp)\n  textureSampleGrad: {\n    overloads: [\n      ...genType('textureSampleGrad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\n      ...genType('textureSampleGrad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\n      ...genType('textureSampleGrad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\n      ...genType('textureGrad', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\n      ...genType('textureGrad', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\n      ...genType('textureGrad', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\n      ...genType('texture2DGradEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\n      ...genType('textureCubeGradEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 4) {\n        throw new PBParamLengthError('textureSampleGrad');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureSampleGrad', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType()) {\n        throw new PBParamTypeError('textureSampleGrad', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        const sampler = pb.getDefaultSampler(tex, false);\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2], args[3]);\n      } else {\n        pb.getDefaultSampler(tex, false);\n        return callBuiltin(pb, name, ...args);\n      }\n    }\n  },\n  // textureArraySampleGrad(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, ddx: PBShaderExp, ddy: PBShaderExp)\n  textureArraySampleGrad: {\n    overloads: [\n      ...genType('textureSampleGrad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\n      ...genType('textureSampleGrad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\n      ...genType('textureGrad', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeF32Vec3, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\n    ],\n    normalizeFunc(pb, name, ...args) {\n      if (args.length !== 5) {\n        throw new PBParamLengthError('textureArraySampleGrad');\n      }\n      const tex = args[0];\n      if (!(tex instanceof PBShaderExp)) {\n        throw new PBParamTypeError('textureArraySampleGrad', 'texture');\n      }\n      const texType = tex.$ast.getType();\n      if (!texType.isTextureType() || !texType.isArrayTexture()) {\n        throw new PBParamTypeError('textureArraySampleGrad', 'texture');\n      }\n      if (pb.getDeviceType() === 'webgpu') {\n        const sampler = pb.getDefaultSampler(tex, false);\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2], args[3], args[4]);\n      } else {\n        pb.getDefaultSampler(tex, false);\n        const coordsComposite = pb.vec3(args[1] as any, pb.float(args[2] as any));\n        return callBuiltin(pb, name, tex, coordsComposite, args[3], args[4]);\n      }\n    }\n  },\n  storageBarrier: { overloads: genType('storageBarrier', MASK_WEBGPU, typeinfo.typeVoid, []) },\n  workgroupBarrier: { overloads: genType('workgroupBarrier', MASK_WEBGPU, typeinfo.typeVoid, []) },\n};\n\n/** @internal */\nexport function setBuiltinFuncs(cls: typeof ProgramBuilder) {\n  for (const k of Object.keys(builtinFunctionsAll)) {\n    cls.prototype[k] = function (this: ProgramBuilder, ...args: ExpValueType[]): PBShaderExp {\n      const normalizeFunc = builtinFunctionsAll?.[k]?.normalizeFunc || callBuiltin;\n      return normalizeFunc(this, k, ...args);\n    }\n  }\n}\n"],"names":["typeinfo.typeF32","typeinfo.typeF32Vec2","typeinfo.typeF32Vec3","typeinfo.typeF32Vec4","typeinfo.typeI32","typeinfo.typeI32Vec2","typeinfo.typeI32Vec3","typeinfo.typeI32Vec4","typeinfo.typeU32","typeinfo.typeU32Vec2","typeinfo.typeU32Vec3","typeinfo.typeU32Vec4","typeinfo.typeBool","typeinfo.typeBVec2","typeinfo.typeBVec3","typeinfo.typeBVec4","typeinfo.typeMat2","typeinfo.typeMat2x3","typeinfo.typeMat2x4","typeinfo.typeMat3x2","typeinfo.typeMat3","typeinfo.typeMat3x4","typeinfo.typeMat4x2","typeinfo.typeMat4x3","typeinfo.typeMat4","typeinfo.PBFunctionTypeInfo","typeinfo.PBPrimitiveType","typeinfo.typeFrexpResult","typeinfo.typeFrexpResultVec2","typeinfo.typeFrexpResultVec3","typeinfo.typeFrexpResultVec4","typeinfo.typeTex1D","typeinfo.typeITex1D","typeinfo.typeUTex1D","typeinfo.typeTex2D","typeinfo.typeITex2D","typeinfo.typeUTex2D","typeinfo.typeTex2DArray","typeinfo.typeITex2DArray","typeinfo.typeUTex2DArray","typeinfo.typeTex3D","typeinfo.typeITex3D","typeinfo.typeUTex3D","typeinfo.typeTexCube","typeinfo.typeITexCube","typeinfo.typeUTexCube","typeinfo.typeTexCubeArray","typeinfo.typeITexCubeArray","typeinfo.typeUTexCubeArray","typeinfo.typeTexMultisampled2D","typeinfo.typeITexMultisampled2D","typeinfo.typeUTexMultisampled2D","typeinfo.typeTexDepth2D","typeinfo.typeTexDepth2DArray","typeinfo.typeTexDepthCube","typeinfo.typeTexDepthCubeArray","typeinfo.typeTexDepthMultisampled2D","typeinfo.typeTexStorage1D_rgba8unorm","typeinfo.typeTexStorage1D_rgba8snorm","typeinfo.typeTexStorage1D_rgba8uint","typeinfo.typeTexStorage1D_rgba8sint","typeinfo.typeTexStorage1D_rgba16uint","typeinfo.typeTexStorage1D_rgba16sint","typeinfo.typeTexStorage1D_rgba16float","typeinfo.typeTexStorage1D_rgba32uint","typeinfo.typeTexStorage1D_rgba32sint","typeinfo.typeTexStorage1D_rgba32float","typeinfo.typeTexStorage1D_rg32uint","typeinfo.typeTexStorage1D_rg32sint","typeinfo.typeTexStorage1D_rg32float","typeinfo.typeTexStorage1D_r32uint","typeinfo.typeTexStorage1D_r32sint","typeinfo.typeTexStorage1D_r32float","typeinfo.typeTexStorage2D_rgba8unorm","typeinfo.typeTexStorage2D_rgba8snorm","typeinfo.typeTexStorage2D_rgba8uint","typeinfo.typeTexStorage2D_rgba8sint","typeinfo.typeTexStorage2D_rgba16uint","typeinfo.typeTexStorage2D_rgba16sint","typeinfo.typeTexStorage2D_rgba16float","typeinfo.typeTexStorage2D_rgba32uint","typeinfo.typeTexStorage2D_rgba32sint","typeinfo.typeTexStorage2D_rgba32float","typeinfo.typeTexStorage2D_rg32uint","typeinfo.typeTexStorage2D_rg32sint","typeinfo.typeTexStorage2D_rg32float","typeinfo.typeTexStorage2D_r32uint","typeinfo.typeTexStorage2D_r32sint","typeinfo.typeTexStorage2D_r32float","typeinfo.typeTexStorage2DArray_rgba8unorm","typeinfo.typeTexStorage2DArray_rgba8snorm","typeinfo.typeTexStorage2DArray_rgba8uint","typeinfo.typeTexStorage2DArray_rgba8sint","typeinfo.typeTexStorage2DArray_rgba16uint","typeinfo.typeTexStorage2DArray_rgba16sint","typeinfo.typeTexStorage2DArray_rgba16float","typeinfo.typeTexStorage2DArray_rgba32uint","typeinfo.typeTexStorage2DArray_rgba32sint","typeinfo.typeTexStorage2DArray_rgba32float","typeinfo.typeTexStorage2DArray_rg32uint","typeinfo.typeTexStorage2DArray_rg32sint","typeinfo.typeTexStorage2DArray_rg32float","typeinfo.typeTexStorage2DArray_r32uint","typeinfo.typeTexStorage2DArray_r32sint","typeinfo.typeTexStorage2DArray_r32float","typeinfo.typeTexStorage3D_rgba8unorm","typeinfo.typeTexStorage3D_rgba8snorm","typeinfo.typeTexStorage3D_rgba8uint","typeinfo.typeTexStorage3D_rgba8sint","typeinfo.typeTexStorage3D_rgba16uint","typeinfo.typeTexStorage3D_rgba16sint","typeinfo.typeTexStorage3D_rgba16float","typeinfo.typeTexStorage3D_rgba32uint","typeinfo.typeTexStorage3D_rgba32sint","typeinfo.typeTexStorage3D_rgba32float","typeinfo.typeTexStorage3D_rg32uint","typeinfo.typeTexStorage3D_rg32sint","typeinfo.typeTexStorage3D_rg32float","typeinfo.typeTexStorage3D_r32uint","typeinfo.typeTexStorage3D_r32sint","typeinfo.typeTexStorage3D_r32float","typeinfo.typeSampler","typeinfo.typeSamplerComparison","typeinfo.typeTexExternal","typeinfo.typeVoid"],"mappings":"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"}