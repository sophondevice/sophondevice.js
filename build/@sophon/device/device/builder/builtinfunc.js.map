{"version":3,"file":"builtinfunc.js","sources":["../../../../../libs/device/src/device/builder/builtinfunc.ts"],"sourcesContent":["import * as typeinfo from './types';\r\nimport * as AST from './ast';\r\nimport { ExpValueType, PBShaderExp, ProgramBuilder } from './programbuilder';\r\nimport * as _ from './constructors';\r\nimport * as errors from './errors';\r\n\r\nconst genTypeList = [\r\n  [typeinfo.typeF32, typeinfo.typeF32Vec2, typeinfo.typeF32Vec3, typeinfo.typeF32Vec4],\r\n  [typeinfo.typeI32, typeinfo.typeI32Vec2, typeinfo.typeI32Vec3, typeinfo.typeI32Vec4],\r\n  [typeinfo.typeU32, typeinfo.typeU32Vec2, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4],\r\n  [typeinfo.typeBool, typeinfo.typeBVec2, typeinfo.typeBVec3, typeinfo.typeBVec4],\r\n];\r\n\r\nconst genMatrixTypeList = [\r\n  typeinfo.typeMat2, typeinfo.typeMat2x3, typeinfo.typeMat2x4,\r\n  typeinfo.typeMat3x2, typeinfo.typeMat3, typeinfo.typeMat3x4,\r\n  typeinfo.typeMat4x2, typeinfo.typeMat4x3, typeinfo.typeMat4\r\n];\r\n\r\ntype WrapFunction = (pb: ProgramBuilder, name: string, ...args: ExpValueType[]) => PBShaderExp;\r\n\r\nfunction matchFunctionOverloadings(pb: ProgramBuilder, name: string, ...args: ExpValueType[]) {\r\n  const bit = pb.getDeviceType() === 'webgl' ? MASK_WEBGL1 : (pb.getDeviceType() === 'webgl2' ? MASK_WEBGL2 : MASK_WEBGPU);\r\n  const overloadings = builtinFunctionsAll?.[name].overloads.filter(val => !!(val[1] & bit)).map(val => val[0]);\r\n  if (!overloadings || overloadings.length === 0) {\r\n    throw new errors.PBDeviceNotSupport(`builtin shader function '${name}'`);\r\n  }\r\n  const argsNonArray = args.map(val => pb.normalizeExpValue(val));\r\n  const matchResult = pb._matchFunctionOverloading(overloadings, argsNonArray);\r\n  if (!matchResult) {\r\n    throw new errors.PBOverloadingMatchError(name);\r\n  }\r\n  return matchResult;\r\n}\r\nfunction callBuiltinChecked(pb: ProgramBuilder, matchResult: [typeinfo.PBFunctionTypeInfo, AST.ASTExpression[]]) {\r\n  return pb.$callFunction(matchResult[0].name, matchResult[1], matchResult[0].returnType);\r\n}\r\nfunction callBuiltin(pb: ProgramBuilder, name: string, ...args: ExpValueType[]): PBShaderExp {\r\n  return callBuiltinChecked(pb, matchFunctionOverloadings(pb, name, ...args));\r\n}\r\n\r\nfunction genMatrixType(name: string, shaderTypeMask: number, r: typeinfo.PBTypeInfo, args: (typeinfo.PBPrimitiveTypeInfo)[])\r\n  : [typeinfo.PBFunctionTypeInfo, number][] {\r\n  const result: [typeinfo.PBFunctionTypeInfo, number][] = [];\r\n  for (let i = 0; i < genMatrixTypeList.length; i++) {\r\n    const returnType = r || genMatrixTypeList[i];\r\n    const argTypes = args.map(arg => {\r\n      return { type: arg || genMatrixTypeList[i] };\r\n    });\r\n    result.push([new typeinfo.PBFunctionTypeInfo(name, returnType, argTypes), shaderTypeMask]);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction genType(name: string, shaderTypeMask, r: typeinfo.PBTypeInfo | number, args: (typeinfo.PBTypeInfo | number)[], vecOnly?: boolean)\r\n  : [typeinfo.PBFunctionTypeInfo, number][] {\r\n  if (args.findIndex(val => (typeof val === 'number')) < 0) {\r\n    return [[new typeinfo.PBFunctionTypeInfo(name, r as typeinfo.PBPrimitiveTypeInfo, args.map(arg => ({ type: arg as typeinfo.PBTypeInfo }))), shaderTypeMask]];\r\n  } else {\r\n    const result: [typeinfo.PBFunctionTypeInfo, number][] = [];\r\n    let i = vecOnly ? 1 : 0;\r\n    for (; i < 4; i++) {\r\n      const returnType = typeof r === 'number' ? genTypeList[r][i] : r;\r\n      const argTypes = args.map(arg => {\r\n        if (typeof arg === 'number') {\r\n          return { type: genTypeList[arg][i] };\r\n        } else {\r\n          return { type: arg };\r\n        }\r\n      });\r\n      result.push([new typeinfo.PBFunctionTypeInfo(name, returnType, argTypes), shaderTypeMask]);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nfunction unaryFunc(a: AST.ASTExpression, op: string, type: typeinfo.PBTypeInfo): PBShaderExp {\r\n  const exp = new PBShaderExp('', type);\r\n  exp.$ast = new AST.ASTUnaryFunc(a, op, type);\r\n  return exp;\r\n}\r\n\r\nfunction binaryFunc(\r\n  a: AST.ASTExpression,\r\n  b: AST.ASTExpression,\r\n  op: string,\r\n  type: typeinfo.PBTypeInfo\r\n): PBShaderExp {\r\n  const exp = new PBShaderExp('', type);\r\n  exp.$ast = new AST.ASTBinaryFunc(a, b, op, type);\r\n  return exp;\r\n}\r\n\r\nconst MASK_WEBGL1 = 1 << 0;\r\nconst MASK_WEBGL2 = 1 << 1;\r\nconst MASK_WEBGPU = 1 << 2;\r\nconst MASK_WEBGL = MASK_WEBGL1 | MASK_WEBGL2;\r\nconst MASK_ALL = MASK_WEBGL | MASK_WEBGPU;\r\n\r\nconst builtinFunctionsAll: { [name: string]: { overloads?: [typeinfo.PBFunctionTypeInfo, number][], normalizeFunc?: WrapFunction } } = {\r\n  add_2: {\r\n    overloads: [\r\n      ...genType('', MASK_ALL, 0, [0, 0]),\r\n      ...genType('', MASK_ALL, 1, [1, 1]),\r\n      ...genType('', MASK_ALL, 2, [2, 2]),\r\n      ...genType('', MASK_ALL, 3, [3, 3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32, typeinfo.typeF32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32, typeinfo.typeF32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32, typeinfo.typeF32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec4, typeinfo.typeF32]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32, typeinfo.typeI32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32, typeinfo.typeI32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeI32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32Vec4, typeinfo.typeI32]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32, typeinfo.typeU32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32Vec2, typeinfo.typeU32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32, typeinfo.typeU32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32Vec3, typeinfo.typeU32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32, typeinfo.typeU32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32Vec4, typeinfo.typeU32]),\r\n\r\n      ...genMatrixType('', MASK_ALL, null, [null, null]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '+', matchResult[0].returnType);\r\n    }\r\n  },\r\n  add: {\r\n    overloads: [],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length < 2) {\r\n        throw new errors.PBParamLengthError('add');\r\n      }\r\n      let result = args[0];\r\n      for (let i = 1; i < args.length; i++) {\r\n        result = pb.add_2(result as number | PBShaderExp, args[i] as number | PBShaderExp);\r\n      }\r\n      return result as PBShaderExp;\r\n    }\r\n  },\r\n  sub: {\r\n    overloads: [\r\n      ...genType('', MASK_ALL, 0, [0, 0]),\r\n      ...genType('', MASK_ALL, 1, [1, 1]),\r\n      ...genType('', MASK_ALL, 2, [2, 2]),\r\n      ...genType('', MASK_ALL, 3, [3, 3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32, typeinfo.typeF32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32, typeinfo.typeF32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32, typeinfo.typeF32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec4, typeinfo.typeF32]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32, typeinfo.typeI32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32, typeinfo.typeI32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeI32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32Vec4, typeinfo.typeI32]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32, typeinfo.typeU32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32Vec2, typeinfo.typeU32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32, typeinfo.typeU32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32Vec3, typeinfo.typeU32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32, typeinfo.typeU32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32Vec4, typeinfo.typeU32]),\r\n\r\n      ...genMatrixType('', MASK_ALL, null, [null, null]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '-', matchResult[0].returnType);\r\n    }\r\n  },\r\n  div: {\r\n    overloads: [\r\n      ...genType('', MASK_ALL, 0, [0, 0]),\r\n      ...genType('', MASK_ALL, 1, [1, 1]),\r\n      ...genType('', MASK_ALL, 2, [2, 2]),\r\n      ...genType('', MASK_ALL, 3, [3, 3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32, typeinfo.typeF32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32, typeinfo.typeF32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32, typeinfo.typeF32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec4, typeinfo.typeF32]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32, typeinfo.typeI32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32, typeinfo.typeI32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeI32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32Vec4, typeinfo.typeI32]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32, typeinfo.typeU32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32Vec2, typeinfo.typeU32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32, typeinfo.typeU32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32Vec3, typeinfo.typeU32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32, typeinfo.typeU32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32Vec4, typeinfo.typeU32]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '/', matchResult[0].returnType);\r\n    }\r\n  },\r\n  mul_2: {\r\n    overloads: [\r\n      ...genType('', MASK_ALL, 0, [0, 0]),\r\n      ...genType('', MASK_ALL, 1, [1, 1]),\r\n      ...genType('', MASK_ALL, 2, [2, 2]),\r\n      ...genType('', MASK_ALL, 3, [3, 3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32, typeinfo.typeF32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32, typeinfo.typeF32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32, typeinfo.typeF32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec4, typeinfo.typeF32]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32, typeinfo.typeI32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec2, [typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32, typeinfo.typeI32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec3, [typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeI32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeI32Vec4, [typeinfo.typeI32Vec4, typeinfo.typeI32]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32, typeinfo.typeU32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec2, [typeinfo.typeU32Vec2, typeinfo.typeU32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32, typeinfo.typeU32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec3, [typeinfo.typeU32Vec3, typeinfo.typeU32]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32, typeinfo.typeU32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeU32Vec4, [typeinfo.typeU32Vec4, typeinfo.typeU32]),\r\n\r\n      ...genMatrixType('', MASK_ALL, null, [typeinfo.typeF32, null]),\r\n      ...genMatrixType('', MASK_ALL, null, [null, typeinfo.typeF32]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeMat2, [typeinfo.typeMat2, typeinfo.typeMat2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat3x2, [typeinfo.typeMat2, typeinfo.typeMat3x2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat4x2, [typeinfo.typeMat2, typeinfo.typeMat4x2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeMat2, typeinfo.typeF32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec2, typeinfo.typeMat2]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeMat2x3, [typeinfo.typeMat2x3, typeinfo.typeMat2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat3, [typeinfo.typeMat2x3, typeinfo.typeMat3x2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat4x3, [typeinfo.typeMat2x3, typeinfo.typeMat4x2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeMat2x3, typeinfo.typeF32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec3, typeinfo.typeMat2x3]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeMat2x4, [typeinfo.typeMat2x4, typeinfo.typeMat2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat3x4, [typeinfo.typeMat2x4, typeinfo.typeMat3x2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat4, [typeinfo.typeMat2x4, typeinfo.typeMat4x2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeMat2x4, typeinfo.typeF32Vec2]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeF32Vec4, typeinfo.typeMat2x4]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeMat2, [typeinfo.typeMat3x2, typeinfo.typeMat2x3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat3x2, [typeinfo.typeMat3x2, typeinfo.typeMat3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat4x2, [typeinfo.typeMat3x2, typeinfo.typeMat4x3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeMat3x2, typeinfo.typeF32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec2, typeinfo.typeMat3x2]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeMat2x3, [typeinfo.typeMat3, typeinfo.typeMat2x3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat3, [typeinfo.typeMat3, typeinfo.typeMat3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat4x3, [typeinfo.typeMat3, typeinfo.typeMat4x3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeMat3, typeinfo.typeF32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeMat3]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeMat2x4, [typeinfo.typeMat3x4, typeinfo.typeMat2x3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat3x4, [typeinfo.typeMat3x4, typeinfo.typeMat3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat4, [typeinfo.typeMat3x4, typeinfo.typeMat4x3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeMat3x4, typeinfo.typeF32Vec3]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec4, typeinfo.typeMat3x4]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeMat2, [typeinfo.typeMat4x2, typeinfo.typeMat2x4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat3x2, [typeinfo.typeMat4x2, typeinfo.typeMat3x4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat4x2, [typeinfo.typeMat4x2, typeinfo.typeMat4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec2, [typeinfo.typeMat4x2, typeinfo.typeF32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec2, typeinfo.typeMat4x2]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeMat2x3, [typeinfo.typeMat4x3, typeinfo.typeMat2x4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat3, [typeinfo.typeMat4x3, typeinfo.typeMat3x4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat4x3, [typeinfo.typeMat4x3, typeinfo.typeMat4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeMat4x3, typeinfo.typeF32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec3, typeinfo.typeMat4x3]),\r\n\r\n      ...genType('', MASK_ALL, typeinfo.typeMat2x4, [typeinfo.typeMat4, typeinfo.typeMat2x4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat3x4, [typeinfo.typeMat4, typeinfo.typeMat3x4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeMat4, [typeinfo.typeMat4, typeinfo.typeMat4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeMat4, typeinfo.typeF32Vec4]),\r\n      ...genType('', MASK_ALL, typeinfo.typeF32Vec4, [typeinfo.typeF32Vec4, typeinfo.typeMat4]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '*', matchResult[0].returnType);\r\n    }\r\n  },\r\n  mul: {\r\n    overloads: [],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length < 2) {\r\n        throw new errors.PBParamLengthError('mul');\r\n      }\r\n      let result = args[0];\r\n      for (let i = 1; i < args.length; i++) {\r\n        result = pb.mul_2(result as number | PBShaderExp, args[i] as number | PBShaderExp);\r\n      }\r\n      return result as PBShaderExp;\r\n    }\r\n  },\r\n  mod: {\r\n    overloads: [\r\n      ...genType('mod', MASK_ALL, 0, [0, 0]),\r\n      ...genType('mod', MASK_ALL, 1, [1, 1]),\r\n      ...genType('mod', MASK_ALL, 2, [2, 2]),\r\n      ...genType('mod', MASK_ALL, 3, [3, 3]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      const argType = matchResult[1][0].getType();\r\n      const isIntegerType = argType.isPrimitiveType() && (argType.scalarType === typeinfo.PBPrimitiveType.I32 || argType.scalarType === typeinfo.PBPrimitiveType.U32);\r\n      if (pb.getDeviceType() === 'webgl' && isIntegerType) {\r\n        throw new errors.PBDeviceNotSupport('integer modulus');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu' || isIntegerType) {\r\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '%', matchResult[0].returnType);\r\n      } else {\r\n        return callBuiltinChecked(pb, matchResult);\r\n      }\r\n    }\r\n  },\r\n  radians: { overloads: genType('radians', MASK_ALL, 0, [0]) },\r\n  degrees: { overloads: genType('degrees', MASK_ALL, 0, [0]) },\r\n  sin: { overloads: genType('sin', MASK_ALL, 0, [0]) },\r\n  cos: { overloads: genType('cos', MASK_ALL, 0, [0]) },\r\n  tan: { overloads: genType('tan', MASK_ALL, 0, [0]) },\r\n  asin: { overloads: genType('asin', MASK_ALL, 0, [0]) },\r\n  acos: { overloads: genType('acos', MASK_ALL, 0, [0]) },\r\n  atan: { overloads: genType('atan', MASK_ALL, 0, [0]) },\r\n  atan2: {\r\n    overloads: [\r\n      ...genType('atan', MASK_WEBGL, 0, [0, 0]),\r\n      ...genType('atan2', MASK_WEBGPU, 0, [0, 0]),\r\n    ]\r\n  },\r\n  sinh: { overloads: genType('sinh', MASK_WEBGL2 | MASK_WEBGPU, 0, [0]) },\r\n  cosh: { overloads: genType('cosh', MASK_WEBGL2 | MASK_WEBGPU, 0, [0]) },\r\n  tanh: { overloads: genType('tanh', MASK_WEBGL2 | MASK_WEBGPU, 0, [0]) },\r\n  asinh: { overloads: genType('asinh', MASK_WEBGL2, 0, [0]) },\r\n  acosh: { overloads: genType('acosh', MASK_WEBGL2, 0, [0]) },\r\n  atanh: { overloads: genType('atanh', MASK_WEBGL2, 0, [0]) },\r\n  pow: { overloads: genType('pow', MASK_ALL, 0, [0, 0]) },\r\n  exp: { overloads: genType('exp', MASK_ALL, 0, [0]) },\r\n  exp2: { overloads: genType('exp2', MASK_ALL, 0, [0]) },\r\n  log: { overloads: genType('log', MASK_ALL, 0, [0]) },\r\n  log2: { overloads: genType('log2', MASK_ALL, 0, [0]) },\r\n  sqrt: { overloads: genType('sqrt', MASK_ALL, 0, [0]) },\r\n  inverseSqrt: {\r\n    overloads: [\r\n      ...genType('inversesqrt', MASK_WEBGL, 0, [0]),\r\n      ...genType('inverseSqrt', MASK_WEBGPU, 0, [0])\r\n    ]\r\n  },\r\n  abs: {\r\n    overloads: [\r\n      ...genType('abs', MASK_ALL, 0, [0]),\r\n      ...genType('abs', MASK_WEBGL2 | MASK_WEBGPU, 1, [1]),\r\n      ...genType('abs', MASK_WEBGPU, 2, [2])\r\n    ]\r\n  },\r\n  sign: {\r\n    overloads: [\r\n      ...genType('sign', MASK_ALL, 0, [0]),\r\n      ...genType('sign', MASK_WEBGL2, 1, [1])\r\n    ]\r\n  },\r\n  floor: { overloads: genType('floor', MASK_ALL, 0, [0]) },\r\n  ceil: { overloads: genType('ceil', MASK_ALL, 0, [0]) },\r\n  fract: { overloads: genType('fract', MASK_ALL, 0, [0]) },\r\n  fma: { overloads: genType('fma', MASK_WEBGPU, 0, [0, 0, 0]) },\r\n  round: { overloads: genType('round', MASK_WEBGPU, 0, [0]) },\r\n  trunc: { overloads: genType('trunc', MASK_WEBGPU, 0, [0]) },\r\n  // TODO: modf\r\n  min: {\r\n    overloads: [\r\n      ...genType('min', MASK_ALL, 0, [0, 0]),\r\n      ...genType('min', MASK_WEBGL2 | MASK_WEBGPU, 1, [1, 1]),\r\n      ...genType('min', MASK_WEBGL2 | MASK_WEBGPU, 2, [2, 2]),\r\n    ]\r\n  },\r\n  max: {\r\n    overloads: [\r\n      ...genType('max', MASK_ALL, 0, [0, 0]),\r\n      ...genType('max', MASK_WEBGL2 | MASK_WEBGPU, 1, [1, 1]),\r\n      ...genType('max', MASK_WEBGL2 | MASK_WEBGPU, 2, [2, 2]),\r\n    ]\r\n  },\r\n  clamp: {\r\n    overloads: [\r\n      ...genType('clamp', MASK_ALL, 0, [0, 0, 0]),\r\n      ...genType('clamp', MASK_WEBGL2 | MASK_WEBGPU, 1, [1, 1, 1]),\r\n      ...genType('clamp', MASK_WEBGL2 | MASK_WEBGPU, 2, [2, 2, 2]),\r\n    ]\r\n  },\r\n  mix: {\r\n    overloads: [\r\n      ...genType('mix', MASK_ALL, 0, [0, 0, 0]),\r\n      ...genType('mix', MASK_ALL, 0, [0, 0, typeinfo.typeF32]),\r\n    ]\r\n  },\r\n  step: { overloads: genType('step', MASK_ALL, 0, [0, 0]) },\r\n  smoothStep: { overloads: genType('smoothstep', MASK_ALL, 0, [0, 0, 0]) },\r\n  isnan: { overloads: genType('isnan', MASK_WEBGL2, 3, [0]) },\r\n  isinf: { overloads: genType('isinf', MASK_WEBGL2, 3, [0]) },\r\n  length: { overloads: genType('length', MASK_ALL, typeinfo.typeF32, [0]) },\r\n  distance: { overloads: genType('distance', MASK_ALL, typeinfo.typeF32, [0, 0]) },\r\n  dot: {\r\n    overloads: [\r\n      ...genType('dot', MASK_ALL, typeinfo.typeF32, [0, 0], true),\r\n      ...genType('dot', MASK_WEBGPU, typeinfo.typeI32, [1, 1], true),\r\n      ...genType('dot', MASK_WEBGPU, typeinfo.typeU32, [2, 2], true),\r\n    ]\r\n  },\r\n  cross: { overloads: genType('cross', MASK_ALL, typeinfo.typeF32Vec3, [typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]) },\r\n  normalize: { overloads: genType('normalize', MASK_ALL, 0, [0], true) },\r\n  faceForward: {\r\n    overloads: [\r\n      ...genType('faceforward', MASK_WEBGL, 0, [0, 0, 0], true),\r\n      ...genType('faceForward', MASK_WEBGPU, 0, [0, 0, 0], true),\r\n    ]\r\n  },\r\n  reflect: { overloads: genType('reflect', MASK_ALL, 0, [0, 0], true) },\r\n  refract: { overloads: genType('refract', MASK_ALL, 0, [0, 0, typeinfo.typeF32], true) },\r\n  frexp: {\r\n    overloads: [\r\n      ...genType('frexp', MASK_WEBGPU, typeinfo.typeFrexpResult, [typeinfo.typeF32]),\r\n      ...genType('frexp', MASK_WEBGPU, typeinfo.typeFrexpResultVec2, [typeinfo.typeF32Vec2]),\r\n      ...genType('frexp', MASK_WEBGPU, typeinfo.typeFrexpResultVec3, [typeinfo.typeF32Vec3]),\r\n      ...genType('frexp', MASK_WEBGPU, typeinfo.typeFrexpResultVec4, [typeinfo.typeF32Vec4]),\r\n    ]\r\n  },\r\n  outerProduct: {\r\n    overloads: [\r\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat2, [typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\r\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat3, [typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\r\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat4, [typeinfo.typeF32Vec4, typeinfo.typeF32Vec4]),\r\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat2x3, [typeinfo.typeF32Vec3, typeinfo.typeF32Vec2]),\r\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat3x2, [typeinfo.typeF32Vec2, typeinfo.typeF32Vec3]),\r\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat2x4, [typeinfo.typeF32Vec4, typeinfo.typeF32Vec2]),\r\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat4x2, [typeinfo.typeF32Vec2, typeinfo.typeF32Vec4]),\r\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat3x4, [typeinfo.typeF32Vec4, typeinfo.typeF32Vec3]),\r\n      ...genType('outerProduct', MASK_WEBGL2, typeinfo.typeMat4x3, [typeinfo.typeF32Vec3, typeinfo.typeF32Vec4]),\r\n    ]\r\n  },\r\n  transpose: {\r\n    overloads: [\r\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat2, [typeinfo.typeMat2]),\r\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat3, [typeinfo.typeMat3]),\r\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat4, [typeinfo.typeMat4]),\r\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat2x3, [typeinfo.typeMat3x2]),\r\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat3x2, [typeinfo.typeMat2x3]),\r\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat2x4, [typeinfo.typeMat4x2]),\r\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat4x2, [typeinfo.typeMat2x4]),\r\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat3x4, [typeinfo.typeMat4x3]),\r\n      ...genType('transpose', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeMat4x3, [typeinfo.typeMat3x4]),\r\n    ]\r\n  },\r\n  determinant: {\r\n    overloads: [\r\n      ...genType('determinant', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeMat2]),\r\n      ...genType('determinant', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeMat3]),\r\n      ...genType('determinant', MASK_WEBGL2 | MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeMat4]),\r\n    ]\r\n  },\r\n  inverse: {\r\n    overloads: [\r\n      ...genType('inverse', MASK_WEBGL2, typeinfo.typeMat2, [typeinfo.typeMat2]),\r\n      ...genType('inverse', MASK_WEBGL2, typeinfo.typeMat3, [typeinfo.typeMat3]),\r\n      ...genType('inverse', MASK_WEBGL2, typeinfo.typeMat4, [typeinfo.typeMat4]),\r\n    ]\r\n  },\r\n  lessThan: {\r\n    overloads: [\r\n      ...genType('lessThan', MASK_ALL, 3, [0, 0]),\r\n      ...genType('lessThan', MASK_ALL, 3, [1, 1]),\r\n      ...genType('lessThan', MASK_ALL, 3, [2, 2]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      const argType = matchResult[1][0].getType();\r\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\r\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '<', matchResult[0].returnType);\r\n      } else {\r\n        return callBuiltinChecked(pb, matchResult);\r\n      }\r\n    }\r\n  },\r\n  lessThanEqual: {\r\n    overloads: [\r\n      ...genType('lessThanEqual', MASK_ALL, 3, [0, 0]),\r\n      ...genType('lessThanEqual', MASK_ALL, 3, [1, 1]),\r\n      ...genType('lessThanEqual', MASK_ALL, 3, [2, 2]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      const argType = matchResult[1][0].getType();\r\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\r\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '<=', matchResult[0].returnType);\r\n      } else {\r\n        return callBuiltinChecked(pb, matchResult);\r\n      }\r\n    }\r\n  },\r\n  greaterThan: {\r\n    overloads: [\r\n      ...genType('greaterThan', MASK_ALL, 3, [0, 0]),\r\n      ...genType('greaterThan', MASK_ALL, 3, [1, 1]),\r\n      ...genType('greaterThan', MASK_ALL, 3, [2, 2]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      const argType = matchResult[1][0].getType();\r\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\r\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '>', matchResult[0].returnType);\r\n      } else {\r\n        return callBuiltinChecked(pb, matchResult);\r\n      }\r\n    }\r\n  },\r\n  greaterThanEqual: {\r\n    overloads: [\r\n      ...genType('greaterThanEqual', MASK_ALL, 3, [0, 0]),\r\n      ...genType('greaterThanEqual', MASK_ALL, 3, [1, 1]),\r\n      ...genType('greaterThanEqual', MASK_ALL, 3, [2, 2]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      const argType = matchResult[1][0].getType();\r\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\r\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '>=', matchResult[0].returnType);\r\n      } else {\r\n        return callBuiltinChecked(pb, matchResult);\r\n      }\r\n    }\r\n  },\r\n  compEqual: {\r\n    overloads: [\r\n      ...genType('equal', MASK_ALL, 3, [0, 0]),\r\n      ...genType('equal', MASK_ALL, 3, [1, 1]),\r\n      ...genType('equal', MASK_ALL, 3, [2, 2]),\r\n      ...genType('equal', MASK_ALL, 3, [3, 3]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      const argType = matchResult[1][0].getType();\r\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\r\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '==', matchResult[0].returnType);\r\n      } else {\r\n        return callBuiltinChecked(pb, matchResult);\r\n      }\r\n    }\r\n  },\r\n  compNotEqual: {\r\n    overloads: [\r\n      ...genType('notEqual', MASK_ALL, 3, [0, 0]),\r\n      ...genType('notEqual', MASK_ALL, 3, [1, 1]),\r\n      ...genType('notEqual', MASK_ALL, 3, [2, 2]),\r\n      ...genType('notEqual', MASK_ALL, 3, [3, 3]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      const argType = matchResult[1][0].getType();\r\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\r\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '!=', matchResult[0].returnType);\r\n      } else {\r\n        return callBuiltinChecked(pb, matchResult);\r\n      }\r\n    }\r\n  },\r\n  equal: {\r\n    overloads: [\r\n      ...genType('equal', MASK_ALL, typeinfo.typeBool, [0, 0]),\r\n      ...genType('equal', MASK_ALL, typeinfo.typeBool, [1, 1]),\r\n      ...genType('equal', MASK_ALL, typeinfo.typeBool, [2, 2]),\r\n      ...genType('equal', MASK_ALL, typeinfo.typeBool, [3, 3]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      const argType = matchResult[1][0].getType();\r\n      if (pb.getDeviceType() === 'webgpu' && argType.isPrimitiveType() && !argType.isScalarType()) {\r\n        return pb.all(pb.compEqual(args[0] as PBShaderExp, args[1] as PBShaderExp))\r\n      } else {\r\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '==', matchResult[0].returnType);\r\n      }\r\n    }\r\n  },\r\n  notEqual: {\r\n    overloads: [\r\n      ...genType('notEqual', MASK_ALL, typeinfo.typeBool, [0, 0]),\r\n      ...genType('notEqual', MASK_ALL, typeinfo.typeBool, [1, 1]),\r\n      ...genType('notEqual', MASK_ALL, typeinfo.typeBool, [2, 2]),\r\n      ...genType('notEqual', MASK_ALL, typeinfo.typeBool, [3, 3]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      const argType = matchResult[1][0].getType();\r\n      if (pb.getDeviceType() === 'webgpu' && argType.isPrimitiveType() && !argType.isScalarType()) {\r\n        return pb.any(pb.compNotEqual(args[0] as PBShaderExp, args[1] as PBShaderExp))\r\n      } else {\r\n        return binaryFunc(matchResult[1][0], matchResult[1][1], '!=', matchResult[0].returnType);\r\n      }\r\n    }\r\n  },\r\n  any: { overloads: genType('any', MASK_ALL, typeinfo.typeBool, [3], true) },\r\n  all: { overloads: genType('all', MASK_ALL, typeinfo.typeBool, [3], true) },\r\n  not: {\r\n    overloads: genType('not', MASK_ALL, 3, [3]),\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      const argType = matchResult[1][0].getType();\r\n      if (pb.getDeviceType() === 'webgpu' || (argType.isPrimitiveType() && argType.isScalarType())) {\r\n        return unaryFunc(matchResult[1][0], '!', matchResult[0].returnType);\r\n      } else {\r\n        return callBuiltinChecked(pb, matchResult);\r\n      }\r\n    }\r\n  },\r\n  neg: {\r\n    overloads: [\r\n      ...genType('neg', MASK_ALL, 0, [0]),\r\n      ...genType('neg', MASK_ALL, 1, [1]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      return unaryFunc(matchResult[1][0], '-', matchResult[0].returnType);\r\n    }\r\n  },\r\n  or: {\r\n    overloads: genType('or', MASK_ALL, typeinfo.typeBool, [3, 3]),\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '||', matchResult[0].returnType);\r\n    }\r\n  },\r\n  compOr: {\r\n    overloads: genType('compOr', MASK_WEBGL2 | MASK_WEBGPU, 3, [3, 3]),\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '|', matchResult[0].returnType);\r\n    }\r\n  },\r\n  and_2: {\r\n    overloads: genType('and', MASK_ALL, typeinfo.typeBool, [3, 3]),\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '&&', matchResult[0].returnType);\r\n    }\r\n  },\r\n  and: {\r\n    overloads: [],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length < 2) {\r\n        throw new errors.PBParamLengthError('and');\r\n      }\r\n      let result = args[0];\r\n      for (let i = 1; i < args.length; i++) {\r\n        result = pb.and_2(result as PBShaderExp | number | boolean, args[i] as PBShaderExp | number | boolean);\r\n      }\r\n      return result as PBShaderExp;\r\n    }\r\n  },\r\n  compAnd: {\r\n    overloads: genType('compAnd', MASK_WEBGL2 | MASK_WEBGPU, 3, [3, 3]),\r\n    normalizeFunc(pb, name, ...args) {\r\n      const matchResult = matchFunctionOverloadings(pb, name, ...args);\r\n      return binaryFunc(matchResult[1][0], matchResult[1][1], '&', matchResult[0].returnType);\r\n    }\r\n  },\r\n  arrayLength: {\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (pb.getDeviceType() !== 'webgpu') {\r\n        throw new errors.PBDeviceNotSupport('arrayLength builtin function');\r\n      }\r\n      if (args.length !== 1\r\n        || !(args[0] instanceof PBShaderExp)\r\n        || !args[0].$ast.getType().isPointerType()\r\n        || !((args[0].$ast.getType() as typeinfo.PBPointerTypeInfo).pointerType.isArrayType())) {\r\n        throw new errors.PBParamTypeError('arrayLength');\r\n      }\r\n      return pb.$callFunction(name, [args[0].$ast], typeinfo.typeU32);\r\n    }\r\n  },\r\n  select: {\r\n    overloads: [\r\n      ...genType('select', MASK_WEBGPU, 0, [0, 0, typeinfo.typeBool]),\r\n      ...genType('select', MASK_WEBGPU, 1, [1, 1, typeinfo.typeBool]),\r\n      ...genType('select', MASK_WEBGPU, 2, [2, 2, typeinfo.typeBool]),\r\n      ...genType('select', MASK_WEBGPU, 3, [3, 3, typeinfo.typeBool]),\r\n      ...genType('select', MASK_WEBGPU, 0, [0, 0, 3], true),\r\n      ...genType('select', MASK_WEBGPU, 1, [1, 1, 3], true),\r\n      ...genType('select', MASK_WEBGPU, 2, [2, 2, 3], true),\r\n      ...genType('select', MASK_WEBGPU, 3, [3, 3, 3], true),\r\n      ...genType('mix', MASK_WEBGL2, 0, [0, 0, 3]),\r\n      ...genType('mix', MASK_WEBGL2, 1, [1, 1, 3]),\r\n      ...genType('mix', MASK_WEBGL2, 2, [2, 2, 3]),\r\n    ]\r\n  },\r\n  floatBitsToInt: { overloads: genType('floatBitsToInt', MASK_WEBGL2, 1, [0]) },\r\n  floatBitsToUint: { overloads: genType('floatBitsToUint', MASK_WEBGL2, 2, [0]) },\r\n  intBitsToFloat: { overloads: genType('intBitsToFloat', MASK_WEBGL2, 0, [1]) },\r\n  uintBitsToFloat: { overloads: genType('uintBitsToFloat', MASK_WEBGL2, 0, [2]) },\r\n  pack4x8snorm: { overloads: genType('pack4x8snorm', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeF32Vec4]) },\r\n  unpack4x8snorm: { overloads: genType('unpack4x8snorm', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeU32]) },\r\n  pack4x8unorm: { overloads: genType('pack4x8unorm', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeF32Vec4]) },\r\n  unpack4x8unorm: { overloads: genType('unpack4x8unorm', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeU32]) },\r\n  pack2x16snorm: {\r\n    overloads: [\r\n      ...genType('pack2x16snorm', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\r\n      ...genType('packSnorm2x16', MASK_WEBGL2, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\r\n    ]\r\n  },\r\n  unpack2x16snorm: {\r\n    overloads: [\r\n      ...genType('unpack2x16snorm', MASK_WEBGPU, typeinfo.typeF32Vec2, [typeinfo.typeU32]),\r\n      ...genType('unpackSnorm2x16', MASK_WEBGL2, typeinfo.typeF32Vec2, [typeinfo.typeU32])\r\n    ]\r\n  },\r\n  pack2x16unorm: {\r\n    overloads: [\r\n      ...genType('pack2x16unorm', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\r\n      ...genType('packUnorm2x16', MASK_WEBGL2, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\r\n    ]\r\n  },\r\n  unpack2x16unorm: {\r\n    overloads: [\r\n      ...genType('unpack2x16unorm', MASK_WEBGPU, typeinfo.typeF32Vec2, [typeinfo.typeU32]),\r\n      ...genType('unpackUnorm2x16', MASK_WEBGL2, typeinfo.typeF32Vec2, [typeinfo.typeU32]),\r\n    ]\r\n  },\r\n  pack2x16float: {\r\n    overloads: [\r\n      ...genType('pack2x16float', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\r\n      ...genType('packHalf2x16', MASK_WEBGL2, typeinfo.typeU32, [typeinfo.typeF32Vec2]),\r\n    ]\r\n  },\r\n  unpack2x16float: {\r\n    overloads: [\r\n      ...genType('unpack2x16float', MASK_WEBGPU, typeinfo.typeF32Vec2, [typeinfo.typeU32]),\r\n      ...genType('unpackHalf2x16', MASK_WEBGL2, typeinfo.typeF32Vec2, [typeinfo.typeU32]),\r\n    ]\r\n  },\r\n  matrixCompMult: { overloads: genMatrixType('matrixCompMult', MASK_WEBGL, null, [null, null]) },\r\n  dpdx: {\r\n    overloads: [\r\n      ...genType('dFdx', MASK_WEBGL, 0, [0]),\r\n      ...genType('dpdx', MASK_WEBGPU, 0, [0]),\r\n    ]\r\n  },\r\n  dpdy: {\r\n    overloads: [\r\n      ...genType('dFdy', MASK_WEBGL, 0, [0]),\r\n      ...genType('dpdy', MASK_WEBGPU, 0, [0]),\r\n    ]\r\n  },\r\n  fwidth: { overloads: genType('fwidth', MASK_ALL, 0, [0]) },\r\n  dpdxCoarse: {\r\n    overloads: [\r\n      ...genType('dpdxCoarse', MASK_WEBGPU, 0, [0]),\r\n      ...genType('dFdx', MASK_WEBGL, 0, [0]),\r\n    ]\r\n  },\r\n  dpdxFine: {\r\n    overloads: [\r\n      ...genType('dpdxFine', MASK_WEBGPU, 0, [0]),\r\n      ...genType('dFdx', MASK_WEBGL, 0, [0]),\r\n    ]\r\n  },\r\n  dpdyCoarse: {\r\n    overloads: [\r\n      ...genType('dpdyCoarse', MASK_WEBGPU, 0, [0]),\r\n      ...genType('dFdy', MASK_WEBGL, 0, [0]),\r\n    ]\r\n  },\r\n  dpdyFine: {\r\n    overloads: [\r\n      ...genType('dpdyFine', MASK_WEBGPU, 0, [0]),\r\n      ...genType('dFdy', MASK_WEBGL, 0, [0]),\r\n    ]\r\n  },\r\n  // textureDimensions(tex: PBShaderExp, level?: number|PBShaderExp);\r\n  textureDimensions: {\r\n    overloads: [\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTex1D, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeITex1D, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeUTex1D, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTex2D, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeITex2D, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeUTex2D, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTex2DArray, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeITex2DArray, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeUTex2DArray, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTex3D, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeITex3D, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeUTex3D, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexCube, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeITexCube, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeUTexCube, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexCubeArray, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeITexCubeArray, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeUTexCubeArray, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexMultisampled2D]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeITexMultisampled2D]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeUTexMultisampled2D]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexDepth2D, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexDepth2DArray, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexDepthCube, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexDepthCubeArray, typeinfo.typeI32]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexDepthMultisampled2D]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba8unorm]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba8snorm]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba8uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba8sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba16uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba16sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba16float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rgba32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rg32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rg32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_rg32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_r32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_r32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32, [typeinfo.typeTexStorage1D_r32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba8unorm]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba8snorm]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba8uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba8sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba16uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba16sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba16float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rgba32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rg32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rg32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_rg32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_r32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_r32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2D_r32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba8unorm]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba8snorm]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba8uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba8sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba16uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba16sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba16float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rgba32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rg32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rg32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_rg32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_r32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_r32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec2, [typeinfo.typeTexStorage2DArray_r32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba8unorm]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba8snorm]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba8uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba8sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba16uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba16sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba16float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rgba32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rg32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rg32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_rg32float]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_r32uint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_r32sint]),\r\n      ...genType('textureDimensions', MASK_WEBGPU, typeinfo.typeU32Vec3, [typeinfo.typeTexStorage3D_r32float]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTex1D, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTex2D, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeITex1D, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeITex2D, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeUTex1D, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeUTex2D, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTex2DArray, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeITex2DArray, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeUTex2DArray, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTexCube, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeITexCube, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeUTexCube, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec3, [typeinfo.typeTex3D, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec3, [typeinfo.typeITex3D, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec3, [typeinfo.typeUTex3D, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTexDepth2D, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTexDepthCube, typeinfo.typeI32]),\r\n      ...genType('textureSize', MASK_WEBGL2, typeinfo.typeI32Vec2, [typeinfo.typeTexDepth2DArray, typeinfo.typeI32]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length < 1 || args.length > 2) {\r\n        throw new errors.PBParamLengthError('textureDimensions');\r\n      }\r\n      if (!(args[0] instanceof PBShaderExp)) {\r\n        throw new errors.PBParamValueError('textureDimensions', 'tex');\r\n      }\r\n      const texType = args[0].$ast.getType();\r\n      if (!texType.isTextureType()) {\r\n        throw new errors.PBParamTypeError('textureDimensions', 'tex');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        if (texType.isMultisampledTexture() || texType.isStorageTexture()) {\r\n          if (args[1] !== undefined) {\r\n            throw new errors.PBParamValueError('textureDimensions', 'level');\r\n          }\r\n        }\r\n        return callBuiltin(pb, name, ...args);\r\n      } else if (pb.getDeviceType() === 'webgl2') {\r\n        const tex = args[0];\r\n        const level = args[1] || 0;\r\n        return texType.is1DTexture() ? callBuiltin(pb, name, tex, level).x : callBuiltin(pb, name, tex, level);\r\n      }\r\n    }\r\n  },\r\n  // textureGather(tex: PBShaderExp, sampler: PBShaderExp, coords: PBShaderExp);\r\n  // textureGather(component: number|PBShaderExp, tex: PBShaderExp, sampler: PBShaderExp, coords: PBShaderExp);\r\n  textureGather: {\r\n    overloads: [\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeI32, typeinfo.typeTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeITex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeI32, typeinfo.typeUTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeI32, typeinfo.typeTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeITexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeI32, typeinfo.typeUTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\r\n    ]\r\n  },\r\n  // textureArrayGather(tex: PBShaderExp, sampler: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp);\r\n  // textureArrayGather(component: number|PBShaderExp, tex: PBShaderExp, sampler: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp);\r\n  textureArrayGather: {\r\n    overloads: [\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeI32, typeinfo.typeTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeITex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeI32, typeinfo.typeUTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeI32, typeinfo.typeTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeI32, typeinfo.typeITexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeI32, typeinfo.typeUTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureGather', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\r\n    ]\r\n  },\r\n  // textureGatherCompare(tex: PBShaderExp, samplerCompare: PBShaderExp, coords: PBShaderExp, depthRef: number|PBShaderExp);\r\n  textureGatherCompare: {\r\n    overloads: [\r\n      ...genType('textureGatherCompare', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('textureGatherCompare', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n    ]\r\n  },\r\n  // textureArrayGatherCompare(tex: PBShaderExp, samplerCompare: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, depthRef: number|PBShaderExp);\r\n  textureArrayGatherCompare: {\r\n    overloads: [\r\n      ...genType('textureGatherCompare', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2DArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32]),\r\n      ...genType('textureGatherCompare', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32]),\r\n    ]\r\n  },\r\n  // textureLoad(tex: PBShaderExp, coords: number|PBShaderExp, levelOrSampleIndex: number|PBShaderExp);\r\n  textureLoad: {\r\n    overloads: [\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex1D, typeinfo.typeI32, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeITex1D, typeinfo.typeI32, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeUTex1D, typeinfo.typeI32, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeITex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeUTex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeITex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeUTex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexMultisampled2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeITexMultisampled2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeUTexMultisampled2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeI32Vec2]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthMultisampled2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex1D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeU32Vec4, [typeinfo.typeTexExternal, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeITex1D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeI32Vec4, [typeinfo.typeITex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeI32Vec4, [typeinfo.typeITex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeUTex1D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeU32Vec4, [typeinfo.typeUTex2D, typeinfo.typeI32Vec2, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeU32Vec4, [typeinfo.typeUTex3D, typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length === 0) {\r\n        throw new errors.PBParamLengthError('textureLoad');\r\n      }\r\n      if (!(args[0] instanceof PBShaderExp)) {\r\n        throw new errors.PBParamValueError('textureLoad', 'tex');\r\n      }\r\n      const texType = args[0].$ast.getType();\r\n      if (!texType.isTextureType()) {\r\n        throw new errors.PBParamTypeError('textureLoad', 'tex');\r\n      }\r\n      if (pb.getDeviceType() === 'webgl2') {\r\n        if (args.length !== 3) {\r\n          throw new errors.PBParamLengthError('textureLoad');\r\n        }\r\n        if (texType.is1DTexture()) {\r\n          if (typeof args[1] === 'number') {\r\n            if (!Number.isInteger(args[1])) {\r\n              throw new errors.PBParamTypeError('textureLoad', 'coord');\r\n            }\r\n          } else if (args[1] instanceof PBShaderExp) {\r\n            const coordType = args[1].$ast.getType();\r\n            if (!coordType.isPrimitiveType() || !coordType.isScalarType() || coordType.scalarType !== typeinfo.PBPrimitiveType.I32) {\r\n              throw new errors.PBParamTypeError('textureLoad', 'coord');\r\n            }\r\n          } else {\r\n            throw new errors.PBParamTypeError('textureLoad', 'coord');\r\n          }\r\n          args[1] = pb.ivec2(args[1], 0);\r\n        }\r\n      } else if (pb.getDeviceType() === 'webgpu' && texType.isExternalTexture()) {\r\n        args = args.slice(0, 2);\r\n      }\r\n      return callBuiltin(pb, name, ...args);\r\n    }\r\n  },\r\n  // textureArrayLoad(tex: PBShaderExp, coords: number|PBShaderExp, arrayIndex: number|PBShaderExp, level: number|PBShaderExp);\r\n  textureArrayLoad: {\r\n    overloads: [\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeI32Vec4, [typeinfo.typeITex2DArray, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeU32Vec4, [typeinfo.typeUTex2DArray, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32]),\r\n      ...genType('textureLoad', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeI32Vec4, [typeinfo.typeITex2DArray, typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n      ...genType('texelFetch', MASK_WEBGL2, typeinfo.typeU32Vec4, [typeinfo.typeUTex2DArray, typeinfo.typeI32Vec3, typeinfo.typeI32]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (pb.getDeviceType() === 'webgl2') {\r\n        if (args.length !== 4) {\r\n          throw new errors.PBParamLengthError('textureArrayLoad');\r\n        }\r\n        const tex = args[0];\r\n        const coords = pb.ivec3(args[1] as PBShaderExp, args[2] as PBShaderExp);\r\n        const level = args[3];\r\n        return callBuiltin(pb, name, tex, coords, level);\r\n      } else {\r\n        return callBuiltin(pb, name, ...args);\r\n      }\r\n    },\r\n  },\r\n  // textureStore(tex: PBShaderExp, coords: number|PBShaderExp, value: PBShaderExp);\r\n  textureStore: {\r\n    overloads: [\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba8unorm, typeinfo.typeU32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba8snorm, typeinfo.typeU32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba8uint, typeinfo.typeU32, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba8sint, typeinfo.typeU32, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba16uint, typeinfo.typeU32, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba16sint, typeinfo.typeU32, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba16float, typeinfo.typeU32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba32uint, typeinfo.typeU32, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba32sint, typeinfo.typeU32, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rgba32float, typeinfo.typeU32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rg32uint, typeinfo.typeU32, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rg32sint, typeinfo.typeU32, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_rg32float, typeinfo.typeU32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_r32uint, typeinfo.typeU32, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_r32sint, typeinfo.typeU32, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage1D_r32float, typeinfo.typeU32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba8unorm, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba8snorm, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba8uint, typeinfo.typeU32Vec2, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba8sint, typeinfo.typeU32Vec2, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba16uint, typeinfo.typeU32Vec2, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba16sint, typeinfo.typeU32Vec2, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba16float, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba32uint, typeinfo.typeU32Vec2, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba32sint, typeinfo.typeU32Vec2, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rgba32float, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rg32uint, typeinfo.typeU32Vec2, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rg32sint, typeinfo.typeU32Vec2, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_rg32float, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_r32uint, typeinfo.typeU32Vec2, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_r32sint, typeinfo.typeU32Vec2, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2D_r32float, typeinfo.typeU32Vec2, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba8unorm, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba8snorm, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba8uint, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba8sint, typeinfo.typeU32Vec3, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba16uint, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba16sint, typeinfo.typeU32Vec3, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba16float, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba32uint, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba32sint, typeinfo.typeU32Vec3, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rgba32float, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rg32uint, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rg32sint, typeinfo.typeU32Vec3, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_rg32float, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_r32uint, typeinfo.typeU32Vec3, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_r32sint, typeinfo.typeU32Vec3, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage3D_r32float, typeinfo.typeU32Vec3, typeinfo.typeF32Vec4]),\r\n    ]\r\n  },\r\n  // textureArrayStore(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, value: PBShaderExp);\r\n  textureArrayStore: {\r\n    overloads: [\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba8unorm, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba8snorm, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba8uint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba8sint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba16uint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba16sint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba16float, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba32uint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba32sint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rgba32float, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rg32uint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rg32sint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_rg32float, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_r32uint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeU32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_r32sint, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeI32Vec4]),\r\n      ...genType('textureStore', MASK_WEBGPU, typeinfo.typeVoid, [typeinfo.typeTexStorage2DArray_r32float, typeinfo.typeI32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec4]),\r\n\r\n    ]\r\n  },\r\n  // textureNumLayers(tex: PBShaderExp);\r\n  textureNumLayers: {\r\n    overloads: [\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTex2DArray]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITex2DArray]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTex2DArray]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexCubeArray]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITexCubeArray]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTexCubeArray]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepth2DArray]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepthCubeArray]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_r32float]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_r32sint]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_r32uint]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rg32float]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rg32sint]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rg32uint]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba16float]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba16sint]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba16uint]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba32float]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba32sint]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba32uint]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba8sint]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba8snorm]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba8uint]),\r\n      ...genType('textureNumLayers', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexStorage2DArray_rgba8unorm]),\r\n    ]\r\n  },\r\n  // textureNumLevels(tex: PBShaderExp);\r\n  textureNumLevels: {\r\n    overloads: [\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTex1D]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITex1D]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTex1D]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTex2D]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITex2D]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTex2D]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTex2DArray]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITex2DArray]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTex2DArray]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTex3D]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITex3D]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTex3D]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexCube]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITexCube]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTexCube]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexCubeArray]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITexCubeArray]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTexCubeArray]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepth2D]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepth2DArray]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepthCube]),\r\n      ...genType('textureNumLevels', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepthCubeArray]),\r\n    ]\r\n  },\r\n  // textureNumSamples(tex: PBShaderExp);\r\n  textureNumSamples: {\r\n    overloads: [\r\n      ...genType('textureNumSamples', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexMultisampled2D]),\r\n      ...genType('textureNumSamples', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeITexMultisampled2D]),\r\n      ...genType('textureNumSamples', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeUTexMultisampled2D]),\r\n      ...genType('textureNumSamples', MASK_WEBGPU, typeinfo.typeI32, [typeinfo.typeTexDepthMultisampled2D]),\r\n    ]\r\n  },\r\n  // textureSample(tex: texture, coords: number|PBShaderExp);\r\n  textureSample: {\r\n    overloads: [\r\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex1D, typeinfo.typeSampler, typeinfo.typeF32]),\r\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\r\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\r\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\r\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\r\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeSampler, typeinfo.typeF32Vec3]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex1D, typeinfo.typeF32Vec2]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeF32Vec2]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec2]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeF32Vec3]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec3]),\r\n      ...genType('texture2D', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTex1D, typeinfo.typeF32Vec2]),\r\n      ...genType('texture2D', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2]),\r\n      ...genType('texture2D', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeF32Vec2]),\r\n      ...genType('texture2D', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec2]),\r\n      ...genType('textureCube', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3]),\r\n      ...genType('textureCube', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec3]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 2) {\r\n        throw new errors.PBParamLengthError('textureSample');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureSample', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType()) {\r\n        throw new errors.PBParamTypeError('textureSample', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        if (texType.isExternalTexture()) {\r\n          return pb.textureLoad(tex, pb.ivec2(args[1] as any), 0);\r\n        } else {\r\n          const sampler = pb.getDefaultSampler(tex, false);\r\n          const coords = args[1];\r\n          const ret = callBuiltin(pb, name, tex, sampler, coords);\r\n          if (ret.$ast.getType().typeId === typeinfo.typeF32.typeId) {\r\n            return pb.vec4(ret, 0, 0, 1);\r\n          } else {\r\n            return ret;\r\n          }\r\n        }\r\n      } else {\r\n        pb.getDefaultSampler(tex, false);\r\n        if (texType.is1DTexture()) {\r\n          if (args[1] instanceof PBShaderExp) {\r\n            const coordType = args[1].$ast.getType();\r\n            if (!coordType.isPrimitiveType() || !coordType.isScalarType() || coordType.scalarType !== typeinfo.PBPrimitiveType.F32) {\r\n              throw new errors.PBParamTypeError('textureSample', 'coord');\r\n            }\r\n          } else if (typeof args[1] !== 'number') {\r\n            throw new errors.PBParamTypeError('textureSample', 'coord');\r\n          }\r\n          args[1] = pb.vec2(args[1], 0);\r\n        }\r\n        return callBuiltin(pb, name, ...args);\r\n      }\r\n    }\r\n  },\r\n  // textureArraySample(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp)\r\n  textureArraySample: {\r\n    overloads: [\r\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\r\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureSample', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeF32Vec3]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 3) {\r\n        throw new errors.PBParamLengthError('textureArraySample');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureArraySample', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType()) {\r\n        throw new errors.PBParamTypeError('textureArraySample', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        const sampler = pb.getDefaultSampler(tex, false);\r\n        const coords = args[1];\r\n        const arrayIndex = args[2];\r\n        const ret = callBuiltin(pb, name, tex, sampler, coords, arrayIndex);\r\n        if (ret.$ast.getType().typeId === typeinfo.typeF32.typeId) {\r\n          return pb.vec4(ret, 0, 0, 1);\r\n        } else {\r\n          return ret;\r\n        }\r\n      } else if (pb.getDeviceType() === 'webgl2') {\r\n        pb.getDefaultSampler(tex, false);\r\n        const coords = args[1];\r\n        const arrayIndex = args[2];\r\n        const coordsComposit = pb.vec3(coords as number | PBShaderExp, pb.float(arrayIndex as PBShaderExp));\r\n        return callBuiltin(pb, name, tex, coordsComposit);\r\n      }\r\n    }\r\n  },\r\n  // textureSampleBias(tex: PBShaderExp, coords: PBShaderExp, bias: number|PBShaderExp)\r\n  textureSampleBias: {\r\n    overloads: [\r\n      ...genType('textureSampleBias', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('textureSampleBias', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('textureSampleBias', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('texture2D', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('textureCube', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 3) {\r\n        throw new errors.PBParamLengthError('textureSampleBias');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureSampleBias', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType()) {\r\n        throw new errors.PBParamTypeError('textureSampleBias', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        const sampler = pb.getDefaultSampler(tex, false);\r\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2]);\r\n      } else {\r\n        pb.getDefaultSampler(tex, false);\r\n        return callBuiltin(pb, name, ...args);\r\n      }\r\n    }\r\n  },\r\n  // textureArraySampleBias(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, bias: number|PBShaderExp)\r\n  textureArraySampleBias: {\r\n    overloads: [\r\n      ...genType('textureSampleBias', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32]),\r\n      ...genType('textureSampleBias', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 4) {\r\n        throw new errors.PBParamLengthError('textureArraySampleBias');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureArraySampleBias', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType()) {\r\n        throw new errors.PBParamTypeError('textureArraySampleBias', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        const sampler = pb.getDefaultSampler(tex, false);\r\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2], args[3]);\r\n      } else if (pb.getDeviceType() === 'webgl2') {\r\n        pb.getDefaultSampler(tex, false);\r\n        const coords = args[1];\r\n        const arrayIndex = args[2];\r\n        const coordsComposit = pb.vec3(coords as number | PBShaderExp, pb.float(arrayIndex as PBShaderExp));\r\n        return callBuiltin(pb, name, tex, coordsComposit, args[3]);\r\n      }\r\n    }\r\n  },\r\n  // textureSampleCompare(tex: PBShaderExp, coords: PBShaderExp, depthRef: number|PBShaderExp)\r\n  textureSampleCompare: {\r\n    overloads: [\r\n      ...genType('textureSampleCompare', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('textureSampleCompare', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec3]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec4]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 3) {\r\n        throw new errors.PBParamLengthError('textureSampleCompare');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureSampleCompare', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType() || !texType.isDepthTexture()) {\r\n        throw new errors.PBParamTypeError('textureSampleCompare', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        const sampler = pb.getDefaultSampler(args[0] as PBShaderExp, true);\r\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2]);\r\n      } else {\r\n        pb.getDefaultSampler(args[0] as PBShaderExp, true);\r\n        let coordsComposite: PBShaderExp;\r\n        if (texType.isCubeTexture() || texType.isArrayTexture()) {\r\n          coordsComposite = pb.vec4(args[1] as any, args[2] as any);\r\n        } else {\r\n          coordsComposite = pb.vec3(args[1] as any, args[2] as any);\r\n        }\r\n        return callBuiltin(pb, name, tex, coordsComposite);\r\n      }\r\n    }\r\n  },\r\n  // textureArraySampleCompare(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, depthRef: number|PBShaderExp)\r\n  textureArraySampleCompare: {\r\n    overloads: [\r\n      ...genType('textureSampleCompare', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32]),\r\n      ...genType('textureSampleCompare', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeF32Vec4]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 4) {\r\n        throw new errors.PBParamLengthError('textureArraySampleCompare');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureArraySampleCompare', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType() || !texType.isDepthTexture()) {\r\n        throw new errors.PBParamTypeError('textureArraySampleCompare', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        const sampler = pb.getDefaultSampler(args[0] as PBShaderExp, true);\r\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2], args[3]);\r\n      } else {\r\n        pb.getDefaultSampler(args[0] as PBShaderExp, true);\r\n        const coordsComposite = pb.vec4(args[1] as any, pb.float(args[2] as any), args[3] as any);\r\n        return callBuiltin(pb, name, tex, coordsComposite);\r\n      }\r\n    }\r\n  },\r\n  // textureSampleLevel(tex: PBShaderExp, coords: PBShaderExp, level: number|PBShaderExp)\r\n  textureSampleLevel: {\r\n    overloads: [\r\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeSampler, typeinfo.typeF32Vec2]),\r\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32]),\r\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32]),\r\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('texture2DLodEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('texture2DLodEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('texture2DLodEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexExternal, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('textureCubeLodEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('textureCubeLodEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureSampleLevel', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType()) {\r\n        throw new errors.PBParamTypeError('textureSampleLevel', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        if (texType.isExternalTexture()) {\r\n          return pb.textureLoad(tex, pb.ivec2(args[1] as any), 0);\r\n        } else {\r\n          const sampler = pb.getDefaultSampler(tex, false);\r\n          const level = texType.isDepthTexture() && (typeof args[2] === 'number' || (args[2] instanceof PBShaderExp && args[2].$ast.getType().typeId === typeinfo.typeF32.typeId)) ? pb.int(args[2]) : args[2];\r\n          const ret = texType.isExternalTexture() ? callBuiltin(pb, name, tex, sampler, args[1]) : callBuiltin(pb, name, tex, sampler, args[1], level);\r\n          if (ret.$ast.getType().typeId === typeinfo.typeF32.typeId) {\r\n            return pb.vec4(ret, 0, 0, 1);\r\n          } else {\r\n            return ret;\r\n          }\r\n        }\r\n      } else {\r\n        pb.getDefaultSampler(tex, false);\r\n        return texType.isExternalTexture() ? callBuiltin(pb, name, args[0], args[1], 0) : callBuiltin(pb, name, args[0], args[1], args[2]);\r\n      }\r\n    }\r\n  },\r\n  // textureArraySampleLevel(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, level: number|PBShaderExp)\r\n  textureArraySampleLevel: {\r\n    overloads: [\r\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32]),\r\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32]),\r\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeI32]),\r\n      ...genType('textureSampleLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeI32]),\r\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 4) {\r\n        throw new errors.PBParamLengthError('textureArraySampleLevel');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureArraySampleLevel', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType()) {\r\n        throw new errors.PBParamTypeError('textureArraySampleLevel', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        const sampler = pb.getDefaultSampler(tex, false);\r\n        const level = texType.isDepthTexture() && (typeof args[3] === 'number' || (args[3] instanceof PBShaderExp && args[3].$ast.getType().typeId === typeinfo.typeF32.typeId)) ? pb.int(args[3]) : args[3];\r\n        const ret = callBuiltin(pb, name, tex, sampler, args[1], args[2], level);\r\n        if (ret.$ast.getType().typeId === typeinfo.typeF32.typeId) {\r\n          return pb.vec4(ret, 0, 0, 1);\r\n        } else {\r\n          return ret;\r\n        }\r\n      } else {\r\n        pb.getDefaultSampler(tex, false);\r\n        const coordsComposite = pb.vec3(args[1] as any, pb.float(args[2] as any));\r\n        return callBuiltin(pb, name, tex, coordsComposite, args[3]);\r\n      }\r\n    }\r\n  },\r\n  // textureSampleCompare(tex: PBShaderExp, coords: PBShaderExp, depthRef: number|PBShaderExp)\r\n  textureSampleCompareLevel: {\r\n    overloads: [\r\n      ...genType('textureSampleCompareLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeF32]),\r\n      ...genType('textureSampleCompareLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('textureLod', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepth2D, typeinfo.typeF32Vec3, typeinfo.typeF32]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepthCube, typeinfo.typeF32Vec4]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 3) {\r\n        throw new errors.PBParamLengthError('textureSampleCompareLevel');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureSampleCompareLevel', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType() || !texType.isDepthTexture()) {\r\n        throw new errors.PBParamTypeError('textureSampleCompareLevel', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        const sampler = pb.getDefaultSampler(tex, true);\r\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2]);\r\n      } else {\r\n        pb.getDefaultSampler(args[0] as PBShaderExp, true);\r\n        let coordsComposite: PBShaderExp;\r\n        if (texType.isCubeTexture() || texType.isArrayTexture()) {\r\n          coordsComposite = pb.vec4(args[1] as any, args[2] as any);\r\n        } else {\r\n          coordsComposite = pb.vec3(args[1] as any, args[2] as any);\r\n        }\r\n        return texType.isCubeTexture() ? callBuiltin(pb, name, tex, coordsComposite) : callBuiltin(pb, name, tex, coordsComposite, 0);\r\n      }\r\n    }\r\n  },\r\n  // textureArraySampleCompareLevel(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, depthRef: number|PBShaderExp)\r\n  textureArraySampleCompareLevel: {\r\n    overloads: [\r\n      ...genType('textureSampleCompareLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32]),\r\n      ...genType('textureSampleCompareLevel', MASK_WEBGPU, typeinfo.typeF32, [typeinfo.typeTexDepthCubeArray, typeinfo.typeSamplerComparison, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32]),\r\n      ...genType('texture', MASK_WEBGL2, typeinfo.typeF32, [typeinfo.typeTexDepth2DArray, typeinfo.typeF32Vec4]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 4) {\r\n        throw new errors.PBParamLengthError('textureArraySampleCompareLevel');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureArraySampleCompareLevel', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType() || !texType.isDepthTexture()) {\r\n        throw new errors.PBParamTypeError('textureArraySampleCompareLevel', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        const sampler = pb.getDefaultSampler(tex, true);\r\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2], args[3]);\r\n      } else {\r\n        pb.getDefaultSampler(args[0] as PBShaderExp, true);\r\n        const coordsComposite = pb.vec4(args[1] as any, pb.float(args[2] as any), args[3] as any);\r\n        return callBuiltin(pb, name, tex, coordsComposite);\r\n      }\r\n    }\r\n  },\r\n  // textureSampleGrad(tex: PBShaderExp, coords: PBShaderExp, ddx: PBShaderExp, ddy: PBShaderExp)\r\n  textureSampleGrad: {\r\n    overloads: [\r\n      ...genType('textureSampleGrad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\r\n      ...genType('textureSampleGrad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\r\n      ...genType('textureSampleGrad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\r\n      ...genType('textureGrad', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\r\n      ...genType('textureGrad', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex3D, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\r\n      ...genType('textureGrad', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\r\n      ...genType('texture2DGradEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTex2D, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\r\n      ...genType('textureCubeGradEXT', MASK_WEBGL1, typeinfo.typeF32Vec4, [typeinfo.typeTexCube, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 4) {\r\n        throw new errors.PBParamLengthError('textureSampleGrad');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureSampleGrad', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType()) {\r\n        throw new errors.PBParamTypeError('textureSampleGrad', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        const sampler = pb.getDefaultSampler(tex, false);\r\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2], args[3]);\r\n      } else {\r\n        pb.getDefaultSampler(tex, false);\r\n        return callBuiltin(pb, name, ...args);\r\n      }\r\n    }\r\n  },\r\n  // textureArraySampleGrad(tex: PBShaderExp, coords: PBShaderExp, arrayIndex: number|PBShaderExp, ddx: PBShaderExp, ddy: PBShaderExp)\r\n  textureArraySampleGrad: {\r\n    overloads: [\r\n      ...genType('textureSampleGrad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeSampler, typeinfo.typeF32Vec2, typeinfo.typeI32, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\r\n      ...genType('textureSampleGrad', MASK_WEBGPU, typeinfo.typeF32Vec4, [typeinfo.typeTexCubeArray, typeinfo.typeSampler, typeinfo.typeF32Vec3, typeinfo.typeI32, typeinfo.typeF32Vec3, typeinfo.typeF32Vec3]),\r\n      ...genType('textureGrad', MASK_WEBGL2, typeinfo.typeF32Vec4, [typeinfo.typeTex2DArray, typeinfo.typeF32Vec3, typeinfo.typeF32Vec2, typeinfo.typeF32Vec2]),\r\n    ],\r\n    normalizeFunc(pb, name, ...args) {\r\n      if (args.length !== 5) {\r\n        throw new errors.PBParamLengthError('textureArraySampleGrad');\r\n      }\r\n      const tex = args[0];\r\n      if (!(tex instanceof PBShaderExp)) {\r\n        throw new errors.PBParamTypeError('textureArraySampleGrad', 'texture');\r\n      }\r\n      const texType = tex.$ast.getType();\r\n      if (!texType.isTextureType() || !texType.isArrayTexture()) {\r\n        throw new errors.PBParamTypeError('textureArraySampleGrad', 'texture');\r\n      }\r\n      if (pb.getDeviceType() === 'webgpu') {\r\n        const sampler = pb.getDefaultSampler(tex, false);\r\n        return callBuiltin(pb, name, tex, sampler, args[1], args[2], args[3], args[4]);\r\n      } else {\r\n        pb.getDefaultSampler(tex, false);\r\n        const coordsComposite = pb.vec3(args[1] as any, pb.float(args[2] as any));\r\n        return callBuiltin(pb, name, tex, coordsComposite, args[3], args[4]);\r\n      }\r\n    }\r\n  },\r\n  storageBarrier: { overloads: genType('storageBarrier', MASK_WEBGPU, typeinfo.typeVoid, []) },\r\n  workgroupBarrier: { overloads: genType('workgroupBarrier', MASK_WEBGPU, typeinfo.typeVoid, []) },\r\n};\r\n\r\nfor (const k of Object.keys(builtinFunctionsAll)) {\r\n  ProgramBuilder.prototype[k] = function (this: ProgramBuilder, ...args: ExpValueType[]): PBShaderExp {\r\n    const normalizeFunc = builtinFunctionsAll?.[k]?.normalizeFunc || callBuiltin;\r\n    return normalizeFunc(this, k, ...args);\r\n  }\r\n}\r\n\r\n"],"names":["typeinfo.typeF32","typeinfo.typeF32Vec2","typeinfo.typeF32Vec3","typeinfo.typeF32Vec4","typeinfo.typeI32","typeinfo.typeI32Vec2","typeinfo.typeI32Vec3","typeinfo.typeI32Vec4","typeinfo.typeU32","typeinfo.typeU32Vec2","typeinfo.typeU32Vec3","typeinfo.typeU32Vec4","typeinfo.typeBool","typeinfo.typeBVec2","typeinfo.typeBVec3","typeinfo.typeBVec4","typeinfo.typeMat2","typeinfo.typeMat2x3","typeinfo.typeMat2x4","typeinfo.typeMat3x2","typeinfo.typeMat3","typeinfo.typeMat3x4","typeinfo.typeMat4x2","typeinfo.typeMat4x3","typeinfo.typeMat4","errors.PBDeviceNotSupport","errors.PBOverloadingMatchError","typeinfo.PBFunctionTypeInfo","AST.ASTUnaryFunc","AST.ASTBinaryFunc","errors.PBParamLengthError","typeinfo.PBPrimitiveType","typeinfo.typeFrexpResult","typeinfo.typeFrexpResultVec2","typeinfo.typeFrexpResultVec3","typeinfo.typeFrexpResultVec4","errors.PBParamTypeError","typeinfo.typeTex1D","typeinfo.typeITex1D","typeinfo.typeUTex1D","typeinfo.typeTex2D","typeinfo.typeITex2D","typeinfo.typeUTex2D","typeinfo.typeTex2DArray","typeinfo.typeITex2DArray","typeinfo.typeUTex2DArray","typeinfo.typeTex3D","typeinfo.typeITex3D","typeinfo.typeUTex3D","typeinfo.typeTexCube","typeinfo.typeITexCube","typeinfo.typeUTexCube","typeinfo.typeTexCubeArray","typeinfo.typeITexCubeArray","typeinfo.typeUTexCubeArray","typeinfo.typeTexMultisampled2D","typeinfo.typeITexMultisampled2D","typeinfo.typeUTexMultisampled2D","typeinfo.typeTexDepth2D","typeinfo.typeTexDepth2DArray","typeinfo.typeTexDepthCube","typeinfo.typeTexDepthCubeArray","typeinfo.typeTexDepthMultisampled2D","typeinfo.typeTexStorage1D_rgba8unorm","typeinfo.typeTexStorage1D_rgba8snorm","typeinfo.typeTexStorage1D_rgba8uint","typeinfo.typeTexStorage1D_rgba8sint","typeinfo.typeTexStorage1D_rgba16uint","typeinfo.typeTexStorage1D_rgba16sint","typeinfo.typeTexStorage1D_rgba16float","typeinfo.typeTexStorage1D_rgba32uint","typeinfo.typeTexStorage1D_rgba32sint","typeinfo.typeTexStorage1D_rgba32float","typeinfo.typeTexStorage1D_rg32uint","typeinfo.typeTexStorage1D_rg32sint","typeinfo.typeTexStorage1D_rg32float","typeinfo.typeTexStorage1D_r32uint","typeinfo.typeTexStorage1D_r32sint","typeinfo.typeTexStorage1D_r32float","typeinfo.typeTexStorage2D_rgba8unorm","typeinfo.typeTexStorage2D_rgba8snorm","typeinfo.typeTexStorage2D_rgba8uint","typeinfo.typeTexStorage2D_rgba8sint","typeinfo.typeTexStorage2D_rgba16uint","typeinfo.typeTexStorage2D_rgba16sint","typeinfo.typeTexStorage2D_rgba16float","typeinfo.typeTexStorage2D_rgba32uint","typeinfo.typeTexStorage2D_rgba32sint","typeinfo.typeTexStorage2D_rgba32float","typeinfo.typeTexStorage2D_rg32uint","typeinfo.typeTexStorage2D_rg32sint","typeinfo.typeTexStorage2D_rg32float","typeinfo.typeTexStorage2D_r32uint","typeinfo.typeTexStorage2D_r32sint","typeinfo.typeTexStorage2D_r32float","typeinfo.typeTexStorage2DArray_rgba8unorm","typeinfo.typeTexStorage2DArray_rgba8snorm","typeinfo.typeTexStorage2DArray_rgba8uint","typeinfo.typeTexStorage2DArray_rgba8sint","typeinfo.typeTexStorage2DArray_rgba16uint","typeinfo.typeTexStorage2DArray_rgba16sint","typeinfo.typeTexStorage2DArray_rgba16float","typeinfo.typeTexStorage2DArray_rgba32uint","typeinfo.typeTexStorage2DArray_rgba32sint","typeinfo.typeTexStorage2DArray_rgba32float","typeinfo.typeTexStorage2DArray_rg32uint","typeinfo.typeTexStorage2DArray_rg32sint","typeinfo.typeTexStorage2DArray_rg32float","typeinfo.typeTexStorage2DArray_r32uint","typeinfo.typeTexStorage2DArray_r32sint","typeinfo.typeTexStorage2DArray_r32float","typeinfo.typeTexStorage3D_rgba8unorm","typeinfo.typeTexStorage3D_rgba8snorm","typeinfo.typeTexStorage3D_rgba8uint","typeinfo.typeTexStorage3D_rgba8sint","typeinfo.typeTexStorage3D_rgba16uint","typeinfo.typeTexStorage3D_rgba16sint","typeinfo.typeTexStorage3D_rgba16float","typeinfo.typeTexStorage3D_rgba32uint","typeinfo.typeTexStorage3D_rgba32sint","typeinfo.typeTexStorage3D_rgba32float","typeinfo.typeTexStorage3D_rg32uint","typeinfo.typeTexStorage3D_rg32sint","typeinfo.typeTexStorage3D_rg32float","typeinfo.typeTexStorage3D_r32uint","typeinfo.typeTexStorage3D_r32sint","typeinfo.typeTexStorage3D_r32float","errors.PBParamValueError","typeinfo.typeSampler","typeinfo.typeSamplerComparison","typeinfo.typeTexExternal","typeinfo.typeVoid"],"mappings":"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"}