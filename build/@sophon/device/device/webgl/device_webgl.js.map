{"version":3,"file":"device_webgl.js","sources":["../../../../../libs/device/src/device/webgl/device_webgl.ts"],"sourcesContent":["import { Vector4 } from '@sophon/base';\r\nimport { TextureFormat, WebGLContext, PrimitiveType, hasAlphaChannel, hasRedChannel, hasGreenChannel, hasBlueChannel, isIntegerTextureFormat, isSignedTextureFormat, isFloatTextureFormat, getTextureFormatBlockSize, isCompressedTextureFormat, isDepthTextureFormat } from '../base_types';\r\nimport { isWebGL2, WebGLError } from './utils';\r\nimport { WebGLEnum } from './webgl_enum';\r\nimport { WebGLTexture2D } from './texture2d_webgl';\r\nimport { WebGLTexture2DArray } from './texture2darray_webgl';\r\nimport { WebGLTexture3D } from './texture3d_webgl';\r\nimport { WebGLTextureCube } from './texturecube_webgl';\r\nimport { WebGLTextureVideo } from './texturevideo_webgl';\r\nimport { WebGLVertexInputLayout } from './vertexinputlayout_webgl';\r\nimport { WebGLGPUBuffer } from './buffer_webgl';\r\nimport { WebGLIndexBuffer } from './indexbuffer_webgl';\r\nimport { WebGLFrameBuffer } from './framebuffer_webgl';\r\nimport { WebGLDepthState, WebGLRenderStateSet } from './renderstate_webgl';\r\nimport { GPUTimer } from './gpu_timer';\r\nimport {\r\n  IFrameBufferOptions,\r\n  SamplerOptions,\r\n  TextureSampler,\r\n  Texture2D,\r\n  Texture3D,\r\n  TextureCube,\r\n  TextureVideo,\r\n  VertexInputLayout,\r\n  GPUDataBuffer,\r\n  IndexBuffer,\r\n  FrameBuffer,\r\n  GPUProgram,\r\n  BindGroup,\r\n  BindGroupLayout,\r\n  StructuredBuffer,\r\n  TextureMipmapData,\r\n  TextureImageElement,\r\n  Texture2DArray,\r\n  TextureCreationOptions,\r\n  BufferCreationOptions,\r\n} from '../gpuobject';\r\nimport { WebGLTextureCap, WebGLFramebufferCap, WebGLMiscCap, WebGLShaderCap } from './capabilities_webgl';\r\nimport { WebGLBindGroup } from './bindgroup_webgl';\r\nimport { WebGLGPUProgram } from './gpuprogram_webgl';\r\nimport { primitiveTypeMap, typeMap } from './constants_webgl';\r\nimport { GPUProgramConstructParams, Device, DeviceType, DeviceTypeWebGL, TextureCaps, MiscCaps, FramebufferCaps, ShaderCaps, RenderProgramConstructParams, DeviceOptions, DeviceLostEvent, DeviceRestoreEvent } from '../device';\r\nimport { RenderStateSet } from '../render_states';\r\nimport { SamplerCache } from './sampler_cache';\r\nimport { WebGLStructuredBuffer } from './structuredbuffer_webgl';\r\nimport { PBStructTypeInfo, typeU16 } from '../builder';\r\nimport type { ITimer } from '../timer';\r\nimport type { VertexData } from '../vertexdata';\r\nimport type { TypedArray } from '../../misc';\r\n\r\ndeclare global {\r\n  interface WebGLRenderingContext {\r\n    _currentFramebuffer: FrameBuffer;\r\n    _currentProgram: GPUProgram;\r\n  }\r\n  interface WebGL2RenderingContext {\r\n    _currentFramebuffer: FrameBuffer;\r\n    _currentProgram: GPUProgram;\r\n  }\r\n}\r\n\r\nexport type VAOObject = WebGLVertexArrayObject | WebGLVertexArrayObjectOES;\r\nexport interface VertexArrayObjectEXT {\r\n  createVertexArray: () => VAOObject;\r\n  bindVertexArray: (arrayObject: VAOObject) => void;\r\n  deleteVertexArray: (arrayObject: VAOObject) => void;\r\n  isVertexArray: (arrayObject: VAOObject) => GLboolean;\r\n}\r\n\r\nexport interface InstancedArraysEXT {\r\n  drawArraysInstanced: (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) => void;\r\n  drawElementsInstanced: (mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, primcount: GLsizei) => void;\r\n  vertexAttribDivisor: (index: GLuint, divisor: GLuint) => void;\r\n}\r\n\r\nexport interface DrawBuffersEXT {\r\n  drawBuffers(buffers: number[]);\r\n}\r\n\r\nexport class WebGLDevice extends Device {\r\n  private _context: WebGLContext;\r\n  private _loseContextExtension: WEBGL_lose_context;\r\n  private _contextLost: boolean;\r\n  private _isRendering: boolean;\r\n  private _deviceType: DeviceTypeWebGL;\r\n  private _canvas: HTMLCanvasElement;\r\n  private _dpr: number;\r\n  private _reverseWindingOrder: boolean;\r\n  private _textureCaps: WebGLTextureCap;\r\n  private _framebufferCaps: WebGLFramebufferCap;\r\n  private _miscCaps: WebGLMiscCap;\r\n  private _shaderCaps: WebGLShaderCap;\r\n  private _vaoExt: VertexArrayObjectEXT;\r\n  private _instancedArraysExt: InstancedArraysEXT;\r\n  private _drawBuffersExt: DrawBuffersEXT;\r\n  private _currentProgram: WebGLGPUProgram;\r\n  private _currentVertexData: WebGLVertexInputLayout;\r\n  private _currentStateSet: WebGLRenderStateSet;\r\n  private _currentBindGroups: WebGLBindGroup[];\r\n  private _currentBindGroupOffsets: Iterable<number>[];\r\n  private _currentViewport: number[];\r\n  private _currentScissorRect: number[];\r\n  private _samplerCache: SamplerCache;\r\n  private _renderStatesOverridden: RenderStateSet;\r\n  constructor(cvs: HTMLCanvasElement, type: DeviceTypeWebGL, options?: DeviceOptions) {\r\n    super();\r\n    this._canvas = cvs;\r\n    this._dpr = Math.ceil(options?.dpr ?? window.devicePixelRatio);\r\n    this._canvas.style.outline = 'none';\r\n    this._isRendering = false;\r\n    let context: WebGLContext = null;\r\n    context = this._canvas.getContext(\r\n      type,\r\n      {\r\n        antialias: !!options?.msaa,\r\n        depth: true,\r\n        stencil: true,\r\n        premultipliedAlpha: false\r\n      },\r\n    ) as WebGLContext;\r\n    if (!context) {\r\n      this._deviceType = null;\r\n      throw new Error('Invalid argument or no webgl support');\r\n    }\r\n    this._contextLost = false;\r\n    this._deviceType = type;\r\n    this._reverseWindingOrder = false;\r\n    this._textureCaps = null;\r\n    this._framebufferCaps = null;\r\n    this._miscCaps = null;\r\n    this._shaderCaps = null;\r\n    this._context = context;\r\n    this._currentProgram = null;\r\n    this._currentVertexData = null;\r\n    this._currentStateSet = null;\r\n    this._currentBindGroups = [];\r\n    this._currentBindGroupOffsets = [];\r\n    this._currentViewport = null;\r\n    this._currentScissorRect = null;\r\n    this._samplerCache = new SamplerCache(this);\r\n    this._renderStatesOverridden = null;\r\n    this._loseContextExtension = this._context.getExtension('WEBGL_lose_context');\r\n    this._canvas.addEventListener('webglcontextlost', evt => {\r\n      this._contextLost = true;\r\n      evt.preventDefault();\r\n      this.handleContextLost();\r\n    }, false);\r\n    this._canvas.addEventListener('webglcontextrestored', evt => {\r\n      this._contextLost = false;\r\n      this.handleContextRestored();\r\n    }, false);\r\n  }\r\n  get context() {\r\n    return this._context;\r\n  }\r\n  get isWebGL2(): boolean {\r\n    return this._context && isWebGL2(this._context);\r\n  }\r\n  get drawingBufferWidth() {\r\n    return this.getDrawingBufferWidth();\r\n  }\r\n  get drawingBufferHeight() {\r\n    return this.getDrawingBufferHeight();\r\n  }\r\n  get clientWidth() {\r\n    return this._canvas.clientWidth;\r\n  }\r\n  get clientHeight() {\r\n    return this._canvas.clientHeight;\r\n  }\r\n  getCanvas(): HTMLCanvasElement {\r\n    return this._canvas;\r\n  }\r\n  getScale(): number {\r\n    return this._dpr;\r\n  }\r\n  isContextLost(): boolean {\r\n    return this._context.isContextLost();\r\n  }\r\n  getDeviceType(): DeviceType {\r\n    return this._deviceType;\r\n  }\r\n  getTextureCaps(): TextureCaps {\r\n    return this._textureCaps;\r\n  }\r\n  getFramebufferCaps(): FramebufferCaps {\r\n    return this._framebufferCaps;\r\n  }\r\n  getMiscCaps(): MiscCaps {\r\n    return this._miscCaps;\r\n  }\r\n  getShaderCaps(): ShaderCaps {\r\n    return this._shaderCaps;\r\n  }\r\n  get vaoExt(): VertexArrayObjectEXT {\r\n    return this._vaoExt;\r\n  }\r\n  get instancedArraysExt(): InstancedArraysEXT {\r\n    return this._instancedArraysExt;\r\n  }\r\n  get drawBuffersExt() {\r\n    return this._drawBuffersExt;\r\n  }\r\n  getDrawingBufferWidth(): number {\r\n    return this._context._currentFramebuffer?.getWidth() || this._context.drawingBufferWidth;\r\n  }\r\n  getDrawingBufferHeight(): number {\r\n    return this._context._currentFramebuffer?.getHeight() || this._context.drawingBufferHeight;\r\n  }\r\n  getBackBufferWidth(): number {\r\n    return this._canvas.width;\r\n  }\r\n  getBackBufferHeight(): number {\r\n    return this._canvas.height;\r\n  }\r\n  async initContext() {\r\n    this.initContextState();\r\n    this.addDefaultEventListener('resize', evt => {\r\n      const width = Math.max(1, Math.round(this._canvas.clientWidth * this._dpr));\r\n      const height = Math.max(1, Math.round(this._canvas.clientHeight * this._dpr));\r\n      if (width !== this._canvas.width || height !== this._canvas.height) {\r\n        this._canvas.width = width;\r\n        this._canvas.height = height;\r\n        this.setViewport(null);\r\n        this.setScissor(null);\r\n      }\r\n    });\r\n  }\r\n  clearFrameBuffer(clearColor: Vector4, clearDepth: number, clearStencil: number) {\r\n    const gl = this._context;\r\n    const colorFlag = clearColor ? gl.COLOR_BUFFER_BIT : 0;\r\n    const depthFlag = typeof clearDepth === 'number' ? gl.DEPTH_BUFFER_BIT : 0;\r\n    const stencilFlag = typeof clearStencil === 'number' ? gl.STENCIL_BUFFER_BIT : 0;\r\n    if (colorFlag || depthFlag || stencilFlag) {\r\n      WebGLDepthState.applyDefaults(this._context);\r\n      if (isWebGL2(gl) && gl._currentFramebuffer) {\r\n        if (depthFlag || stencilFlag) {\r\n          const depthAttachment = gl._currentFramebuffer.getDepthAttachment();\r\n          if (depthAttachment) {\r\n            gl.clearBufferfi(WebGLEnum.DEPTH_STENCIL, 0, clearDepth || 1, clearStencil || 0);\r\n          }\r\n        }\r\n        if (colorFlag) {\r\n          const attachments = gl._currentFramebuffer.getColorAttachments();\r\n          for (let i = 0; i < attachments.length; i++) {\r\n            gl.clearBufferfv(WebGLEnum.COLOR, i, clearColor.getArray());\r\n          }\r\n        }\r\n      } else {\r\n        gl.clearColor(clearColor.x, clearColor.y, clearColor.z, clearColor.w);\r\n        gl.clearDepth(clearDepth);\r\n        gl.clearStencil(clearStencil);\r\n        gl.clear(colorFlag | depthFlag | stencilFlag);\r\n      }\r\n    }\r\n  }\r\n  // factory\r\n  createGPUTimer(): ITimer {\r\n    return new GPUTimer(this);\r\n  }\r\n  createRenderStateSet(): RenderStateSet {\r\n    return new WebGLRenderStateSet(this._context);\r\n  }\r\n  createSampler(options: SamplerOptions): TextureSampler {\r\n    return this._samplerCache.fetchSampler(options);\r\n  }\r\n  createTexture2D(format: TextureFormat, width: number, height: number, options?: TextureCreationOptions): Texture2D {\r\n    const tex = options?.texture as WebGLTexture2D ?? new WebGLTexture2D(this);\r\n    if (!tex.isTexture2D()) {\r\n      console.error('createTexture2D() failed: options.texture must be 2d texture');\r\n      return null;\r\n    }\r\n    tex.createEmpty(format, width, height, this.parseTextureOptions(options));\r\n    return tex;\r\n  }\r\n  createTexture2DFromMipmapData(data: TextureMipmapData, options?: TextureCreationOptions): Texture2D {\r\n    const tex = options?.texture as WebGLTexture2D ?? new WebGLTexture2D(this);\r\n    if (!tex.isTexture2D()) {\r\n      console.error('createTexture2DFromMipmapData() failed: options.texture must be 2d texture');\r\n      return null;\r\n    }\r\n    tex.createWithMipmapData(data, this.parseTextureOptions(options));\r\n    return tex;\r\n  }\r\n  createTexture2DFromImage(element: TextureImageElement, options?: TextureCreationOptions): Texture2D {\r\n    const tex = options?.texture as WebGLTexture2D ?? new WebGLTexture2D(this);\r\n    if (!tex.isTexture2D()) {\r\n      console.error('createTexture2DFromImage() failed: options.texture must be 2d texture');\r\n      return null;\r\n    }\r\n    tex.loadFromElement(element, this.parseTextureOptions(options));\r\n    return tex;\r\n  }\r\n  createTexture2DArray(format: TextureFormat, width: number, height: number, depth: number, options?: TextureCreationOptions): Texture2DArray {\r\n    const tex = options?.texture as WebGLTexture2DArray ?? new WebGLTexture2DArray(this);\r\n    if (!tex.isTexture2DArray()) {\r\n      console.error('createTexture2DArray() failed: options.texture must be 2d array texture');\r\n      return null;\r\n    }\r\n    tex.createEmpty(format, width, height, depth, this.parseTextureOptions(options));\r\n    return tex;\r\n  }\r\n  createTexture3D(format: TextureFormat, width: number, height: number, depth: number, options?: TextureCreationOptions): Texture3D {\r\n    if (!this.isWebGL2) {\r\n      console.error('device does not support 3d texture');\r\n      return null;\r\n    }\r\n    const tex = options?.texture as WebGLTexture3D ?? new WebGLTexture3D(this);\r\n    if (!tex.isTexture3D()) {\r\n      console.error('createTexture3D() failed: options.texture must be 3d texture');\r\n      return null;\r\n    }\r\n    tex.createEmpty(format, width, height, depth, this.parseTextureOptions(options));\r\n    return tex;\r\n  }\r\n  createCubeTexture(format: TextureFormat, size: number, options?: TextureCreationOptions): TextureCube {\r\n    const tex = options?.texture as WebGLTextureCube ?? new WebGLTextureCube(this);\r\n    if (!tex.isTextureCube()) {\r\n      console.error('createCubeTexture() failed: options.texture must be cube texture');\r\n      return null;\r\n    }\r\n    tex.createEmpty(format, size, this.parseTextureOptions(options));\r\n    return tex;\r\n  }\r\n  createCubeTextureFromMipmapData(data: TextureMipmapData, options?: TextureCreationOptions): TextureCube {\r\n    const tex = options?.texture as WebGLTextureCube ?? new WebGLTextureCube(this);\r\n    if (!tex.isTextureCube()) {\r\n      console.error('createCubeTextureFromMipmapData() failed: options.texture must be cube texture');\r\n      return null;\r\n    }\r\n    tex.createWithMipmapData(data, this.parseTextureOptions(options));\r\n    return tex;\r\n  }\r\n  createTextureVideo(el: HTMLVideoElement): TextureVideo {\r\n    return new WebGLTextureVideo(this, el);\r\n  }\r\n  createGPUProgram(params: GPUProgramConstructParams): GPUProgram {\r\n    if (params.type === 'compute') {\r\n      throw new Error('device does not support compute shader');\r\n    }\r\n    const renderProgramParams = params.params as RenderProgramConstructParams;\r\n    return new WebGLGPUProgram(this, renderProgramParams.vs, renderProgramParams.fs, renderProgramParams.bindGroupLayouts, renderProgramParams.vertexAttributes);\r\n  }\r\n  createBindGroup(layout: BindGroupLayout): BindGroup {\r\n    return new WebGLBindGroup(this, layout);\r\n  }\r\n  createBuffer(sizeInBytes: number, options: BufferCreationOptions): GPUDataBuffer {\r\n    return new WebGLGPUBuffer(this, this.parseBufferOptions(options), sizeInBytes);\r\n  }\r\n  createIndexBuffer(data: Uint16Array | Uint32Array, options?: BufferCreationOptions): IndexBuffer {\r\n    return new WebGLIndexBuffer(this, data, this.parseBufferOptions(options, 'index'));\r\n  }\r\n  createStructuredBuffer(structureType: PBStructTypeInfo, options?: BufferCreationOptions, data?: TypedArray): StructuredBuffer {\r\n    return new WebGLStructuredBuffer(this, structureType, this.parseBufferOptions(options), data);\r\n  }\r\n  createVAO(vertexData: VertexData): VertexInputLayout {\r\n    return new WebGLVertexInputLayout(this, vertexData);\r\n  }\r\n  createFrameBuffer(options?: IFrameBufferOptions): FrameBuffer {\r\n    return new WebGLFrameBuffer(this, options);\r\n  }\r\n  setBindGroup(index: number, bindGroup: BindGroup, bindGroupOffsets?: Iterable<number>) {\r\n    if (bindGroupOffsets && !isWebGL2(this._context)) {\r\n      throw new Error(`setBindGroup(): no dynamic offset buffer support for WebGL1 device`);\r\n    }\r\n    this._currentBindGroups[index] = bindGroup as WebGLBindGroup;\r\n    this._currentBindGroupOffsets[index] = bindGroupOffsets || null;\r\n  }\r\n  // render related\r\n  setViewport(vp?: number[]);\r\n  setViewport(x: number, y: number, w: number, h: number);\r\n  setViewport(x?: number[] | number, y?: number, w?: number, h?: number) {\r\n    if (x === null || x === undefined) {\r\n      this._currentViewport = null;\r\n      this._context.viewport(0, 0, this.drawingBufferWidth, this.drawingBufferHeight);\r\n    } else if (Array.isArray(x)) {\r\n      this._currentViewport = [...x];\r\n      this._context.viewport(this.screenToDevice(x[0]), this.screenToDevice(x[1]), this.screenToDevice(x[2]), this.screenToDevice(x[3]));\r\n    } else {\r\n      this._currentViewport = [x, y, w, h];\r\n      this._context.viewport(this.screenToDevice(x), this.screenToDevice(y), this.screenToDevice(w), this.screenToDevice(h));\r\n    }\r\n  }\r\n  getViewport(): number[] {\r\n    return this._currentViewport ? [...this._currentViewport] : [0, 0, this.deviceToScreen(this.drawingBufferWidth), this.deviceToScreen(this.drawingBufferHeight)];\r\n  }\r\n  setScissor(scissor?: number[]);\r\n  setScissor(x: number, y: number, w: number, h: number): void;\r\n  setScissor(x?: number[] | number, y?: number, w?: number, h?: number) {\r\n    if (x === null || x === undefined) {\r\n      this._currentScissorRect = null;\r\n      this._context.scissor(0, 0, this.drawingBufferWidth, this.drawingBufferHeight);\r\n    } else if (Array.isArray(x)) {\r\n      this._currentScissorRect = [...x];\r\n      this._context.scissor(this.screenToDevice(x[0]), this.screenToDevice(x[1]), this.screenToDevice(x[2]), this.screenToDevice(x[3]));\r\n    } else {\r\n      this._currentScissorRect = [x, y, w, h];\r\n      this._context.scissor(this.screenToDevice(x), this.screenToDevice(y), this.screenToDevice(w), this.screenToDevice(h));\r\n    }\r\n  }\r\n  getScissor(): number[] {\r\n    return this._currentScissorRect ? [...this._currentScissorRect] : [0, 0, this.deviceToScreen(this.drawingBufferWidth), this.deviceToScreen(this.drawingBufferHeight)];\r\n  }\r\n  setProgram(program: GPUProgram) {\r\n    this._currentProgram = program as WebGLGPUProgram;\r\n  }\r\n  getProgram(): GPUProgram {\r\n    return this._currentProgram;\r\n  }\r\n  setVertexData(vertexData: VertexInputLayout) {\r\n    this._currentVertexData = vertexData as WebGLVertexInputLayout;\r\n  }\r\n  getVertexData(): VertexInputLayout {\r\n    return this._currentVertexData;\r\n  }\r\n  setRenderStates(stateSet: RenderStateSet) {\r\n    this._currentStateSet = stateSet as WebGLRenderStateSet;\r\n  }\r\n  getRenderStates(): RenderStateSet {\r\n    return this._currentStateSet;\r\n  }\r\n  setFramebuffer(rt: FrameBuffer): void {\r\n    if (rt) {\r\n      rt.bind();\r\n    } else {\r\n      if (this._context._currentFramebuffer) {\r\n        const renderTextures = this._context._currentFramebuffer.getColorAttachments();\r\n        this._context._currentFramebuffer?.unbind();\r\n        for (const tex of renderTextures) {\r\n          if (tex.mipLevelCount > 1) {\r\n            tex.generateMipmaps();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  getFramebuffer(): FrameBuffer {\r\n    return this._context._currentFramebuffer || null;\r\n  }\r\n  reverseVertexWindingOrder(reverse: boolean): void {\r\n    this._reverseWindingOrder = !!reverse;\r\n    this._context.frontFace(reverse ? this._context.CW : this._context.CCW)\r\n  }\r\n  isWindingOrderReversed(): boolean {\r\n    return !!this._reverseWindingOrder;\r\n  }\r\n  setRenderStatesOverridden(renderStates: RenderStateSet) {\r\n    this._renderStatesOverridden = renderStates;\r\n  }\r\n  flush(): void {\r\n    this.context.flush();\r\n  }\r\n  async readPixels(x: number, y: number, w: number, h: number, buffer: TypedArray): Promise<void> {\r\n    const fb = this.getFramebuffer();\r\n    const colorAttachment = fb ? fb.getColorAttachments()[0] : null;\r\n    const format = colorAttachment ? colorAttachment.format : TextureFormat.RGBA8UNORM;\r\n    let glFormat: number = WebGLEnum.NONE;\r\n    let glType: number = WebGLEnum.NONE;\r\n    const r = hasRedChannel(format);\r\n    const g = hasGreenChannel(format);\r\n    const b = hasBlueChannel(format);\r\n    const a = hasAlphaChannel(format);\r\n    const numChannels = (r ? 1 : 0) + (g ? 1 : 0) + (b ? 1 : 0) + (a ? 1 : 0);\r\n    const pixelSize = getTextureFormatBlockSize(format);\r\n    const size = pixelSize / numChannels;\r\n    const integer = isIntegerTextureFormat(format);\r\n    const float = isFloatTextureFormat(format);\r\n    const signed = isSignedTextureFormat(format);\r\n    if (r && g && b && a) {\r\n      glFormat = integer ? WebGLEnum.RGBA_INTEGER : WebGLEnum.RGBA;\r\n    } else if (r && g) {\r\n      glFormat = integer ? WebGLEnum.RG_INTEGER : WebGLEnum.RG;\r\n    } else if (r) {\r\n      glFormat = integer ? WebGLEnum.RED_INTEGER : WebGLEnum.RED;\r\n    }\r\n    if (size === 1) {\r\n      glType = signed ? WebGLEnum.BYTE : WebGLEnum.UNSIGNED_BYTE;\r\n    } else if (size === 2) {\r\n      glType = float ? WebGLEnum.HALF_FLOAT : signed ? WebGLEnum.SHORT : WebGLEnum.UNSIGNED_SHORT;\r\n    } else if (size === 4) {\r\n      glType = float ? WebGLEnum.FLOAT : signed ? WebGLEnum.INT : WebGLEnum.UNSIGNED_INT;\r\n    }\r\n    if ((glFormat !== WebGLEnum.RGBA || (glType !== WebGLEnum.UNSIGNED_BYTE && glType !== WebGLEnum.FLOAT)) && !isWebGL2(this.context)) {\r\n      throw new Error(`readPixels() failed: invalid format: ${format}`);\r\n    }\r\n    const byteSize = w * h * pixelSize;\r\n    if (buffer.byteLength < byteSize) {\r\n      throw new Error(`readPixels() failed: destination buffer must have at least ${byteSize} bytes`);\r\n    }\r\n    if (isWebGL2(this.context)) {\r\n      const stagingBuffer = this.createBuffer(byteSize, {\r\n        usage: 'read'\r\n      });\r\n      this.context.bindBuffer(WebGLEnum.PIXEL_PACK_BUFFER, stagingBuffer.object);\r\n      this.context.readBuffer(WebGLEnum.COLOR_ATTACHMENT0);\r\n      this.flush();\r\n      this.context.readPixels(x, y, w, h, glFormat, glType, 0);\r\n      this.context.bindBuffer(WebGLEnum.PIXEL_PACK_BUFFER, null);\r\n      const data = new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\r\n      await stagingBuffer.getBufferSubData(data);\r\n      stagingBuffer.dispose();\r\n    } else {\r\n      this.context.readPixels(x, y, w, h, glFormat, glType, new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength));\r\n    }\r\n  }\r\n  readPixelsToBuffer(x: number, y: number, w: number, h: number, buffer: GPUDataBuffer): void {\r\n    const fb = this.getFramebuffer();\r\n    const colorAttachment = fb ? fb.getColorAttachments()[0] : null;\r\n    const format = colorAttachment ? colorAttachment.format : TextureFormat.RGBA8UNORM;\r\n    let glFormat: number = WebGLEnum.NONE;\r\n    let glType: number = WebGLEnum.NONE;\r\n    if (!isWebGL2(this.context)) {\r\n      throw new Error('readPixels() failed: readPixels() requires webgl2 device');\r\n    }\r\n    if (isCompressedTextureFormat(format) || isDepthTextureFormat(format)) {\r\n      throw new Error(`readPixels() failed: invalid format: ${format}`);\r\n    }\r\n    const r = hasRedChannel(format);\r\n    const g = hasGreenChannel(format);\r\n    const b = hasBlueChannel(format);\r\n    const a = hasAlphaChannel(format);\r\n    const numChannels = (r ? 1 : 0) + (g ? 1 : 0) + (b ? 1 : 0) + (a ? 1 : 0);\r\n    const size = getTextureFormatBlockSize(format) / numChannels;\r\n    const integer = isIntegerTextureFormat(format);\r\n    const float = isFloatTextureFormat(format);\r\n    const signed = isSignedTextureFormat(format);\r\n    if (r && g && b && a) {\r\n      glFormat = integer ? WebGLEnum.RGBA_INTEGER : WebGLEnum.RGBA;\r\n    } else if (r && g) {\r\n      glFormat = integer ? WebGLEnum.RG_INTEGER : WebGLEnum.RG;\r\n    } else if (r) {\r\n      glFormat = integer ? WebGLEnum.RED_INTEGER : WebGLEnum.RED;\r\n    }\r\n    if (size === 1) {\r\n      glType = signed ? WebGLEnum.BYTE : WebGLEnum.UNSIGNED_BYTE;\r\n    } else if (size === 2) {\r\n      glType = float ? WebGLEnum.HALF_FLOAT : signed ? WebGLEnum.SHORT : WebGLEnum.UNSIGNED_SHORT;\r\n    } else if (size === 4) {\r\n      glType = float ? WebGLEnum.FLOAT : signed ? WebGLEnum.INT : WebGLEnum.UNSIGNED_INT;\r\n    }\r\n    this.context.bindBuffer(WebGLEnum.PIXEL_PACK_BUFFER, buffer.object);\r\n    this.context.readBuffer(WebGLEnum.COLOR_ATTACHMENT0);\r\n    this.flush();\r\n    this.context.readPixels(x, y, w, h, glFormat, glType, 0);\r\n    this.context.bindBuffer(WebGLEnum.PIXEL_PACK_BUFFER, null);\r\n  }\r\n  looseContext(): void {\r\n    if (!this.context.isContextLost()) {\r\n      this._loseContextExtension?.loseContext();\r\n    }\r\n  }\r\n  restoreContext(): void {\r\n    if (this.context.isContextLost()) {\r\n      this.clearErrors();\r\n      this._loseContextExtension?.restoreContext();\r\n      const err = this.getError();\r\n      if (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n  /** @internal */\r\n  protected onBeginFrame(): boolean {\r\n    if (this._contextLost) {\r\n      if (!this._context.isContextLost()) {\r\n        this._contextLost = false;\r\n        this.handleContextRestored();\r\n      }\r\n    }\r\n    return !this._contextLost;\r\n  }\r\n  /** @internal */\r\n  protected onEndFrame(): void {\r\n  }\r\n  /** @internal */\r\n  protected _draw(primitiveType: PrimitiveType, first: number, count: number): void {\r\n    if (this._currentVertexData) {\r\n      this._currentVertexData.bind();\r\n      if (this._currentProgram) {\r\n        if (!this._currentProgram.use()) {\r\n          return;\r\n        }\r\n        for (let i = 0; i < this._currentBindGroups.length; i++) {\r\n          const bindGroup = this._currentBindGroups[i];\r\n          if (bindGroup) {\r\n            const offsets = this._currentBindGroupOffsets[i];\r\n            bindGroup.apply(this._currentProgram, offsets);\r\n          }\r\n        }\r\n      }\r\n      if (this._currentStateSet) {\r\n        this._currentStateSet.apply(this._renderStatesOverridden as WebGLRenderStateSet);\r\n      } else {\r\n        WebGLRenderStateSet.applyDefaults(this._context);\r\n      }\r\n      const indexBuffer = this._currentVertexData.indexBuffer;\r\n      if (indexBuffer) {\r\n        this.context.drawElements(\r\n          primitiveTypeMap[primitiveType],\r\n          count,\r\n          typeMap[indexBuffer.indexType.primitiveType],\r\n          first * (indexBuffer.indexType === typeU16 ? 2 : 4)\r\n        );\r\n      } else {\r\n        this.context.drawArrays(primitiveTypeMap[primitiveType], first, count);\r\n      }\r\n    }\r\n  }\r\n  /** @internal */\r\n  protected _drawInstanced(primitiveType: PrimitiveType, first: number, count: number, numInstances: number): void {\r\n    if (this.instancedArraysExt && this._currentVertexData) {\r\n      this._currentVertexData.bind();\r\n      if (this._currentProgram) {\r\n        if (!this._currentProgram.use()) {\r\n          return;\r\n        }\r\n        for (let i = 0; i < this._currentBindGroups.length; i++) {\r\n          const bindGroup = this._currentBindGroups[i];\r\n          if (bindGroup) {\r\n            const offsets = this._currentBindGroupOffsets[i];\r\n            bindGroup.apply(this._currentProgram, offsets);\r\n          }\r\n        }\r\n      }\r\n      this._currentStateSet?.apply(this._renderStatesOverridden as WebGLRenderStateSet);\r\n      const indexBuffer = this._currentVertexData.indexBuffer;\r\n      if (indexBuffer) {\r\n        this.instancedArraysExt.drawElementsInstanced(\r\n          primitiveTypeMap[primitiveType],\r\n          count,\r\n          typeMap[indexBuffer.indexType.primitiveType],\r\n          first * (indexBuffer.indexType === typeU16 ? 2 : 4),\r\n          numInstances,\r\n        );\r\n      } else {\r\n        this.instancedArraysExt.drawArraysInstanced(\r\n          primitiveTypeMap[primitiveType],\r\n          first,\r\n          count,\r\n          numInstances,\r\n        );\r\n      }\r\n    }\r\n  }\r\n  /** @internal */\r\n  protected _compute(): void {\r\n    throw new Error('WebGL device does not support compute shader');\r\n  }\r\n  /** @internal */\r\n  private createInstancedArraysEXT(): InstancedArraysEXT {\r\n    const gl = this._context;\r\n    if (isWebGL2(gl)) {\r\n      return {\r\n        vertexAttribDivisor: gl.vertexAttribDivisor.bind(gl),\r\n        drawArraysInstanced: gl.drawArraysInstanced.bind(gl),\r\n        drawElementsInstanced: gl.drawElementsInstanced.bind(gl),\r\n      };\r\n    } else {\r\n      const extInstancedArray: ANGLE_instanced_arrays = gl.getExtension('ANGLE_instanced_arrays');\r\n      return extInstancedArray\r\n        ? {\r\n          vertexAttribDivisor: extInstancedArray.vertexAttribDivisorANGLE.bind(extInstancedArray),\r\n          drawArraysInstanced: extInstancedArray.drawArraysInstancedANGLE.bind(extInstancedArray),\r\n          drawElementsInstanced: extInstancedArray.drawElementsInstancedANGLE.bind(extInstancedArray),\r\n        }\r\n        : null;\r\n    }\r\n  }\r\n  /** @internal */\r\n  private createDrawBuffersEXT(): DrawBuffersEXT {\r\n    const gl = this._context;\r\n    if (isWebGL2(gl)) {\r\n      return {\r\n        drawBuffers: gl.drawBuffers.bind(gl),\r\n      }\r\n    } else {\r\n      const extDrawBuffers: WEBGL_draw_buffers = gl.getExtension('WEBGL_draw_buffers');\r\n      return extDrawBuffers\r\n        ? {\r\n          drawBuffers: extDrawBuffers.drawBuffersWEBGL.bind(extDrawBuffers),\r\n        }\r\n        : null;\r\n    }\r\n  }\r\n  /** @internal */\r\n  private createVertexArrayObjectEXT(): VertexArrayObjectEXT {\r\n    const gl = this._context;\r\n    if (isWebGL2(gl)) {\r\n      return {\r\n        createVertexArray: gl.createVertexArray.bind(gl),\r\n        bindVertexArray: gl.bindVertexArray.bind(gl),\r\n        deleteVertexArray: gl.deleteVertexArray.bind(gl),\r\n        isVertexArray: gl.isVertexArray.bind(gl),\r\n      };\r\n    } else {\r\n      const extVAO: OES_vertex_array_object = gl.getExtension('OES_vertex_array_object');\r\n      return extVAO\r\n        ? {\r\n          createVertexArray: extVAO.createVertexArrayOES.bind(extVAO),\r\n          bindVertexArray: extVAO.bindVertexArrayOES.bind(extVAO),\r\n          deleteVertexArray: extVAO.deleteVertexArrayOES.bind(extVAO),\r\n          isVertexArray: extVAO.isVertexArrayOES.bind(extVAO),\r\n        }\r\n        : null;\r\n    }\r\n  }\r\n  /** @internal */\r\n  private handleContextLost() {\r\n    this._isRendering = this.isRendering;\r\n    this.exitLoop();\r\n    console.log('handle context lost');\r\n    this.invalidateAll();\r\n    this.dispatchEvent(new DeviceLostEvent());\r\n  }\r\n  /** @internal */\r\n  private handleContextRestored() {\r\n    console.log('handle context restored');\r\n    this.initContextState();\r\n    this._currentProgram = null;\r\n    this._currentVertexData = null;\r\n    this._currentStateSet = null;\r\n    this._currentBindGroups = [];\r\n    this._currentBindGroupOffsets = [];\r\n    this._currentViewport = null;\r\n    this._currentScissorRect = null;\r\n    this._samplerCache = new SamplerCache(this);\r\n    if (this._isRendering) {\r\n      this._isRendering = false;\r\n      this.reloadAll().then(() => {\r\n        this.dispatchEvent(new DeviceRestoreEvent());\r\n        this.runLoop(this._runLoopFunc)\r\n      });\r\n    }\r\n  }\r\n  /** @internal */\r\n  private initContextState() {\r\n    this._textureCaps = new WebGLTextureCap(this._context);\r\n    this._framebufferCaps = new WebGLFramebufferCap(this._context);\r\n    this._miscCaps = new WebGLMiscCap(this._context);\r\n    this._shaderCaps = new WebGLShaderCap(this._context);\r\n    this._vaoExt = this.createVertexArrayObjectEXT();\r\n    this._instancedArraysExt = this.createInstancedArraysEXT();\r\n    this._drawBuffersExt = this.createDrawBuffersEXT();\r\n    this._context.pixelStorei(WebGLEnum.UNPACK_COLORSPACE_CONVERSION_WEBGL, WebGLEnum.NONE);\r\n    this._context.pixelStorei(WebGLEnum.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n    this.setViewport(null);\r\n    this.setScissor(null);\r\n    this._context.enable(WebGLEnum.SCISSOR_TEST);\r\n    this.enableGPUTimeRecording(true);\r\n    this._context._currentFramebuffer = undefined;\r\n    this._context._currentProgram = undefined;\r\n  }\r\n  /** @internal */\r\n  clearErrors() {\r\n    while (this._context.getError());\r\n  }\r\n  getError(throwError?: boolean): Error {\r\n    const errcode = this._context.getError();\r\n    const err = errcode === WebGLEnum.NO_ERROR ? null : new WebGLError(errcode);\r\n    if (err && throwError) {\r\n      throw err;\r\n    }\r\n    return err;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}