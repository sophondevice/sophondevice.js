{"version":3,"file":"sampler_webgl.js","sources":["../../../../../libs/device/src/device/webgl/sampler_webgl.ts"],"sourcesContent":["import { WebGLGPUObject } from './gpuobject_webgl';\nimport { WebGLEnum } from './webgl_enum';\nimport { TextureWrapping, TextureFilter } from '../base_types';\nimport { textureTargetMap, textureWrappingMap, textureMagFilterToWebGL, textureMinFilterToWebGL, compareFuncMap } from './constants_webgl';\nimport type { SamplerOptions, TextureSampler } from '../gpuobject';\nimport type { WebGLBaseTexture } from './basetexture_webgl';\nimport type { WebGLDevice } from './device_webgl';\nimport { isWebGL2 } from './utils';\n\nexport class WebGLTextureSampler extends WebGLGPUObject<WebGLSampler> implements TextureSampler<WebGLSampler>\n{\n  private _options: SamplerOptions;\n  constructor(device: WebGLDevice, options: SamplerOptions) {\n    super(device);\n    this._options = Object.assign({\n      addressU: TextureWrapping.ClampToEdge,\n      addressV: TextureWrapping.ClampToEdge,\n      addressW: TextureWrapping.ClampToEdge,\n      magFilter: TextureFilter.Nearest,\n      minFilter: TextureFilter.Nearest,\n      mipFilter: TextureFilter.None,\n      lodMin: 0,\n      lodMax: 32,\n      compare: null,\n      maxAnisotropy: 1\n    }, options || {});\n    this._load();\n  }\n  get addressModeU() {\n    return this._options.addressU;\n  }\n  get addressModeV() {\n    return this._options.addressV;\n  }\n  get addressModeW() {\n    return this._options.addressW;\n  }\n  get magFilter() {\n    return this._options.magFilter;\n  }\n  get minFilter() {\n    return this._options.minFilter;\n  }\n  get mipFilter() {\n    return this._options.mipFilter;\n  }\n  get lodMin() {\n    return this._options.lodMin;\n  }\n  get lodMax() {\n    return this._options.lodMax;\n  }\n  get compare() {\n    return this._options.compare;\n  }\n  get maxAnisotropy() {\n    return this._options.maxAnisotropy;\n  }\n  destroy() {\n    if (this._object && isWebGL2(this._device.context)) {\n      (this._device.context as WebGL2RenderingContext).deleteSampler(this._object);\n    }\n    this._object = null;\n  }\n  async restore() {\n    if (!this._object && !this._device.isContextLost()) {\n      this._load();\n    }\n  }\n  apply(texture: WebGLBaseTexture) {\n    if (texture?.object && !this._device.isWebGL2 && !this._device.isContextLost()) {\n      const gl = this._device.context;\n      const target = textureTargetMap[texture.target];\n      gl.bindTexture(target, texture.object);\n      gl.texParameteri(target, WebGLEnum.TEXTURE_WRAP_S, textureWrappingMap[this._options.addressU]);\n      gl.texParameteri(target, WebGLEnum.TEXTURE_WRAP_T, textureWrappingMap[this._options.addressV]);\n      gl.texParameteri(target, WebGLEnum.TEXTURE_MAG_FILTER, textureMagFilterToWebGL(this._options.magFilter));\n      gl.texParameteri(target, WebGLEnum.TEXTURE_MIN_FILTER, textureMinFilterToWebGL(this._options.minFilter, this._options.mipFilter));\n      if (this._device.getTextureCaps().supportAnisotropicFiltering) {\n        gl.texParameterf(target, WebGLEnum.TEXTURE_MAX_ANISOTROPY, this._options.maxAnisotropy);\n      }\n    }\n  }\n  private _load(): boolean {\n    if (!isWebGL2(this._device.context)) {\n      this._object = {};\n      return true;\n    }\n    if (!this._device.isContextLost()) {\n      const gl = this._device.context;\n      if (!this._object) {\n        this._object = gl.createSampler();\n      }\n      gl.samplerParameteri(this._object, WebGLEnum.TEXTURE_WRAP_S, textureWrappingMap[this._options.addressU]);\n      gl.samplerParameteri(this._object, WebGLEnum.TEXTURE_WRAP_T, textureWrappingMap[this._options.addressV]);\n      gl.samplerParameteri(this._object, WebGLEnum.TEXTURE_WRAP_R, textureWrappingMap[this._options.addressW]);\n      gl.samplerParameteri(this._object, WebGLEnum.TEXTURE_MAG_FILTER, textureMagFilterToWebGL(this._options.magFilter));\n      gl.samplerParameteri(this._object, WebGLEnum.TEXTURE_MIN_FILTER, textureMinFilterToWebGL(this._options.minFilter, this._options.mipFilter));\n      gl.samplerParameterf(this._object, WebGLEnum.TEXTURE_MIN_LOD, this._options.lodMin);\n      gl.samplerParameterf(this._object, WebGLEnum.TEXTURE_MAX_LOD, this._options.lodMax);\n      if (this._options.compare === null) {\n        gl.samplerParameteri(this._object, WebGLEnum.TEXTURE_COMPARE_MODE, WebGLEnum.NONE);\n      } else {\n        gl.samplerParameteri(this._object, WebGLEnum.TEXTURE_COMPARE_MODE, WebGLEnum.COMPARE_REF_TO_TEXTURE);\n        gl.samplerParameteri(this._object, WebGLEnum.TEXTURE_COMPARE_FUNC, compareFuncMap[this._options.compare]);\n      }\n      if (this._device.getTextureCaps().supportAnisotropicFiltering) {\n        gl.samplerParameterf(this._object, WebGLEnum.TEXTURE_MAX_ANISOTROPY, this._options.maxAnisotropy);\n      }\n    }\n    return true;\n  }\n  isSampler(): boolean {\n    return true;\n  }\n}\n"],"names":[],"mappings":"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"}