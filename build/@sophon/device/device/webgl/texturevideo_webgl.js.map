{"version":3,"file":"texturevideo_webgl.js","sources":["../../../../../libs/device/src/device/webgl/texturevideo_webgl.ts"],"sourcesContent":["import { TextureTarget, TextureFormat } from '../base_types';\nimport { textureTargetMap } from './constants_webgl';\nimport { WebGLBaseTexture } from './basetexture_webgl';\nimport { GPUResourceUsageFlags, TextureVideo } from '../gpuobject';\nimport type { WebGLDevice } from './device_webgl';\nimport type { WebGLTextureCap } from './capabilities_webgl';\n\nexport class WebGLTextureVideo extends WebGLBaseTexture implements TextureVideo<WebGLTexture> {\n  private _source: HTMLVideoElement;\n  private _callbackId: number;\n  constructor(device: WebGLDevice, source: HTMLVideoElement) {\n    super(device, TextureTarget.Texture2D);\n    this._source = null;\n    this._callbackId = null;\n    this._format = TextureFormat.Unknown;\n    this.loadFromElement(source);\n  }\n  isTextureVideo(): this is TextureVideo {\n    return true;\n  }\n  get source(): HTMLVideoElement {\n    return this._source;\n  }\n  destroy(): void {\n    if (this._source && this._callbackId !== null) {\n      this._source.cancelVideoFrameCallback(this._callbackId);\n    }\n    super.destroy();\n  }\n  init() {\n    this.loadElement(this._source);\n  }\n  /** @internal */\n  loadFromElement(el: HTMLVideoElement): void {\n    this._flags = GPUResourceUsageFlags.TF_NO_MIPMAP | GPUResourceUsageFlags.TF_LINEAR_COLOR_SPACE;\n    this.loadElement(el);\n  }\n  generateMipmaps() {\n    // Does nothing\n  }\n  /** @internal */\n  updateVideoFrame(): boolean {\n    if (this.object && this._source.currentTime > 0 && !this._source.requestVideoFrameCallback) {\n      this.update();\n      return true;\n    }\n    return false;\n  }\n  /** @internal */\n  private update(): void {\n    this.allocInternal(TextureFormat.RGBA8UNORM, this._source.videoWidth, this._source.videoHeight, 1, 1);\n    if (!this._device.isContextLost()) {\n      const target = textureTargetMap[this._target];\n      const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(this._format);\n      this._device.context.bindTexture(target, this._object);\n      this._device.context.pixelStorei(this._device.context.UNPACK_ALIGNMENT, 1);\n      this._device.context.texImage2D(target, 0, params.glInternalFormat, params.glFormat, params.glType[0], this._source);\n    }\n  }\n  /** @internal */\n  private loadElement(element: HTMLVideoElement): void {\n    if (this._source && this._callbackId !== null) {\n      this._source.cancelVideoFrameCallback(this._callbackId);\n      this._callbackId = null;\n    }\n    this._source = element;\n    if (this._source?.requestVideoFrameCallback) {\n      const that = this;\n      that._callbackId = this._source.requestVideoFrameCallback(function cb() {\n        if (that._object) {\n          that.update();\n          that._callbackId = that._source.requestVideoFrameCallback(cb);\n        }\n      });\n    }\n    this.allocInternal(TextureFormat.RGBA8UNORM, Math.max(this._source.videoWidth, 1), Math.max(this._source.videoHeight, 1), 1, 1);\n  }\n}\n"],"names":[],"mappings":"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"}