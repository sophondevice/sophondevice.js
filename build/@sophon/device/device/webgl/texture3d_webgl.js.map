{"version":3,"file":"texture3d_webgl.js","sources":["../../../../../libs/device/src/device/webgl/texture3d_webgl.ts"],"sourcesContent":["import { TextureTarget, TextureFormat, linearTextureFormatToSRGB } from '../base_types';\nimport { textureTargetMap } from './constants_webgl';\nimport { WebGLBaseTexture } from './basetexture_webgl';\nimport { GPUResourceUsageFlags, Texture3D, GPUDataBuffer } from '../gpuobject';\nimport type { WebGLDevice } from './device_webgl';\nimport type { WebGLTextureCap } from './capabilities_webgl';\nimport type { TypedArray } from '../../misc';\n\nexport class WebGLTexture3D extends WebGLBaseTexture implements Texture3D<WebGLTexture> {\n  constructor(device: WebGLDevice) {\n    if (!device.isWebGL2) {\n      throw new Error('device does not support 3D texture');\n    }\n    super(device, TextureTarget.Texture3D);\n  }\n  get depth(): number {\n    return this._depth;\n  }\n  isTexture3D(): this is Texture3D {\n    return true;\n  }\n  init(): void {\n    this.loadEmpty(this._format, this._width, this._height, this._depth, this._mipLevelCount);\n  }\n  update(\n    data: TypedArray,\n    xOffset: number,\n    yOffset: number,\n    zOffset: number,\n    width: number,\n    height: number,\n    depth: number\n  ): void {\n    if (this._device.isContextLost()) {\n      return;\n    }\n    if (!this._object) {\n      this.allocInternal(this._format, this._width, this._height, this._depth, this._mipLevelCount);\n    }\n    const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(this._format);\n    const gl = this._device.context as WebGL2RenderingContext;\n    gl.bindTexture(textureTargetMap[this._target], this._object);\n    gl.pixelStorei(this._device.context.UNPACK_ALIGNMENT, 1);\n    gl.texSubImage3D(\n      textureTargetMap[this._target],\n      0,\n      xOffset,\n      yOffset,\n      zOffset,\n      width,\n      height,\n      depth,\n      params.glFormat,\n      params.glType[0],\n      data\n    );\n  }\n  createEmpty(format: TextureFormat, width: number, height: number, depth: number, creationFlags?: number): void {\n    this._flags = Number(creationFlags) || 0;\n    if (this._flags & GPUResourceUsageFlags.TF_WRITABLE) {\n      console.error(new Error('webgl device does not support storage texture'));\n    } else {\n      format = (this._flags & GPUResourceUsageFlags.TF_LINEAR_COLOR_SPACE) ? format : linearTextureFormatToSRGB(format);\n      this.loadEmpty(format, width, height, depth, 0);\n    }\n  }\n  generateMipmaps() {\n    // No mipmap support for 3d texture\n  }\n  readPixels(layer: number, x: number, y: number, w: number, h: number, buffer: TypedArray): Promise<void> {\n    return new Promise<void>(resolve => {\n      const fb = this._device.createFrameBuffer({\n        colorAttachments: [{ texture: this, layer }]\n      });\n      const savedViewport = this._device.getViewport() as [number, number, number, number];\n      const savedScissor = this._device.getScissor() as [number, number, number, number];\n      const savedFB = this._device.getFramebuffer();\n      this._device.setFramebuffer(fb);\n      this._device.readPixels(x, y, w, h, buffer).then(() => {\n        fb.dispose();\n        resolve();\n      });\n      this._device.setFramebuffer(savedFB);\n      this._device.setViewport(...savedViewport);\n      this._device.setScissor(...savedScissor);\n    });\n  }\n  readPixelsToBuffer(layer: number, x: number, y: number, w: number, h: number, buffer: GPUDataBuffer): void {\n    const fb = this._device.createFrameBuffer({\n      colorAttachments: [{ texture: this, layer }]\n    });\n    const savedViewport = this._device.getViewport() as [number, number, number, number];\n    const savedScissor = this._device.getScissor() as [number, number, number, number];\n    const savedFB = this._device.getFramebuffer();\n    this._device.setFramebuffer(fb);\n    this._device.readPixelsToBuffer(x, y, w, h, buffer);\n    this._device.setFramebuffer(savedFB);\n    this._device.setViewport(...savedViewport);\n    this._device.setScissor(...savedScissor);\n    fb.dispose();\n  }\n  /** @internal */\n  private loadEmpty(format: TextureFormat, width: number, height: number, depth: number, numMipLevels: number): void {\n    this.allocInternal(format, width, height, depth, numMipLevels);\n    if (this._mipLevelCount > 1 && !this._device.isContextLost()) {\n      this.generateMipmaps();\n    }\n  }\n}\n"],"names":[],"mappings":"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"}