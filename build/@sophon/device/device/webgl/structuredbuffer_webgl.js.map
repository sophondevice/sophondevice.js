{"version":3,"file":"structuredbuffer_webgl.js","sources":["../../../../../libs/device/src/device/webgl/structuredbuffer_webgl.ts"],"sourcesContent":["import { WebGLGPUBuffer } from \"./buffer_webgl\";\r\nimport { StructuredBufferData } from \"../uniformdata\";\r\nimport { PBTypeInfo, PBStructTypeInfo, PBPrimitiveType } from \"../builder\";\r\nimport { GPUResourceUsageFlags, StructuredBuffer, StructuredValue } from \"../gpuobject\";\r\nimport type { WebGLDevice } from './device_webgl';\r\nimport type { TypedArray } from \"../../misc\";\r\n\r\nexport class WebGLStructuredBuffer extends WebGLGPUBuffer implements StructuredBuffer {\r\n  private _structure: PBStructTypeInfo;\r\n  private _data: StructuredBufferData;\r\n  constructor(device: WebGLDevice, structure: PBStructTypeInfo, usage: number, source?: TypedArray) {\r\n    if (!(structure?.isStructType())) {\r\n      throw new Error('invalid structure type');\r\n    }\r\n    if (usage & GPUResourceUsageFlags.BF_INDEX) {\r\n      throw new Error('structured buffer must not have Index usage flag');\r\n    }\r\n    if ((usage & GPUResourceUsageFlags.BF_READ) || (usage & GPUResourceUsageFlags.BF_WRITE)) {\r\n      throw new Error('structured buffer must not have Read or Write usage flags');\r\n    }\r\n    if (usage & GPUResourceUsageFlags.BF_VERTEX) {\r\n      if (structure.structMembers.length !== 1 || !structure.structMembers[0].type.isArrayType()) {\r\n        throw new Error('structured buffer for vertex usage must have only one array member');\r\n      }\r\n      if (!WebGLStructuredBuffer.isValidArrayElementType(structure.structMembers[0].type.elementType)) {\r\n        throw new Error('invalid vertex data type when creating vertex buffer');\r\n      }\r\n    }\r\n    const layout = structure.toBufferLayout(0, structure.layout);\r\n    if (source && layout.byteSize !== source.byteLength) {\r\n      throw new Error(`create structured buffer failed: invalid source size: ${source.byteLength}, should be ${layout.byteSize}`);\r\n    }\r\n    const useSystemMemory = !device.isWebGL2 && (usage & GPUResourceUsageFlags.BF_UNIFORM) !== 0;\r\n    super(device, usage, source || layout.byteSize, useSystemMemory);\r\n    this._data = new StructuredBufferData(layout, useSystemMemory ? this.systemMemoryBuffer : this);\r\n    this._structure = structure;\r\n  }\r\n  set(name: string, value: StructuredValue) {\r\n    this._data.set(name, value);\r\n  }\r\n  get structure(): PBStructTypeInfo {\r\n    return this._structure;\r\n  }\r\n  set structure(st: PBStructTypeInfo) {\r\n    if (st?.typeId !== this._structure.typeId) {\r\n      const layout = st.toBufferLayout(0, st.layout);\r\n      if (layout.byteSize > this.byteLength) {\r\n        throw new Error(`set structure type failed: new structure type is too large: ${layout.byteSize}`);\r\n      }\r\n      this._data = new StructuredBufferData(layout, this);\r\n      this._structure = st;\r\n    }\r\n  }\r\n  getUniformData(): StructuredBufferData {\r\n    return this._data;\r\n  }\r\n  private static isValidArrayElementType(type: PBTypeInfo) {\r\n    if (type.isPrimitiveType()) {\r\n      return type.scalarType !== PBPrimitiveType.BOOL && !type.isMatrixType();\r\n    } else if (type.isStructType()) {\r\n      for (const member of type.structMembers) {\r\n        if (!member.type.isPrimitiveType() || member.type.scalarType === PBPrimitiveType.BOOL || member.type.isMatrixType()) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}