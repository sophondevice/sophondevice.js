{"version":3,"file":"texture2darray_webgl.js","sources":["../../../../../libs/device/src/device/webgl/texture2darray_webgl.ts"],"sourcesContent":["import { TextureTarget, TextureFormat, linearTextureFormatToSRGB } from '../base_types';\nimport { textureTargetMap } from './constants_webgl';\nimport { WebGLBaseTexture } from './basetexture_webgl';\nimport { GPUResourceUsageFlags, TextureImageElement, Texture2DArray, GPUDataBuffer } from '../gpuobject';\nimport type { WebGLDevice } from './device_webgl';\nimport type { WebGLTextureCap } from './capabilities_webgl';\nimport type { TypedArray } from '../../misc';\n\nexport class WebGLTexture2DArray extends WebGLBaseTexture implements Texture2DArray<WebGLTexture> {\n  constructor(device: WebGLDevice) {\n    if (!device.isWebGL2) {\n      throw new Error('device does not support 2d texture array');\n    }\n    super(device, TextureTarget.Texture2DArray);\n  }\n  isTexture2DArray(): this is Texture2DArray {\n    return true;\n  }\n  init(): void {\n    this.loadEmpty(this._format, this._width, this._height, this._depth, this._mipLevelCount);\n  }\n  update(data: TypedArray, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number): void {\n    if (this._device.isContextLost()) {\n      return;\n    }\n    if (!this._object) {\n      this.allocInternal(this._format, this._width, this._height, this._depth, this._mipLevelCount);\n    }\n    const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(this._format);\n    const gl = this._device.context as WebGL2RenderingContext;\n    gl.bindTexture(textureTargetMap[this._target], this._object);\n    gl.pixelStorei(this._device.context.UNPACK_ALIGNMENT, 1);\n    gl.texSubImage3D(\n      textureTargetMap[this._target],\n      0,\n      xOffset,\n      yOffset,\n      zOffset,\n      width,\n      height,\n      depth,\n      params.glFormat,\n      params.glType[0],\n      data,\n    );\n    if (this._mipLevelCount > 1) {\n      this.generateMipmaps();\n    }\n  }\n  updateFromElement(\n    data: TextureImageElement,\n    xOffset: number,\n    yOffset: number,\n    layerIndex: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  ): void {\n    if (this._device.isContextLost()) {\n      return;\n    }\n    if (!this._object) {\n      this.allocInternal(this._format, this._width, this._height, this._depth, this._mipLevelCount);\n    }\n    const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(this._format);\n    const gl = this._device.context as WebGL2RenderingContext;\n    gl.bindTexture(textureTargetMap[this._target], this._object);\n    gl.pixelStorei(this._device.context.UNPACK_ALIGNMENT, 1);\n    if (x === 0 && y === 0 && width === data.width && height === data.height) {\n      gl.texSubImage3D(\n        textureTargetMap[this._target],\n        0,\n        xOffset,\n        yOffset,\n        layerIndex,\n        width,\n        height,\n        1,\n        params.glFormat,\n        params.glType[0],\n        data,\n      );\n    } else {\n      const cvs = document.createElement('canvas');\n      cvs.width = width;\n      cvs.height = height;\n      const ctx = cvs.getContext('2d');\n      ctx.drawImage(data, x, y, width, height, 0, 0, width, height);\n      gl.texSubImage3D(\n        textureTargetMap[this._target],\n        0,\n        xOffset,\n        yOffset,\n        layerIndex,\n        width,\n        height,\n        1,\n        params.glFormat,\n        params.glType[0],\n        cvs,\n      );\n      cvs.width = 0;\n      cvs.height = 0;\n    }\n    if (this._mipLevelCount > 1) {\n      this.generateMipmaps();\n    }\n  }\n  createEmpty(format: TextureFormat, width: number, height: number, depth: number, creationFlags?: number): void {\n    this._flags = Number(creationFlags) || 0;\n    if (this._flags & GPUResourceUsageFlags.TF_WRITABLE) {\n      console.error(new Error('webgl device does not support storage texture'));\n    } else {\n      format = (this._flags & GPUResourceUsageFlags.TF_LINEAR_COLOR_SPACE) ? format : linearTextureFormatToSRGB(format);\n      this.loadEmpty(format, width, height, depth, 0);\n    }\n  }\n  generateMipmaps() {\n    if (this._object && this._mipLevelCount > 1) {\n      const target = textureTargetMap[this._target];\n      this._device.context.bindTexture(target, this._object);\n      this._device.context.generateMipmap(target);\n    }\n  }\n  readPixels(layer: number, x: number, y: number, w: number, h: number, buffer: TypedArray): Promise<void> {\n    return new Promise<void>(resolve => {\n      const fb = this._device.createFrameBuffer({\n        colorAttachments: [{ texture: this, layer }]\n      });\n      const savedViewport = this._device.getViewport() as [number, number, number, number];\n      const savedScissor = this._device.getScissor() as [number, number, number, number];\n      const savedFB = this._device.getFramebuffer();\n      this._device.setFramebuffer(fb);\n      this._device.readPixels(x, y, w, h, buffer).then(() => {\n        fb.dispose();\n        resolve();\n      });\n      this._device.setFramebuffer(savedFB);\n      this._device.setViewport(...savedViewport);\n      this._device.setScissor(...savedScissor);\n    });\n  }\n  readPixelsToBuffer(layer: number, x: number, y: number, w: number, h: number, buffer: GPUDataBuffer): void {\n    const fb = this._device.createFrameBuffer({\n      colorAttachments: [{ texture: this, layer }]\n    });\n    const savedViewport = this._device.getViewport() as [number, number, number, number];\n    const savedScissor = this._device.getScissor() as [number, number, number, number];\n    const savedFB = this._device.getFramebuffer();\n    this._device.setFramebuffer(fb);\n    this._device.readPixelsToBuffer(x, y, w, h, buffer);\n    this._device.setFramebuffer(savedFB);\n    this._device.setViewport(...savedViewport);\n    this._device.setScissor(...savedScissor);\n    fb.dispose();\n  }\n  private loadEmpty(format: TextureFormat, width: number, height: number, depth: number, numMipLevels: number): void {\n    this.allocInternal(format, width, height, depth, numMipLevels);\n    if (this._mipLevelCount > 1 && !this._device.isContextLost()) {\n      this.generateMipmaps();\n    }\n  }\n}\n"],"names":[],"mappings":"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"}