{"version":3,"file":"sampler_cache.js","sources":["../../../../../libs/device/src/device/webgl/sampler_cache.ts"],"sourcesContent":["import { WebGLTextureSampler } from './sampler_webgl';\r\nimport type { SamplerOptions } from '../gpuobject';\r\nimport type { WebGLDevice } from './device_webgl';\r\nexport class SamplerCache {\r\n  private _device: WebGLDevice;\r\n  private _samplers: { [hash: string]: WebGLTextureSampler };\r\n  constructor(device: WebGLDevice) {\r\n    this._device = device;\r\n    this._samplers = {};\r\n  }\r\n  fetchSampler(options: SamplerOptions): WebGLTextureSampler {\r\n    const hash = this.hash(options);\r\n    let sampler = this._samplers[hash];\r\n    if (!sampler) {\r\n      sampler = this.createSampler(options);\r\n      this._samplers[hash] = sampler;\r\n    }\r\n    return sampler;\r\n  }\r\n  private hash(options: SamplerOptions): string {\r\n    const addressU = options.addressU ? String(options.addressU) : '';\r\n    const addressV = options.addressV ? String(options.addressV) : '';\r\n    const addressW = options.addressW ? String(options.addressW) : '';\r\n    const magFilter = options.magFilter ? String(options.magFilter) : '';\r\n    const minFilter = options.minFilter ? String(options.minFilter) : '';\r\n    const mipFilter = options.mipFilter ? String(options.mipFilter) : '';\r\n    const lodMin = options.lodMin ? String(options.lodMin) : '';\r\n    const lodMax = options.lodMax ? String(options.lodMax) : '';\r\n    const compare = options.compare ? String(options.compare) : '';\r\n    const maxAnisotropy = options.maxAnisotropy ? String(options.maxAnisotropy) : '';\r\n    return `${addressU}:${addressV}:${addressW}:${magFilter}:${minFilter}:${mipFilter}:${lodMin}:${lodMax}:${compare}:${maxAnisotropy}`;\r\n  }\r\n  private createSampler(options: SamplerOptions): WebGLTextureSampler {\r\n    return new WebGLTextureSampler(this._device, options);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;MAGa,YAAY,CAAA;AACf,IAAA,OAAO,CAAc;AACrB,IAAA,SAAS,CAA0C;AAC3D,IAAA,WAAA,CAAY,MAAmB,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AACtB,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;AACD,IAAA,YAAY,CAAC,OAAuB,EAAA;QAClC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,EAAE;AACZ,YAAA,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AACtC,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;AAChC,SAAA;AACD,QAAA,OAAO,OAAO,CAAC;KAChB;AACO,IAAA,IAAI,CAAC,OAAuB,EAAA;AAClC,QAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AAClE,QAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AAClE,QAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AAClE,QAAA,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;AACrE,QAAA,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;AACrE,QAAA,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;AACrE,QAAA,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AAC5D,QAAA,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AAC5D,QAAA,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;AAC/D,QAAA,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;QACjF,OAAO,CAAA,EAAG,QAAQ,CAAI,CAAA,EAAA,QAAQ,IAAI,QAAQ,CAAA,CAAA,EAAI,SAAS,CAAI,CAAA,EAAA,SAAS,IAAI,SAAS,CAAA,CAAA,EAAI,MAAM,CAAI,CAAA,EAAA,MAAM,IAAI,OAAO,CAAA,CAAA,EAAI,aAAa,CAAA,CAAE,CAAC;KACrI;AACO,IAAA,aAAa,CAAC,OAAuB,EAAA;QAC3C,OAAO,IAAI,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACvD;AACF;;;;"}