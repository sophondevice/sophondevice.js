{"version":3,"file":"framebuffer_webgl.js","sources":["../../../../../libs/device/src/device/webgl/framebuffer_webgl.ts"],"sourcesContent":["import { CubeFace } from '@sophon/base';\nimport { WebGLGPUObject } from './gpuobject_webgl';\nimport { WebGLEnum } from './webgl_enum';\nimport { BaseTexture, IFrameBufferTextureAttachment, FrameBuffer, IFrameBufferOptions, GPUResourceUsageFlags } from '../gpuobject';\nimport { cubeMapFaceMap } from './constants_webgl';\nimport type { WebGLDevice } from './device_webgl';\nimport { hasStencilChannel } from '../base_types';\n\nconst STATUS_UNCHECKED = 0;\nconst STATUS_OK = 1;\nconst STATUS_FAILED = 2;\nexport class WebGLFrameBuffer extends WebGLGPUObject<WebGLFramebuffer> implements FrameBuffer<WebGLFramebuffer> {\n  private _options: IFrameBufferOptions;\n  private _viewport: number[];\n  private _scissor: [number, number, number, number];\n  private _needBindBuffers: boolean;\n  private _status: number;\n  private _width: number;\n  private _height: number;\n  private _isMRT: boolean;\n  private _drawBuffers: number[];\n  constructor(device: WebGLDevice, opt?: IFrameBufferOptions) {\n    super(device);\n    this._object = null;\n    this._viewport = [0, 0, 0, 0];\n    this._scissor = null;\n    this._needBindBuffers = false;\n    this._status = STATUS_UNCHECKED;\n    this._options = {\n      colorAttachments: opt?.colorAttachments\n        ? opt.colorAttachments.map((value) => Object.assign({\n          texture: null,\n          face: 0,\n          layer: 0,\n          level: 0\n        }, value))\n        : null,\n      depthAttachment: opt?.depthAttachment ? Object.assign({}, opt.depthAttachment) : null\n    };\n    this._width = 0;\n    this._height = 0;\n    this._drawBuffers = this._options.colorAttachments.map((val, index) => val.texture ? WebGLEnum.COLOR_ATTACHMENT0 + index : WebGLEnum.NONE);\n    this._isMRT = this._drawBuffers.length > 1;\n    this._init();\n  }\n  getViewport(): number[] {\n    return this._viewport;\n  }\n  setViewport(vp: number[]): void {\n    this._viewport = [...vp];\n  }\n  getScissorRect(): number[] {\n    return this._scissor;\n  }\n  setScissorRect(scissor: [number, number, number, number]): void {\n    this._scissor = scissor ? [...scissor] : null;\n  }\n  isMRT(): boolean {\n    return this._isMRT;\n  }\n  getWidth(): number {\n    return this._width;\n  }\n  getHeight(): number {\n    return this._height;\n  }\n  async restore() {\n    if (!this._object && !this._device.isContextLost()) {\n      if (this._options?.depthAttachment?.texture?.disposed) {\n        await this._options.depthAttachment.texture.reload();\n      }\n      if (this._options?.colorAttachments) {\n        for (const k of this._options.colorAttachments) {\n          if (k?.texture?.disposed) {\n            await k.texture.reload();\n          }\n        }\n      }\n    }\n    this._init();\n  }\n  destroy() {\n    if (this._object) {\n      this._device.context.deleteFramebuffer(this._object);\n      this._object = null;\n    }\n  }\n  setCubeTextureFace(index: number, face: CubeFace) {\n    const k = this._options.colorAttachments[index];\n    if (k && k.face !== face) {\n      k.face = face;\n      this._needBindBuffers = true;\n      if (this._device.context._currentFramebuffer === this) {\n        this.bind();\n      }\n    }\n  }\n  setTextureLevel(index: number, level: number) {\n    const k = this._options.colorAttachments[index];\n    if (k && k.level !== level) {\n      k.level = level;\n      this._needBindBuffers = true;\n      if (this._device.context._currentFramebuffer === this) {\n        this.bind();\n      }\n    }\n  }\n  setTextureLayer(index: number, layer: number) {\n    const k = this._options.colorAttachments[index];\n    if (k && k.layer !== layer) {\n      k.layer = layer;\n      this._needBindBuffers = true;\n      if (this._device.context._currentFramebuffer === this) {\n        this.bind();\n      }\n    }\n  }\n  setDepthTextureLayer(layer: number) {\n    const k = this._options.depthAttachment;\n    if (k && k.layer !== layer) {\n      k.layer = layer;\n      this._needBindBuffers = true;\n      if (this._device.context._currentFramebuffer === this) {\n        this.bind();\n      }\n    }\n  }\n  getDepthAttachment(): BaseTexture {\n    return this._options?.depthAttachment?.texture || null;\n  }\n  getColorAttachments(): BaseTexture[] {\n    return this._options.colorAttachments?.map(val => val.texture || null) || [];\n  }\n  bind(): boolean {\n    if (this._object) {\n      this._device.context.bindFramebuffer(WebGLEnum.FRAMEBUFFER, this._object);\n      this._device.context._currentFramebuffer = this;\n      if (this._needBindBuffers) {\n        this._needBindBuffers = false;\n        if (!this._bindBuffers()) {\n          this._device.context.bindFramebuffer(WebGLEnum.FRAMEBUFFER, null);\n          this._device.context._currentFramebuffer = null;\n          return false;\n        }\n      }\n      const drawBuffersExt = this._device.drawBuffersExt;\n      if (drawBuffersExt) {\n        drawBuffersExt.drawBuffers(this._drawBuffers);\n      } else if (this._isMRT) {\n        console.error('device does not support multiple framebuffer color attachments');\n      }\n      this._device.setViewport();\n      this._device.setScissor();\n      return true;\n    }\n    return false;\n  }\n  unbind(): void {\n    if (this._device.context._currentFramebuffer === this) {\n      this._device.context.bindFramebuffer(WebGLEnum.FRAMEBUFFER, null);\n      this._device.context._currentFramebuffer = null;\n      this._device.setViewport();\n      this._device.setScissor();\n      const drawBuffersExt = this._device.drawBuffersExt;\n      if (drawBuffersExt) {\n        drawBuffersExt.drawBuffers([WebGLEnum.BACK]);\n      }\n    }\n  }\n  private _load(): void {\n    if (this._device.isContextLost()) {\n      return;\n    }\n    this._object = this._device.context.createFramebuffer();\n    this._device.context.bindFramebuffer(WebGLEnum.FRAMEBUFFER, this._object);\n    if (!this._bindBuffers()) {\n      this.dispose();\n    }\n    this._device.context.bindFramebuffer(WebGLEnum.FRAMEBUFFER, null);\n    this._device.context._currentFramebuffer = null;\n  }\n  private _bindAttachment(attachment: number, info: IFrameBufferTextureAttachment): boolean {\n    if (info.texture) {\n      if (info.texture.isTexture2D()) {\n        this._device.context.framebufferTexture2D(\n          WebGLEnum.FRAMEBUFFER,\n          attachment,\n          WebGLEnum.TEXTURE_2D,\n          info.texture.object,\n          info.level ?? 0\n        );\n      } else if (info.texture.isTextureCube()) {\n        this._device.context.framebufferTexture2D(\n          WebGLEnum.FRAMEBUFFER,\n          attachment,\n          cubeMapFaceMap[info.face ?? CubeFace.PX],\n          info.texture.object,\n          info.level ?? 0,\n        );\n      } else if (info.texture.isTexture2DArray() || info.texture.isTexture3D()) {\n        (this._device.context as WebGL2RenderingContext).framebufferTextureLayer(\n          WebGLEnum.FRAMEBUFFER,\n          attachment,\n          info.texture.object,\n          info.level ?? 0,\n          info.layer ?? 0\n        );\n      } else {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n  private _bindBuffers(): boolean {\n    if (this._options.depthAttachment?.texture) {\n      let target: number;\n      if (hasStencilChannel(this._options.depthAttachment.texture.format)) {\n        target = WebGLEnum.DEPTH_STENCIL_ATTACHMENT;\n      } else {\n        target = WebGLEnum.DEPTH_ATTACHMENT;\n      }\n      if (!this._bindAttachment(target, this._options.depthAttachment)) {\n        return false;\n      }\n    }\n    for (let i = 0; i < this._options.colorAttachments.length; i++) {\n      const opt = this._options.colorAttachments[i];\n      if (opt.texture) {\n        if (!this._bindAttachment(WebGLEnum.COLOR_ATTACHMENT0 + i, opt)) {\n          return false;\n        }\n      }\n    }\n    if (this._status === STATUS_UNCHECKED) {\n      const status = this._device.context.checkFramebufferStatus(WebGLEnum.FRAMEBUFFER);\n      if (status !== WebGLEnum.FRAMEBUFFER_COMPLETE) {\n        console.error(`Framebuffer not complete: ${status}`);\n        this._status = STATUS_FAILED;\n      } else {\n        this._status = STATUS_OK;\n      }\n    }\n    return this._status === STATUS_OK;\n  }\n  private _init(): void {\n    this._width = 0;\n    this._height = 0;\n    for (const colorAttachment of this._options.colorAttachments) {\n      if (colorAttachment.texture) {\n        if (this._width === 0) {\n          this._width = colorAttachment.texture.width;\n        }\n        if (this._height === 0) {\n          this._height = colorAttachment.texture.height;\n        }\n        if (this._width !== colorAttachment.texture.width || this._height !== colorAttachment.texture.height) {\n          console.error('init frame buffer failed: color attachment textures must have same size');\n          return;\n        }\n      }\n    }\n    if (this._width === 0 || this._height === 0) {\n      console.error('init frame buffer failed: can not create frame buffer with zero size');\n    }\n    this._load();\n    this._viewport = [0, 0, this._width, this._height];\n  }\n  isFramebuffer(): boolean {\n    return true;\n  }\n  getSampleCount(): number {\n    return 1;\n  }\n}\n"],"names":[],"mappings":"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"}