{"version":3,"file":"capabilities_webgl.js","sources":["../../../../../libs/device/src/device/webgl/capabilities_webgl.ts"],"sourcesContent":["import { WebGLContext, TextureFormat } from '../base_types';\r\nimport { WebGLEnum } from './webgl_enum';\r\nimport { isWebGL2 } from './utils';\r\nimport type { FramebufferCaps, MiscCaps, ShaderCaps, TextureCaps, ITextureFormatInfo } from '../device';\r\n\r\nexport interface ITextureParams {\r\n  target: number;\r\n  format: number;\r\n  internalFormat: number;\r\n  type: number;\r\n  filterable: boolean;\r\n  renderable: boolean;\r\n  repeatable: boolean;\r\n  compressed: boolean;\r\n  generateMipmap: boolean;\r\n}\r\n\r\n/*********************************************************************************************************************\r\n * Unsized Internal Formats\r\n * --------------------------------------------------------------------------------------------\r\n * GL_RGB                  | GL_RGB               | GL_UNSIGNED_BYTE\r\n *                         |                      | GL_UNSIGNED_SHORT_5_6_5\r\n * --------------------------------------------------------------------------------------------\r\n * GL_RGBA                 | GL_RGBA              | GL_UNSIGNED_BYTE\r\n *                         |                      | GL_UNSIGNED_SHORT_4_4_4_4\r\n *                         |                      | GL_UNSIGNED_SHORT_5_5_5_1\r\n * --------------------------------------------------------------------------------------------\r\n * GL_LUMINANCE_ALPHA      | GL_LUMINANCE_ALPHA   | GL_UNSIGNED_BYTE\r\n * --------------------------------------------------------------------------------------------\r\n * GL_LUMINANCE            | GL_LUMINANCE         | GL_UNSIGNED_BYTE\r\n * --------------------------------------------------------------------------------------------\r\n * GL_ALPHA                | GL_ALPHA             | GL_UNSIGNED_BYTE\r\n * --------------------------------------------------------------------------------------------\r\n *\r\n *\r\n * Sized Internal Formats\r\n * ------------------------------------------------------------------------------------------------------\r\n * Sized Internal Format   | Format               | Type                            | Renderable | Filterable\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R8                   | GL_RED               | GL_UNSIGNED_BYTE                | Yes        | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R8_SNORM             | GL_RED               | GL_BYTE                         | No         | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R16F                 | GL_RED               | GL_HALF_FLOAT                   | No         | Yes\r\n *                         |                      | GL_FLOAT                        |            |\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R32F                 | GL_RED               | GL_FLOAT                        | No         | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R8UI                 | GL_RED_INTEGER       | GL_UNSIGNED_BYTE                | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R8I                  | GL_RED_INTEGER       | GL_BYTE                         | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R16UI                | GL_RED_INTEGER       | GL_UNSIGNED_SHORT               | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R16I                 | GL_RED_INTEGER       | GL_SHORT                        | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R32UI                | GL_RED_INTEGER       | GL_UNSIGNED_INT                 | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R32I                 | GL_RED_INTEGER       | GL_INT                          | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RG8                  | GL_RG                | GL_UNSIGNED_BYTE                | Yes        | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RG8_SNORM            | GL_RG                | GL_BYTE                         | No         | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RG16F                | GL_RG                | GL_HALF_FLOAT                   | No         | Yes\r\n *                         |                      | GL_FLOAT                        |            |\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RG32F                | GL_RG                | GL_FLOAT                        | No         | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RG8UI                | GL_RG_INTEGER        | GL_UNSIGNED_BYTE                | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RG8I                 | GL_RG_INTEGER        | GL_BYTE                         | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RG16UI               | GL_RG_INTEGER        | GL_UNSIGNED_SHORT               | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RG16I                | GL_RG_INTEGER        | GL_SHORT                        | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RG32UI               | GL_RG_INTEGER        | GL_UNSIGNED_INT                 | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RG32I                | GL_RG_INTEGER        | GL_INT                          | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB8                 | GL_RGB               | GL_UNSIGNED_BYTE                | Yes        | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_SRGB8                | GL_RGB               | GL_UNSIGNED_BYTE                | No         | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB565               | GL_RGB               | GL_UNSIGNED_BYTE                | Yes        | Yes\r\n *                         |                      | GL_UNSIGNED_SHORT_5_6_5         |            |\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB8_SNORM           | GL_RGB               | GL_BYTE                         | No         | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_R11F_G11F_B10F       | GL_RGB               | GL_UNSIGNED_INT_10F_11F_11F_REV | No         | Yes\r\n *                         |                      | GL_HALF_FLOAT                   |            |\r\n *                         |                      | GL_FLOAT                        |            |\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB9_E5              | GL_RGB               | GL_UNSIGNED_INT_5_9_9_9_REV     | No         | Yes\r\n *                         |                      | GL_HALF_FLOAT                   |            |\r\n *                         |                      | GL_FLOAT                        |            |\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB16F               | GL_RGB               | GL_HALF_FLOAT                   | No         | Yes\r\n *                         |                      | GL_FLOAT                        |            |\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB32F               | GL_RGB               | GL_FLOAT                        | No         | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB8UI               | GL_RGB_INTEGER       | GL_UNSIGNED_BYTE                | No         | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB8I                | GL_RGB_INTEGER       | GL_BYTE                         | No         | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB16UI              | GL_RGB_INTEGER       | GL_UNSIGNED_SHORT               | No         | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB16I               | GL_RGB_INTEGER       | GL_SHORT                        | No         | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB32UI              | GL_RGB_INTEGER       | GL_UNSIGNED_INT                 | No         | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB32I               | GL_RGB_INTEGER       | GL_INT                          | No         | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA8                | GL_RGBA              | GL_UNSIGNED_BYTE                | Yes        | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_SRGB8_ALPHA8         | GL_RGBA              | GL_UNSIGNED_BYTE                | Yes        | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA8_SNORM          | GL_RGBA              | GL_BYTE                         | No         | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB5_A1              | GL_RGBA              | GL_UNSIGNED_BYTE                | Yes        | Yes\r\n *                         |                      | GL_UNSIGNED_SHORT_5_5_5_1       |            |\r\n *                         |                      | GL_UNSIGNED_INT_2_10_10_10_REV  |            |\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA4                | GL_RGBA              | GL_UNSIGNED_BYTE                | Yes        | Yes\r\n *                         |                      | GL_UNSIGNED_SHORT_4_4_4_4       |            |\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGB10_A2             | GL_RGBA              | GL_UNSIGNED_INT_2_10_10_10_REV  | Yes        | Yes\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA16F              | GL_RGBA              | GL_HALF_FLOAT                   | No         | Yes\r\n *                         |                      | GL_FLOAT                        |            |\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA32F              | GL_RGBA              | GL_FLOAT                        | No         | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA8UI              | GL_RGBA_INTEGER      | GL_UNSIGNED_BYTE                | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA8I               | GL_RGBA_INTEGER      | GL_BYTE                         | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA16UI             | GL_RGBA_INTEGER      | GL_UNSIGNED_SHORT               | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA16I              | GL_RGBA_INTEGER      | GL_SHORT                        | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA32UI             | GL_RGBA_INTEGER      | GL_UNSIGNED_INT                 | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_RGBA32I              | GL_RGBA_INTEGER      | GL_INT                          | Yes        | No\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_DEPTH_COMPONENT16    | GL_DEPTH_COMPONENT   | GL_UNSIGNED_SHORT               | N/A        | N/A\r\n *                         |                      | GL_UNSIGNED_INT                 |            |\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_DEPTH_COMPONENT24    | GL_DEPTH_COMPONENT   | GL_UNSIGNED_INT                 | N/A        | N/A\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_DEPTH_COMPONENT32F   | GL_DEPTH_COMPONENT   | GL_FLOAT                        | N/A        | N/A\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_DEPTH24_STENCIL8     | GL_DEPTH_STENCIL     | GL_UNSIGNED_INT_24_8            | N/A        | N/A\r\n * ------------------------------------------------------------------------------------------------------\r\n * GL_DEPTH32F_STENCIL8    | GL_DEPTH_STENCIL     | GL_FLOAT_32_UNSIGNED_INT_24_8_REV | N/A      | N/A\r\n * ------------------------------------------------------------------------------------------------------\r\n *********************************************************************************************************************/\r\n\r\nexport interface ITextureFormatInfoWebGL extends ITextureFormatInfo {\r\n  glFormat: number;\r\n  glInternalFormat: number;\r\n  glType: number[];\r\n  filterable: boolean;\r\n  renderable: boolean;\r\n  compressed: boolean;\r\n}\r\n\r\nexport class WebGLFramebufferCap implements FramebufferCaps {\r\n  private _isWebGL2: boolean;\r\n  private _extDrawBuffers: WEBGL_draw_buffers;\r\n  private _extRenderMipmap: unknown;\r\n  maxDrawBuffers: number;\r\n  supportDrawBuffers: boolean;\r\n  supportRenderMipmap: boolean;\r\n  constructor(gl: WebGLContext) {\r\n    this._isWebGL2 = isWebGL2(gl);\r\n    this._extDrawBuffers = null;\r\n    this._extRenderMipmap = null;\r\n    if (this._isWebGL2) {\r\n      this.supportDrawBuffers = true;\r\n      this.supportRenderMipmap = true;\r\n    } else {\r\n      this._extDrawBuffers = gl.getExtension('WEBGL_draw_buffers');\r\n      this.supportDrawBuffers = !!this._extDrawBuffers;\r\n      this._extRenderMipmap = gl.getExtension('OES_fbo_render_mipmap');\r\n      this.supportRenderMipmap = !!this._extRenderMipmap;\r\n    }\r\n    this.maxDrawBuffers = this.supportDrawBuffers\r\n      ? Math.min(\r\n        gl.getParameter(WebGLEnum.MAX_COLOR_ATTACHMENTS),\r\n        gl.getParameter(WebGLEnum.MAX_DRAW_BUFFERS),\r\n      )\r\n      : 1;\r\n  }\r\n}\r\n\r\nexport class WebGLMiscCap implements MiscCaps {\r\n  private _isWebGL2: boolean;\r\n  private _extIndexUint32: OES_element_index_uint;\r\n  private _extBlendMinMax: EXT_blend_minmax;\r\n  private _extLoseContext: WEBGL_lose_context;\r\n  private _extDebugRendererInfo: WEBGL_debug_renderer_info;\r\n  supportBlendMinMax: boolean;\r\n  support32BitIndex: boolean;\r\n  supportLoseContext: boolean;\r\n  supportDebugRendererInfo: boolean;\r\n  supportSharedUniforms: boolean;\r\n  constructor(gl: WebGLContext) {\r\n    this._isWebGL2 = isWebGL2(gl);\r\n    this._extBlendMinMax = null;\r\n    this._extIndexUint32 = isWebGL2 ? gl.getExtension('OES_element_index_uint') : null;\r\n    this._extLoseContext = gl.getExtension('WEBGL_lose_context');\r\n    this._extDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');\r\n    if (this._isWebGL2) {\r\n      this.supportBlendMinMax = true;\r\n      this.support32BitIndex = true;\r\n    } else {\r\n      this._extBlendMinMax = gl.getExtension('EXT_blend_minmax');\r\n      this.supportBlendMinMax = !!this._extBlendMinMax;\r\n      this.support32BitIndex = !!this._extIndexUint32;\r\n    }\r\n    this.supportLoseContext = !!this._extLoseContext;\r\n    this.supportDebugRendererInfo = !!this._extDebugRendererInfo;\r\n    this.supportSharedUniforms = this._isWebGL2;\r\n  }\r\n}\r\nexport class WebGLShaderCap implements ShaderCaps {\r\n  private _extFragDepth: EXT_frag_depth;\r\n  private _extStandardDerivatives: OES_standard_derivatives;\r\n  private _extShaderTextureLod: EXT_shader_texture_lod;\r\n  supportFragmentDepth: boolean;\r\n  supportStandardDerivatives: boolean;\r\n  supportShaderTextureLod: boolean;\r\n  supportHighPrecisionFloat: boolean;\r\n  supportHighPrecisionInt: boolean;\r\n  maxUniformBufferSize: number;\r\n  uniformBufferOffsetAlignment: number;\r\n  constructor(gl: WebGLContext) {\r\n    this._extFragDepth = null;\r\n    this._extStandardDerivatives = null;\r\n    if (isWebGL2(gl)) {\r\n      this.supportFragmentDepth = true;\r\n      this.supportStandardDerivatives = true;\r\n      this.supportShaderTextureLod = true;\r\n      this.supportHighPrecisionFloat = true;\r\n      this.maxUniformBufferSize = gl.getParameter(gl.MAX_UNIFORM_BLOCK_SIZE) || 16384;\r\n      this.uniformBufferOffsetAlignment = gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT) || 256;\r\n    } else {\r\n      this._extFragDepth = gl.getExtension('EXT_frag_depth');\r\n      this.supportFragmentDepth = !!this._extFragDepth;\r\n      this._extStandardDerivatives = gl.getExtension('OES_standard_derivatives');\r\n      this.supportStandardDerivatives = !!this._extStandardDerivatives;\r\n      this._extShaderTextureLod = gl.getExtension('EXT_shader_texture_lod');\r\n      this.supportShaderTextureLod = !!this._extShaderTextureLod;\r\n      this.supportHighPrecisionFloat = gl.getShaderPrecisionFormat && !!(gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT)?.precision)\r\n        && !!(gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT)?.precision);\r\n      this.maxUniformBufferSize = 0;\r\n      this.uniformBufferOffsetAlignment = 1;\r\n    }\r\n  }\r\n}\r\nexport class WebGLTextureCap implements TextureCaps {\r\n  private _isWebGL2: boolean;\r\n  private _extS3TC: WEBGL_compressed_texture_s3tc;\r\n  private _extS3TCSRGB: WEBGL_compressed_texture_s3tc_srgb;\r\n  private _extTextureFilterAnisotropic: EXT_texture_filter_anisotropic;\r\n  private _extDepthTexture: WEBGL_depth_texture;\r\n  private _extSRGB: EXT_sRGB;\r\n  private _extTextureFloat: OES_texture_float;\r\n  private _extTextureFloatLinear: OES_texture_float_linear;\r\n  private _extTextureHalfFloat: OES_texture_half_float;\r\n  private _extTextureHalfFloatLinear: OES_texture_half_float_linear;\r\n  private _textureFormatInfos: { [format: number]: ITextureFormatInfoWebGL };\r\n  maxTextureSize: number;\r\n  maxCubeTextureSize: number;\r\n  npo2Mipmapping: boolean;\r\n  npo2Repeating: boolean;\r\n  supportS3TC: boolean;\r\n  supportS3TCSRGB: boolean;\r\n  supportDepthTexture: boolean;\r\n  support3DTexture: boolean;\r\n  supportSRGBTexture: boolean;\r\n  supportFloatTexture: boolean;\r\n  supportLinearFloatTexture: boolean;\r\n  supportHalfFloatTexture: boolean;\r\n  supportLinearHalfFloatTexture: boolean;\r\n  supportAnisotropicFiltering: boolean;\r\n  supportFloatColorBuffer: boolean;\r\n  supportHalfFloatColorBuffer: boolean;\r\n  supportFloatBlending: boolean;\r\n  constructor(gl: WebGLContext) {\r\n    this._isWebGL2 = isWebGL2(gl);\r\n    this._extTextureFilterAnisotropic =\r\n      gl.getExtension('EXT_texture_filter_anisotropic') ||\r\n      gl.getExtension('MOZ_EXT_texture_filter_anisotropic') ||\r\n      gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\r\n    this.supportAnisotropicFiltering = !!this._extTextureFilterAnisotropic;\r\n    if (this._isWebGL2) {\r\n      this.supportDepthTexture = true;\r\n    } else {\r\n      this._extDepthTexture = gl.getExtension('WEBGL_depth_texture');\r\n      this.supportDepthTexture = !!this._extDepthTexture;\r\n    }\r\n    this.support3DTexture = this._isWebGL2;\r\n    this._extSRGB = this._isWebGL2 ? null : gl.getExtension('EXT_sRGB');\r\n    this.supportSRGBTexture = this._isWebGL2 || !!this._extSRGB;\r\n    if (this._isWebGL2) {\r\n      this.supportFloatTexture = true;\r\n    } else {\r\n      this._extTextureFloat = gl.getExtension('OES_texture_float');\r\n      this.supportFloatTexture = !!this._extTextureFloat;\r\n    }\r\n    this._extTextureFloatLinear = gl.getExtension('OES_texture_float_linear');\r\n    this.supportLinearFloatTexture = !!this._extTextureFloatLinear;\r\n    if (this._isWebGL2) {\r\n      this.supportHalfFloatTexture = true;\r\n      this.supportLinearHalfFloatTexture = true;\r\n    } else {\r\n      this._extTextureHalfFloat = gl.getExtension('OES_texture_half_float');\r\n      this.supportHalfFloatTexture = !!this._extTextureHalfFloat;\r\n      this._extTextureHalfFloatLinear = gl.getExtension('OES_texture_half_float_linear');\r\n      this.supportLinearHalfFloatTexture = !!this._extTextureHalfFloatLinear;\r\n    }\r\n\r\n    if (this._isWebGL2) {\r\n      if (gl.getExtension('EXT_color_buffer_float')) {\r\n        this.supportHalfFloatColorBuffer = true;\r\n        this.supportFloatColorBuffer = true;\r\n      } else if (gl.getExtension('EXT_color_buffer_half_float')) {\r\n        this.supportHalfFloatColorBuffer = true;\r\n        this.supportFloatColorBuffer = false;\r\n      } else {\r\n        this.supportHalfFloatColorBuffer = false;\r\n        this.supportFloatColorBuffer = false;\r\n      }\r\n    } else {\r\n      this.supportFloatColorBuffer = !!gl.getExtension('WEBGL_color_buffer_float');\r\n      this.supportHalfFloatColorBuffer = !!gl.getExtension('EXT_color_buffer_half_float');\r\n    }\r\n    this.supportFloatBlending = this.supportFloatColorBuffer && !!gl.getExtension('EXT_float_blend');\r\n\r\n    this._extS3TC =\r\n      gl.getExtension('WEBGL_compressed_texture_s3tc') ||\r\n      gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||\r\n      gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\r\n    this.supportS3TC = !!this._extS3TC;\r\n    this._extS3TCSRGB = gl.getExtension('WEBGL_compressed_texture_s3tc_srgb');\r\n    this.supportS3TCSRGB = !!this._extS3TCSRGB;\r\n\r\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n    this.maxCubeTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\r\n    if (this._isWebGL2) {\r\n      this.npo2Mipmapping = true;\r\n      this.npo2Repeating = true;\r\n    } else {\r\n      this.npo2Mipmapping = false;\r\n      this.npo2Repeating = false;\r\n    }\r\n    this._textureFormatInfos = {\r\n      [TextureFormat.RGBA8UNORM]: {\r\n        glFormat: gl.RGBA,\r\n        glInternalFormat: this._isWebGL2 ? (gl as WebGL2RenderingContext).RGBA8 : gl.RGBA,\r\n        glType: [gl.UNSIGNED_BYTE, gl.UNSIGNED_SHORT_4_4_4_4, gl.UNSIGNED_SHORT_5_5_5_1],\r\n        filterable: true,\r\n        renderable: true,\r\n        compressed: false,\r\n      },\r\n    };\r\n    if (this.supportS3TC) {\r\n      this._textureFormatInfos[TextureFormat.DXT1] = {\r\n        glFormat: gl.NONE,\r\n        glInternalFormat: this._extS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT,\r\n        glType: [gl.NONE],\r\n        filterable: true,\r\n        renderable: false,\r\n        compressed: true,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.DXT3] = {\r\n        glFormat: gl.NONE,\r\n        glInternalFormat: this._extS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT,\r\n        glType: [gl.NONE],\r\n        filterable: true,\r\n        renderable: false,\r\n        compressed: true,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.DXT5] = {\r\n        glFormat: gl.NONE,\r\n        glInternalFormat: this._extS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT,\r\n        glType: [gl.NONE],\r\n        filterable: true,\r\n        renderable: false,\r\n        compressed: true,\r\n      };\r\n    }\r\n    if (this.supportS3TCSRGB) {\r\n      this._textureFormatInfos[TextureFormat.DXT1_SRGB] = {\r\n        glFormat: gl.NONE,\r\n        glInternalFormat: this._extS3TCSRGB.COMPRESSED_SRGB_S3TC_DXT1_EXT,\r\n        glType: [gl.NONE],\r\n        filterable: true,\r\n        renderable: false,\r\n        compressed: true,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.DXT3_SRGB] = {\r\n        glFormat: gl.NONE,\r\n        glInternalFormat: this._extS3TCSRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\r\n        glType: [gl.NONE],\r\n        filterable: true,\r\n        renderable: false,\r\n        compressed: true,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.DXT5_SRGB] = {\r\n        glFormat: gl.NONE,\r\n        glInternalFormat: this._extS3TCSRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,\r\n        glType: [gl.NONE],\r\n        filterable: true,\r\n        renderable: false,\r\n        compressed: true,\r\n      };\r\n    }\r\n    if (isWebGL2(gl)) {\r\n      this._textureFormatInfos[TextureFormat.R8UNORM] = {\r\n        glFormat: gl.RED,\r\n        glInternalFormat: gl.R8,\r\n        glType: [gl.UNSIGNED_BYTE],\r\n        filterable: true,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.R8SNORM] = {\r\n        glFormat: gl.RED,\r\n        glInternalFormat: gl.R8_SNORM,\r\n        glType: [gl.BYTE],\r\n        filterable: true,\r\n        renderable: false,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.R16F] = {\r\n        glFormat: gl.RED,\r\n        glInternalFormat: gl.R16F,\r\n        glType: [gl.HALF_FLOAT, gl.FLOAT],\r\n        filterable: this.supportLinearHalfFloatTexture,\r\n        renderable: this.supportHalfFloatColorBuffer,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.R32F] = {\r\n        glFormat: gl.RED,\r\n        glInternalFormat: gl.R32F,\r\n        glType: [gl.FLOAT],\r\n        filterable: this.supportLinearFloatTexture,\r\n        renderable: this.supportFloatColorBuffer,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.R8UI] = {\r\n        glFormat: gl.RED_INTEGER,\r\n        glInternalFormat: gl.R8UI,\r\n        glType: [gl.UNSIGNED_BYTE],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.R8I] = {\r\n        glFormat: gl.RED_INTEGER,\r\n        glInternalFormat: gl.R8I,\r\n        glType: [gl.BYTE],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.R16UI] = {\r\n        glFormat: gl.RED_INTEGER,\r\n        glInternalFormat: gl.R16UI,\r\n        glType: [gl.UNSIGNED_SHORT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.R16I] = {\r\n        glFormat: gl.RED_INTEGER,\r\n        glInternalFormat: gl.R16I,\r\n        glType: [gl.SHORT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.R32UI] = {\r\n        glFormat: gl.RED_INTEGER,\r\n        glInternalFormat: gl.R32UI,\r\n        glType: [gl.UNSIGNED_INT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.R32I] = {\r\n        glFormat: gl.RED_INTEGER,\r\n        glInternalFormat: gl.R32I,\r\n        glType: [gl.INT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RG8UNORM] = {\r\n        glFormat: gl.RG,\r\n        glInternalFormat: gl.RG8,\r\n        glType: [gl.UNSIGNED_BYTE],\r\n        filterable: true,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RG8SNORM] = {\r\n        glFormat: gl.RG,\r\n        glInternalFormat: gl.RG8_SNORM,\r\n        glType: [gl.BYTE],\r\n        filterable: true,\r\n        renderable: false,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RG16F] = {\r\n        glFormat: gl.RG,\r\n        glInternalFormat: gl.RG16F,\r\n        glType: [gl.HALF_FLOAT, gl.FLOAT],\r\n        filterable: this.supportLinearHalfFloatTexture,\r\n        renderable: this.supportHalfFloatColorBuffer,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RG32F] = {\r\n        glFormat: gl.RG,\r\n        glInternalFormat: gl.RG32F,\r\n        glType: [gl.FLOAT],\r\n        filterable: this.supportLinearFloatTexture,\r\n        renderable: this.supportFloatColorBuffer,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RG8UI] = {\r\n        glFormat: gl.RG,\r\n        glInternalFormat: gl.RG8UI,\r\n        glType: [gl.UNSIGNED_BYTE],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RG8I] = {\r\n        glFormat: gl.RG,\r\n        glInternalFormat: gl.RG8I,\r\n        glType: [gl.BYTE],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RG16UI] = {\r\n        glFormat: gl.RG,\r\n        glInternalFormat: gl.RG16UI,\r\n        glType: [gl.UNSIGNED_SHORT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RG16I] = {\r\n        glFormat: gl.RG,\r\n        glInternalFormat: gl.RG16I,\r\n        glType: [gl.SHORT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RG32UI] = {\r\n        glFormat: gl.RG,\r\n        glInternalFormat: gl.RG32UI,\r\n        glType: [gl.UNSIGNED_INT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RG32I] = {\r\n        glFormat: gl.RG,\r\n        glInternalFormat: gl.RG32I,\r\n        glType: [gl.INT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RGBA8UNORM_SRGB] = {\r\n        glFormat: gl.RGBA,\r\n        glInternalFormat: gl.SRGB8_ALPHA8,\r\n        glType: [gl.UNSIGNED_BYTE],\r\n        filterable: true,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RGBA8SNORM] = {\r\n        glFormat: gl.RGBA,\r\n        glInternalFormat: gl.RGBA8_SNORM,\r\n        glType: [gl.BYTE],\r\n        filterable: true,\r\n        renderable: false,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RGBA16F] = {\r\n        glFormat: gl.RGBA,\r\n        glInternalFormat: gl.RGBA16F,\r\n        glType: [gl.HALF_FLOAT, gl.FLOAT],\r\n        filterable: this.supportLinearHalfFloatTexture,\r\n        renderable: this.supportHalfFloatColorBuffer,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RGBA32F] = {\r\n        glFormat: gl.RGBA,\r\n        glInternalFormat: gl.RGBA32F,\r\n        glType: [gl.FLOAT],\r\n        filterable: this.supportLinearFloatTexture,\r\n        renderable: this.supportFloatColorBuffer,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RGBA8UI] = {\r\n        glFormat: gl.RGBA_INTEGER,\r\n        glInternalFormat: gl.RGBA8UI,\r\n        glType: [gl.UNSIGNED_BYTE],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RGBA8I] = {\r\n        glFormat: gl.RGBA_INTEGER,\r\n        glInternalFormat: gl.RGBA8I,\r\n        glType: [gl.BYTE],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RGBA16UI] = {\r\n        glFormat: gl.RGBA_INTEGER,\r\n        glInternalFormat: gl.RGBA16UI,\r\n        glType: [gl.UNSIGNED_SHORT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RGBA16I] = {\r\n        glFormat: gl.RGBA_INTEGER,\r\n        glInternalFormat: gl.RGBA16I,\r\n        glType: [gl.SHORT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RGBA32UI] = {\r\n        glFormat: gl.RGBA_INTEGER,\r\n        glInternalFormat: gl.RGBA32UI,\r\n        glType: [gl.UNSIGNED_INT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.RGBA32I] = {\r\n        glFormat: gl.RGBA_INTEGER,\r\n        glInternalFormat: gl.RGBA32I,\r\n        glType: [gl.INT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.D16] = {\r\n        glFormat: gl.DEPTH_COMPONENT,\r\n        glInternalFormat: gl.DEPTH_COMPONENT16,\r\n        glType: [gl.UNSIGNED_SHORT, gl.UNSIGNED_INT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.D24] = {\r\n        glFormat: gl.DEPTH_COMPONENT,\r\n        glInternalFormat: gl.DEPTH_COMPONENT24,\r\n        glType: [gl.UNSIGNED_INT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.D32F] = {\r\n        glFormat: gl.DEPTH_COMPONENT,\r\n        glInternalFormat: gl.DEPTH_COMPONENT32F,\r\n        glType: [gl.FLOAT],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.D24S8] = {\r\n        glFormat: gl.DEPTH_STENCIL,\r\n        glInternalFormat: gl.DEPTH24_STENCIL8,\r\n        glType: [gl.UNSIGNED_INT_24_8],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n      this._textureFormatInfos[TextureFormat.D32FS8] = {\r\n        glFormat: gl.DEPTH_STENCIL,\r\n        glInternalFormat: gl.DEPTH32F_STENCIL8,\r\n        glType: [gl.FLOAT_32_UNSIGNED_INT_24_8_REV],\r\n        filterable: false,\r\n        renderable: true,\r\n        compressed: false,\r\n      };\r\n    } else {\r\n      if (this.supportFloatTexture) {\r\n        this._textureFormatInfos[TextureFormat.RGBA32F] = {\r\n          glFormat: gl.RGBA,\r\n          glInternalFormat: gl.RGBA,\r\n          glType: [\r\n            gl.FLOAT,\r\n            gl.UNSIGNED_BYTE,\r\n            gl.UNSIGNED_SHORT_4_4_4_4,\r\n            gl.UNSIGNED_SHORT_5_5_5_1,\r\n          ],\r\n          filterable: this.supportLinearFloatTexture,\r\n          renderable: this.supportFloatColorBuffer,\r\n          compressed: false,\r\n        };\r\n      }\r\n      if (this.supportHalfFloatTexture) {\r\n        this._textureFormatInfos[TextureFormat.RGBA16F] = {\r\n          glFormat: gl.RGBA,\r\n          glInternalFormat: gl.RGBA,\r\n          glType: [\r\n            this._extTextureHalfFloat.HALF_FLOAT_OES,\r\n            gl.UNSIGNED_BYTE,\r\n            gl.UNSIGNED_SHORT_4_4_4_4,\r\n            gl.UNSIGNED_SHORT_5_5_5_1,\r\n          ],\r\n          filterable: this.supportLinearHalfFloatTexture,\r\n          renderable: this.supportHalfFloatColorBuffer,\r\n          compressed: false,\r\n        };\r\n      }\r\n      if (this.supportSRGBTexture) {\r\n        this._textureFormatInfos[TextureFormat.RGBA8UNORM_SRGB] = {\r\n          glFormat: this._extSRGB.SRGB_ALPHA_EXT,\r\n          glInternalFormat: this._extSRGB.SRGB_ALPHA_EXT,\r\n          glType: [gl.UNSIGNED_BYTE],\r\n          filterable: true,\r\n          renderable: false,\r\n          compressed: false,\r\n        };\r\n      }\r\n      if (this.supportDepthTexture) {\r\n        this._textureFormatInfos[TextureFormat.D16] = {\r\n          glFormat: gl.DEPTH_COMPONENT,\r\n          glInternalFormat: gl.DEPTH_COMPONENT,\r\n          glType: [gl.UNSIGNED_SHORT],\r\n          filterable: false,\r\n          renderable: true,\r\n          compressed: false,\r\n        };\r\n        this._textureFormatInfos[TextureFormat.D24] = {\r\n          glFormat: gl.DEPTH_COMPONENT,\r\n          glInternalFormat: gl.DEPTH_COMPONENT,\r\n          glType: [gl.UNSIGNED_INT],\r\n          filterable: false,\r\n          renderable: true,\r\n          compressed: false,\r\n        };\r\n        this._textureFormatInfos[TextureFormat.D24S8] = {\r\n          glFormat: gl.DEPTH_STENCIL,\r\n          glInternalFormat: gl.DEPTH_STENCIL,\r\n          glType: [this._extDepthTexture.UNSIGNED_INT_24_8_WEBGL],\r\n          filterable: false,\r\n          renderable: true,\r\n          compressed: false,\r\n        };\r\n      }\r\n    }\r\n  }\r\n  calcMemoryUsage(format: TextureFormat, type: number, numPixels): number {\r\n    switch (format) {\r\n      case TextureFormat.D16:\r\n      case TextureFormat.D24:\r\n      case TextureFormat.D24S8:\r\n      case TextureFormat.D32F:\r\n        switch (type) {\r\n          case WebGLEnum.UNSIGNED_SHORT:\r\n            return numPixels * 2;\r\n          default:\r\n            return numPixels * 4;\r\n        }\r\n      case TextureFormat.D32FS8:\r\n        return numPixels * 8;\r\n      case TextureFormat.DXT1:\r\n      case TextureFormat.DXT1_SRGB:\r\n        return numPixels / 2;\r\n      case TextureFormat.DXT3:\r\n      case TextureFormat.DXT3_SRGB:\r\n      case TextureFormat.DXT5:\r\n      case TextureFormat.DXT5_SRGB:\r\n        return numPixels;\r\n      case TextureFormat.R16F:\r\n        switch (type) {\r\n          case WebGLEnum.HALF_FLOAT:\r\n            return numPixels * 2;\r\n          default:\r\n            return numPixels * 4;\r\n        }\r\n      case TextureFormat.R16I:\r\n      case TextureFormat.R16UI:\r\n        return numPixels * 2;\r\n      case TextureFormat.R32F:\r\n      case TextureFormat.R32I:\r\n      case TextureFormat.R32UI:\r\n        return numPixels * 4;\r\n      case TextureFormat.R8UNORM:\r\n      case TextureFormat.R8SNORM:\r\n      case TextureFormat.R8I:\r\n      case TextureFormat.R8UI:\r\n        return numPixels;\r\n      case TextureFormat.RG16F:\r\n        switch (type) {\r\n          case WebGLEnum.HALF_FLOAT:\r\n            return numPixels * 4;\r\n          default:\r\n            return numPixels * 8;\r\n        }\r\n      case TextureFormat.RG16I:\r\n      case TextureFormat.RG16UI:\r\n        return numPixels * 4;\r\n      case TextureFormat.RG32F:\r\n      case TextureFormat.RG32I:\r\n      case TextureFormat.RG32UI:\r\n        return numPixels * 8;\r\n      case TextureFormat.RG8UNORM:\r\n      case TextureFormat.RG8SNORM:\r\n      case TextureFormat.RG8I:\r\n      case TextureFormat.RG8UI:\r\n        return numPixels * 2;\r\n      case TextureFormat.RGBA16F:\r\n        switch (type) {\r\n          case WebGLEnum.HALF_FLOAT:\r\n            return numPixels * 8;\r\n          default:\r\n            return numPixels * 16;\r\n        }\r\n      case TextureFormat.RGBA16I:\r\n      case TextureFormat.RGBA16UI:\r\n        return numPixels * 8;\r\n      case TextureFormat.RGBA32F:\r\n      case TextureFormat.RGBA32I:\r\n      case TextureFormat.RGBA32UI:\r\n        return numPixels * 16;\r\n      case TextureFormat.RGBA8UNORM:\r\n      case TextureFormat.RGBA8UNORM_SRGB:\r\n      case TextureFormat.RGBA8SNORM:\r\n      case TextureFormat.RGBA8I:\r\n      case TextureFormat.RGBA8UI:\r\n        return numPixels * 4;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n  getTextureFormatInfo(format: TextureFormat): ITextureFormatInfoWebGL {\r\n    return this._textureFormatInfos[format];\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}