{"version":3,"file":"texture2d_webgl.js","sources":["../../../../../libs/device/src/device/webgl/texture2d_webgl.ts"],"sourcesContent":["import { TextureTarget, TextureFormat, linearTextureFormatToSRGB } from '../base_types';\nimport { textureTargetMap } from './constants_webgl';\nimport { WebGLBaseTexture } from './basetexture_webgl';\nimport { GPUResourceUsageFlags, TextureImageElement, TextureMipmapData, Texture2D, GPUDataBuffer } from '../gpuobject';\nimport type { WebGLDevice } from './device_webgl';\nimport type { WebGLTextureCap } from './capabilities_webgl';\nimport type { TypedArray } from '../../misc';\n\nexport class WebGLTexture2D extends WebGLBaseTexture implements Texture2D<WebGLTexture> {\n  constructor(device: WebGLDevice) {\n    super(device, TextureTarget.Texture2D);\n  }\n  isTexture2D(): this is Texture2D {\n    return true;\n  }\n  init(): void {\n    this.loadEmpty(this._format, this._width, this._height, this._mipLevelCount);\n  }\n  update(\n    data: TypedArray,\n    xOffset: number,\n    yOffset: number,\n    width: number,\n    height: number,\n  ): void {\n    if (this._device.isContextLost()) {\n      return;\n    }\n    if (!this._object) {\n      this.allocInternal(this._format, this._width, this._height, 1, this._mipLevelCount);\n    }\n    const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(this._format);\n    this._device.context.bindTexture(textureTargetMap[this._target], this._object);\n    this._device.context.pixelStorei(this._device.context.UNPACK_ALIGNMENT, 1);\n    this._device.context.texSubImage2D(\n      textureTargetMap[this._target],\n      0,\n      xOffset,\n      yOffset,\n      width,\n      height,\n      params.glFormat,\n      params.glType[0],\n      data,\n    );\n    if (this._mipLevelCount > 1) {\n      this.generateMipmaps();\n    }\n  }\n  updateFromElement(\n    data: TextureImageElement,\n    xOffset: number,\n    yOffset: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  ): void {\n    if (this._device.isContextLost()) {\n      return;\n    }\n    if (!this._object) {\n      this.allocInternal(this._format, this._width, this._height, 1, this._mipLevelCount);\n    }\n    const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(this._format);\n    this._device.context.bindTexture(textureTargetMap[this._target], this._object);\n    this._device.context.pixelStorei(this._device.context.UNPACK_ALIGNMENT, 1);\n    if (x === 0 && y === 0 && width === data.width && height === data.height) {\n      this._device.context.texSubImage2D(\n        textureTargetMap[this._target],\n        0,\n        xOffset,\n        yOffset,\n        params.glFormat,\n        params.glType[0],\n        data,\n      );\n    } else {\n      const cvs = document.createElement('canvas');\n      cvs.width = width;\n      cvs.height = height;\n      const ctx = cvs.getContext('2d');\n      ctx.drawImage(data, x, y, width, height, 0, 0, width, height);\n      this._device.context.texSubImage2D(\n        textureTargetMap[this._target],\n        0,\n        xOffset,\n        yOffset,\n        params.glFormat,\n        params.glType[0],\n        cvs,\n      );\n      cvs.width = 0;\n      cvs.height = 0;\n    }\n    if (this._mipLevelCount > 1) {\n      this.generateMipmaps();\n    }\n  }\n  async readPixels(x: number, y: number, w: number, h: number, buffer: TypedArray): Promise<void> {\n    if (!this.device.isContextLost() && !this.disposed) {\n      const fb = this._device.createFrameBuffer({\n        colorAttachments: [{ texture: this }]\n      });\n      const savedViewport = this._device.getViewport() as [number, number, number, number];\n      const savedScissor = this._device.getScissor() as [number, number, number, number];\n      const savedFB = this._device.getFramebuffer();\n      this._device.setFramebuffer(fb);\n      await this._device.readPixels(x, y, w, h, buffer)\n      fb.dispose();\n      this._device.setFramebuffer(savedFB);\n      this._device.setViewport(...savedViewport);\n      this._device.setScissor(...savedScissor);\n    }\n  }\n  readPixelsToBuffer(x: number, y: number, w: number, h: number, buffer: GPUDataBuffer): void {\n    if (!this.device.isContextLost() && !this.disposed) {\n      const fb = this._device.createFrameBuffer({\n        colorAttachments: [{ texture: this }]\n      });\n      const savedViewport = this._device.getViewport() as [number, number, number, number];\n      const savedScissor = this._device.getScissor() as [number, number, number, number];\n      const savedFB = this._device.getFramebuffer();\n      this._device.setFramebuffer(fb);\n      this._device.readPixelsToBuffer(x, y, w, h, buffer);\n      this._device.setFramebuffer(savedFB);\n      this._device.setViewport(...savedViewport);\n      this._device.setScissor(...savedScissor);\n      fb.dispose();\n    }\n  }\n  loadFromElement(element: TextureImageElement, creationFlags?: number) {\n    this._flags = Number(creationFlags) || 0;\n    if (this._flags & GPUResourceUsageFlags.TF_WRITABLE) {\n      console.error(new Error('webgl device does not support storage texture'));\n    } else {\n      const format = (this._flags & GPUResourceUsageFlags.TF_LINEAR_COLOR_SPACE) ? TextureFormat.RGBA8UNORM : TextureFormat.RGBA8UNORM_SRGB;\n      this.loadImage(element, format);\n    }\n  }\n  createEmpty(format: TextureFormat, width: number, height: number, creationFlags?: number): void {\n    this._flags = Number(creationFlags) || 0;\n    if (this._flags & GPUResourceUsageFlags.TF_WRITABLE) {\n      console.error(new Error('webgl device does not support storage texture'));\n    } else {\n      format = (this._flags & GPUResourceUsageFlags.TF_LINEAR_COLOR_SPACE) ? format : linearTextureFormatToSRGB(format);\n      this.loadEmpty(format, width, height, 0);\n    }\n  }\n  generateMipmaps() {\n    if (this._object && this._mipLevelCount > 1) {\n      const target = textureTargetMap[this._target];\n      this._device.context.bindTexture(target, this._object);\n      this._device.context.generateMipmap(target);\n    }\n  }\n  createWithMipmapData(data: TextureMipmapData, creationFlags?: number): void {\n    if (data.isCubemap || data.isVolume) {\n      console.error('loading 2d texture with mipmap data failed: data is not 2d texture');\n    } else {\n      this._flags = Number(creationFlags) || 0;\n      if (this._flags & GPUResourceUsageFlags.TF_WRITABLE) {\n        console.error(new Error('webgl device does not support storage texture'));\n      } else {\n        this.loadLevels(data);\n      }\n    }\n  }\n  /** @internal */\n  private guessTextureFormat(url: string, mimeType?: string) {\n    if (mimeType === 'image/jpeg' || mimeType === 'image/png') {\n      return this.linearColorSpace ? TextureFormat.RGBA8UNORM : TextureFormat.RGBA8UNORM_SRGB;\n    }\n    const dataURIRegex = /^data:(.*?)(;base64)?,(.*)$/;\n    const matchResult = url.match(dataURIRegex);\n    if (matchResult) {\n      const type = matchResult[1];\n      if (type.indexOf('image/jpeg') >= 0 || type.indexOf('image/png') >= 0) {\n        return this.linearColorSpace ? TextureFormat.RGBA8UNORM : TextureFormat.RGBA8UNORM_SRGB;\n      }\n    } else {\n      const pindex = url.indexOf('?');\n      if (pindex >= 0) {\n        url = url.substring(0, pindex);\n      }\n      const eindex = url.lastIndexOf('.');\n      if (eindex >= 0) {\n        const ext = url.substring(eindex + 1).toLowerCase();\n        if (ext === 'jpg' || ext === 'jpeg' || ext === 'png') {\n          return this.linearColorSpace ? TextureFormat.RGBA8UNORM : TextureFormat.RGBA8UNORM_SRGB;\n        }\n      }\n    }\n    return TextureFormat.Unknown;\n  }\n  /** @internal */\n  private loadEmpty(format: TextureFormat, width: number, height: number, numMipLevels: number): void {\n    this.allocInternal(format, width, height, 1, numMipLevels);\n    if (this._mipLevelCount > 1 && !this._device.isContextLost()) {\n      this.generateMipmaps();\n    }\n  }\n  /** @internal */\n  private loadLevels(levels: TextureMipmapData): void {\n    const sRGB = !(this._flags & GPUResourceUsageFlags.TF_LINEAR_COLOR_SPACE);\n    let format = sRGB ? linearTextureFormatToSRGB(levels.format) : levels.format;\n    let swizzle = false;\n    if (format === TextureFormat.BGRA8UNORM) {\n      format = TextureFormat.RGBA8UNORM;\n      swizzle = true;\n    } else if (this._format === TextureFormat.BGRA8UNORM_SRGB) {\n      format = TextureFormat.RGBA8UNORM_SRGB;\n      swizzle = true;\n    }\n    const width = levels.width;\n    const height = levels.height;\n    const mipLevelCount = levels.mipLevels;\n    if (levels.isCompressed) {\n      if (sRGB ? !this._device.getTextureCaps().supportS3TCSRGB : !this._device.getTextureCaps().supportS3TC) {\n        console.warn('No s3tc compression format support');\n        return;\n      }\n    }\n    this.allocInternal(format, width, height, 1, mipLevelCount);\n    if (!this._device.isContextLost()) {\n      const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(this._format);\n      const target = textureTargetMap[this._target];\n      this._device.context.bindTexture(target, this._object);\n      (this.device as WebGLDevice).clearErrors();\n      for (let i = 0; i < this._mipLevelCount; i++) {\n        if (levels.isCompressed) {\n          this._device.context.compressedTexSubImage2D(\n            target,\n            i,\n            0,\n            0,\n            levels.mipDatas[0][i].width,\n            levels.mipDatas[0][i].height,\n            params.glInternalFormat,\n            levels.mipDatas[0][i].data,\n          );\n        } else {\n          if (swizzle) {\n            // convert bgra to rgba\n            for (let j = 0; j < levels.mipDatas[0][i].width * levels.mipDatas[0][i].height; j++) {\n              const t = levels.mipDatas[0][i].data[j * 4];\n              levels.mipDatas[0][i].data[j * 4] = levels.mipDatas[0][i].data[j * 4 + 2];\n              levels.mipDatas[0][i].data[j * 4 + 2] = t;\n            }\n          }\n          this._device.context.texSubImage2D(\n            target,\n            i,\n            0,\n            0,\n            levels.mipDatas[0][i].width,\n            levels.mipDatas[0][i].height,\n            params.glFormat,\n            params.glType[0],\n            levels.mipDatas[0][i].data,\n          );\n        }\n        const err = (this.device as WebGLDevice).getError();\n        if (err) {\n          console.error(err);\n          return;\n        }\n      }\n    }\n  }\n  /** @internal */\n  private loadImage(element: TextureImageElement, format: TextureFormat): void {\n    this.allocInternal(format, Number(element.width), Number(element.height), 1, 0);\n    if (!this._device.isContextLost()) {\n      const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(this._format);\n      (this.device as WebGLDevice).clearErrors();\n      const target = textureTargetMap[this._target];\n      this._device.context.bindTexture(target, this._object);\n      this._device.context.pixelStorei(this._device.context.UNPACK_ALIGNMENT, 4);\n      this._device.context.texSubImage2D(\n        target,\n        0,\n        0,\n        0,\n        params.glFormat,\n        params.glType[0],\n        element,\n      );\n      const err = (this.device as WebGLDevice).getError();\n      if (err) {\n        console.error(err);\n        false;\n      }\n      if (this._mipLevelCount > 1) {\n        this.generateMipmaps();\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}