{"version":3,"file":"basetexture_webgl.js","sources":["../../../../../libs/device/src/device/webgl/basetexture_webgl.ts"],"sourcesContent":["import { isPowerOf2 } from '@sophon/base';\r\nimport { WebGLGPUObject } from './gpuobject_webgl';\r\nimport { TextureCaps } from '../device';\r\nimport { TextureTarget, TextureFilter, TextureWrapping, TextureFormat, CompareFunc, isCompressedTextureFormat, isDepthTextureFormat, isFloatTextureFormat, isIntegerTextureFormat, isSignedTextureFormat } from '../base_types';\r\nimport { GPUResourceUsageFlags, SamplerOptions, BaseTexture } from '../gpuobject';\r\nimport { cubeMapFaceMap, textureTargetMap } from './constants_webgl';\r\nimport { isWebGL2 } from './utils';\r\nimport { WebGLEnum } from './webgl_enum';\r\nimport type { WebGLTextureCap, ITextureFormatInfoWebGL } from './capabilities_webgl';\r\nimport type { TextureSampler } from '../gpuobject';\r\nimport type { WebGLTextureSampler } from './sampler_webgl';\r\nimport type { WebGLDevice } from './device_webgl';\r\n\r\nexport abstract class WebGLBaseTexture extends WebGLGPUObject<WebGLTexture> {\r\n  protected _target: TextureTarget;\r\n  protected _memCost: number;\r\n  protected _flags: number;\r\n  protected _width: number;\r\n  protected _height: number;\r\n  protected _depth: number;\r\n  protected _format: TextureFormat;\r\n  protected _mipLevelCount: number;\r\n  protected _sampler: WebGLTextureSampler;\r\n  constructor(device: WebGLDevice, target?: TextureTarget) {\r\n    super(device);\r\n    this._target = target || TextureTarget.Texture2D;\r\n    this._memCost = 0;\r\n    this._flags = 0;\r\n    this._width = 0;\r\n    this._height = 0;\r\n    this._depth = 1;\r\n    this._format = TextureFormat.Unknown;\r\n    this._mipLevelCount = 0;\r\n    this._sampler = null;\r\n  }\r\n  get target() {\r\n    return this._target;\r\n  }\r\n  get linearColorSpace() {\r\n    return !!(this._flags & GPUResourceUsageFlags.TF_LINEAR_COLOR_SPACE);\r\n  }\r\n  get width() {\r\n    return this._width;\r\n  }\r\n  get height() {\r\n    return this._height;\r\n  }\r\n  get depth() {\r\n    return this._depth;\r\n  }\r\n  get format() {\r\n    return this._format;\r\n  }\r\n  get mipLevelCount(): number {\r\n    return this._mipLevelCount;\r\n  }\r\n  get sampler(): TextureSampler {\r\n    return this._sampler;\r\n  }\r\n  set sampler(s: TextureSampler) {\r\n    if (s !== this._sampler) {\r\n      this._sampler = s as WebGLTextureSampler;\r\n      if (this._sampler && !this._device.isWebGL2) {\r\n        this._sampler.apply(this);\r\n      }\r\n    }\r\n  }\r\n  /** @internal */\r\n  get currentSampler(): WebGLTextureSampler {\r\n    return this._sampler;\r\n  }\r\n  isFilterable(): boolean {\r\n    if (!this.getTextureCaps().getTextureFormatInfo(this._format)?.filterable) {\r\n      return false;\r\n    }\r\n    if (!(this.device as WebGLDevice).isWebGL2 && !isPowerOf2(this._width) && !isPowerOf2(this._height)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  destroy(): void {\r\n    if (this._object) {\r\n      this._device.context.deleteTexture(this._object);\r\n      this._object = null;\r\n      this._device.updateVideoMemoryCost(-this._memCost);\r\n      this._memCost = 0;\r\n    }\r\n  }\r\n  async restore() {\r\n    if (!this._object && !this._device.isContextLost()) {\r\n      this.init();\r\n      this.sampler = null;\r\n    }\r\n  }\r\n  isTexture(): this is BaseTexture {\r\n    return true;\r\n  }\r\n  getTextureCaps(): TextureCaps {\r\n    return this._device.getTextureCaps();\r\n  }\r\n  isFloatFormat(): boolean {\r\n    return isFloatTextureFormat(this._format);\r\n  }\r\n  isIntegerFormat(): boolean {\r\n    return isIntegerTextureFormat(this._format);\r\n  }\r\n  isSignedFormat(): boolean {\r\n    return isSignedTextureFormat(this._format);\r\n  }\r\n  isCompressedFormat(): boolean {\r\n    return isCompressedTextureFormat(this._format);\r\n  }\r\n  isDepth(): boolean {\r\n    return isDepthTextureFormat(this._format);\r\n  }\r\n  getDefaultSampler(shadow: boolean): TextureSampler {\r\n    const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(this._format);\r\n    return this._device.createSampler(this._getSamplerOptions(params, shadow));\r\n  }\r\n  abstract generateMipmaps(): void;\r\n  abstract init(): void;\r\n  /** @internal */\r\n  protected allocInternal(format: TextureFormat, width: number, height: number, depth: number, numMipLevels: number) {\r\n    if (numMipLevels === 0) {\r\n      numMipLevels = this._calcMipLevelCount(format, width, height, depth);\r\n    } else if (numMipLevels !== 1) {\r\n      const autoMipLevelCount = this._calcMipLevelCount(format, width, height, depth);\r\n      if (!Number.isInteger(numMipLevels) || numMipLevels < 0 || numMipLevels > autoMipLevelCount) {\r\n        numMipLevels = autoMipLevelCount;\r\n      }\r\n    }\r\n    if (this._object && (this._format !== format || this._width !== width || this._height !== height || this._depth !== depth, this._mipLevelCount !== numMipLevels)) {\r\n      const obj = this._object;\r\n      this._device.runNextFrame(() => {\r\n        this._device.context.deleteTexture(obj);\r\n      });\r\n      this._object = null;\r\n    }\r\n    if (!this._object) {\r\n      this._format = format;\r\n      this._width = width;\r\n      this._height = height;\r\n      this._depth = depth;\r\n      this._mipLevelCount = numMipLevels;\r\n      if (!this._device.isContextLost()) {\r\n        this._object = this._device.context.createTexture();\r\n        const gl = this._device.context;\r\n        gl.bindTexture(textureTargetMap[this._target], this._object);\r\n        const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(this._format);\r\n        if (isWebGL2(gl) && !this.isTextureVideo()) {\r\n          if (!this.isTexture3D() && !this.isTexture2DArray()) {\r\n            gl.texStorage2D(textureTargetMap[this._target], this._mipLevelCount, params.glInternalFormat, this._width, this._height);\r\n          } else {\r\n            gl.texStorage3D(textureTargetMap[this._target], this._mipLevelCount, params.glInternalFormat, this._width, this._height, this._depth);\r\n          }\r\n          this._device.context.texParameteri(textureTargetMap[this._target], WebGLEnum.TEXTURE_BASE_LEVEL, 0);\r\n          this._device.context.texParameteri(textureTargetMap[this._target], WebGLEnum.TEXTURE_MAX_LEVEL, this._mipLevelCount - 1);\r\n        } else {\r\n          let w = this._width;\r\n          let h = this._height;\r\n          for (let mip = 0; mip < numMipLevels; mip++) {\r\n            if (this.isTextureCube()) {\r\n              for (let face = 0; face < 6; face++) {\r\n                const faceTarget = cubeMapFaceMap[face];\r\n                this._device.context.texImage2D(faceTarget, mip, params.glInternalFormat, w, h, 0, params.glFormat, params.glType[0], null);\r\n              }\r\n            } else {\r\n              this._device.context.texImage2D(textureTargetMap[this._target], mip, params.glInternalFormat, w, h, 0, params.glFormat, params.glType[0], null);\r\n            }\r\n            w = Math.max(w >> 1, 1);\r\n            h = Math.max(h >> 1, 1);\r\n          }\r\n        }\r\n        const k = this.isTextureCube() ? 6 : 1;\r\n        const memCost = (this.getTextureCaps() as WebGLTextureCap).calcMemoryUsage(this._format, params.glType[0], this._width * this._height * this._depth * k);\r\n        this._device.updateVideoMemoryCost(memCost - this._memCost);\r\n        this._memCost = memCost;\r\n      }\r\n    }\r\n  }\r\n  /** @internal */\r\n  protected _calcMipLevelCount(format: TextureFormat, width: number, height: number, depth: number): number {\r\n    if (isDepthTextureFormat(format) || this.isTexture3D() || this.isTextureVideo()) {\r\n      return 1;\r\n    }\r\n    if (this._flags & GPUResourceUsageFlags.TF_NO_MIPMAP) {\r\n      return 1;\r\n    }\r\n    if (!this._device.isWebGL2 && (!isPowerOf2(width) || !isPowerOf2(height))) {\r\n      return 1;\r\n    }\r\n    const params = (this.getTextureCaps() as WebGLTextureCap).getTextureFormatInfo(format);\r\n    if (!params || !params.renderable) {\r\n      return 1;\r\n    }\r\n    return Math.floor(Math.log2(Math.max(width, height))) + 1;\r\n  }\r\n  /** @internal */\r\n  protected _getSamplerOptions(params: ITextureFormatInfoWebGL, shadow: boolean): SamplerOptions {\r\n    const comparison = this.isDepth() && shadow;\r\n    const filterable = params.filterable || comparison;\r\n    const magFilter = filterable\r\n      ? TextureFilter.Linear\r\n      : TextureFilter.Nearest;\r\n    const minFilter = filterable\r\n      ? TextureFilter.Linear\r\n      : TextureFilter.Nearest;\r\n    const mipFilter = this._mipLevelCount > 1\r\n      ? filterable ? TextureFilter.Linear : TextureFilter.Nearest\r\n      : TextureFilter.None;\r\n    const addressU = TextureWrapping.ClampToEdge\r\n    const addressV = TextureWrapping.ClampToEdge\r\n    const addressW = TextureWrapping.ClampToEdge\r\n    const compare = comparison ? CompareFunc.LessEqual : null;\r\n    return {\r\n      addressU,\r\n      addressV,\r\n      addressW,\r\n      magFilter,\r\n      minFilter,\r\n      mipFilter,\r\n      compare,\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}