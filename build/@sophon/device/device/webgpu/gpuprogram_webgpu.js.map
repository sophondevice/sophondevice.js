{"version":3,"file":"gpuprogram_webgpu.js","sources":["../../../../../libs/device/src/device/webgpu/gpuprogram_webgpu.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { WebGPUObject } from './gpuobject_webgpu';\nimport { ShaderType } from '../base_types';\nimport type { GPUProgram, BindGroupLayout, BindPointInfo } from '../gpuobject';\nimport type { GPUProgramConstructParams, RenderProgramConstructParams, ComputeProgramConstructParams } from '../device';\nimport type { WebGPUDevice } from './device';\n\nexport class WebGPUProgram extends WebGPUObject<unknown> implements GPUProgram {\n  private static _hashCounter = 0;\n  private _type: 'render' | 'compute';\n  private _vs: string;\n  private _fs: string;\n  private _cs: string;\n  private _label: string;\n  private _hash: string;\n  private _error: string;\n  private _bindGroupLayouts: BindGroupLayout[];\n  private _vertexAttributes: string;\n  private _csModule: GPUShaderModule;\n  private _vsModule: GPUShaderModule;\n  private _fsModule: GPUShaderModule;\n  private _pipelineLayout: GPUPipelineLayout;\n  constructor(device: WebGPUDevice, params: GPUProgramConstructParams) {\n    super(device);\n    this._type = params.type;\n    this._label = params.label;\n    this._bindGroupLayouts = [...params.params.bindGroupLayouts];\n    this._error = '';\n    if (params.type === 'render') {\n      const renderParams = params.params as RenderProgramConstructParams;\n      this._vs = renderParams.vs;\n      this._fs = renderParams.fs;\n      this._vertexAttributes = renderParams.vertexAttributes ? renderParams.vertexAttributes.join(':') : '';\n    } else {\n      const computeParams = params.params as ComputeProgramConstructParams;\n      this._cs = computeParams.source;\n    }\n    this._load();\n    this._hash = String(++WebGPUProgram._hashCounter);\n  }\n  get type(): 'render' | 'compute' {\n    return this._type;\n  }\n  get label(): string {\n    return this._label;\n  }\n  getCompileError(): string {\n    return this._error;\n  }\n  getShaderSource(shaderType: ShaderType): string {\n    switch (shaderType) {\n      case ShaderType.Vertex: return this._vs;\n      case ShaderType.Fragment: return this._fs;\n      case ShaderType.Compute: return this._cs;\n    }\n  }\n  getBindingInfo(name: string): BindPointInfo {\n    for (let group = 0; group < this._bindGroupLayouts.length; group++) {\n      const layout = this._bindGroupLayouts[group];\n      for (let binding = 0; binding < layout.entries.length; binding++) {\n        const bindingPoint = layout.entries[binding];\n        if (bindingPoint.name === name) {\n          return {\n            group: group,\n            binding: binding,\n            type: bindingPoint.type\n          };\n        }\n      }\n    }\n    return null;\n  }\n  get bindGroupLayouts(): BindGroupLayout[] {\n    return this._bindGroupLayouts;\n  }\n  get vertexAttributes(): string {\n    return this._vertexAttributes;\n  }\n  get hash(): string {\n    return this._hash;\n  }\n  getPipelineLayout(): GPUPipelineLayout {\n    return this._pipelineLayout;\n  }\n  getShaderModule(): { vsModule: GPUShaderModule, fsModule: GPUShaderModule, csModule: GPUShaderModule, pipelineLayout: GPUPipelineLayout } {\n    return {\n      vsModule: this._vsModule,\n      fsModule: this._fsModule,\n      csModule: this._csModule,\n      pipelineLayout: this._pipelineLayout\n    };\n  }\n  get fsModule(): GPUShaderModule {\n    return this._fsModule;\n  }\n  destroy() {\n    this._vsModule = null;\n    this._fsModule = null;\n    this._pipelineLayout = null;\n    this._object = null;\n  }\n  async restore() {\n    if (!this._object) {\n      this._load();\n    }\n  }\n  isProgram(): boolean {\n    return true;\n  }\n  private _load() {\n    if (this._type === 'render') {\n      this._vsModule = this.createShaderModule(this._vs);\n      this._fsModule = this.createShaderModule(this._fs);\n    } else {\n      this._csModule = this.createShaderModule(this._cs);\n    }\n    this._pipelineLayout = this.createPipelineLayout(this._bindGroupLayouts);\n    this._object = {};\n  }\n  private createPipelineLayout(bindGroupLayouts: BindGroupLayout[]): GPUPipelineLayout {\n    const layouts: GPUBindGroupLayout[] = [];\n    bindGroupLayouts.forEach(val => {\n      layouts.push(this._device.fetchBindGroupLayout(val));\n    });\n    return this._device.device.createPipelineLayout({\n      bindGroupLayouts: layouts\n    });\n  }\n  private createShaderModule(code: string): GPUShaderModule {\n    const t0 = Date.now();\n    let sm = this._device.device.createShaderModule({ code });\n    if (sm && sm.compilationInfo) {\n      sm.compilationInfo().then(compilationInfo => {\n        const elapsed = Date.now() - t0;\n        if (elapsed > 1000) {\n          console.log(`compile shader took ${elapsed}ms: \\n${code}`);\n        }\n        let err = false;\n        if (compilationInfo?.messages?.length > 0) {\n          let msg = '';\n          for (const message of compilationInfo.messages) {\n            if (message.type === 'error') {\n              err = true;\n            }\n            msg += `${message.type}: ${message.message} (${message.lineNum}/${message.linePos})\\n`;\n          }\n          if (msg) {\n            this._error += msg;\n            console.log(msg);\n          }\n        }\n        if (err) {\n          sm = null;\n        }\n      });\n    }\n    return sm;\n  }\n  use(): void {\n    this._device.setProgram(this);\n  }\n}\n\n"],"names":[],"mappings":"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"}