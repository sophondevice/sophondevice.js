{"version":3,"file":"commandqueue.js","sources":["../../../../../libs/device/src/device/webgpu/commandqueue.ts"],"sourcesContent":["import { Vector4 } from '@sophon/base';\nimport { PrimitiveType } from '../base_types';\nimport { WebGPURenderPass } from './renderpass_webgpu';\nimport { WebGPUComputePass } from './computepass_webgpu';\nimport type { WebGPUDevice } from './device';\nimport type { WebGPUProgram } from './gpuprogram_webgpu';\nimport type { WebGPUVertexInputLayout } from './vertexinputlayout_webgpu';\nimport type { WebGPURenderStateSet } from './renderstates_webgpu';\nimport type { WebGPUBindGroup } from './bindgroup_webgpu';\nimport type { WebGPUFrameBuffer } from './framebuffer_webgpu';\nimport type { FrameBufferInfo } from './pipeline_cache';\nimport type { WebGPUBuffer } from './buffer_webgpu';\nimport type { WebGPUBaseTexture } from './basetexture_webgpu';\n\nexport class CommandQueueImmediate {\n  protected _renderPass: WebGPURenderPass;\n  protected _computePass: WebGPUComputePass;\n  constructor(device: WebGPUDevice) {\n    this._renderPass = new WebGPURenderPass(device);\n    this._computePass = new WebGPUComputePass(device);\n  }\n  get currentPass(): WebGPURenderPass|WebGPUComputePass {\n    return this._renderPass.active ? this._renderPass : this._computePass.active ? this._computePass : null;\n  }\n  beginFrame(): void {\n  }\n  endFrame(): void {\n    this._renderPass.end();\n    this._computePass.end();\n  }\n  flush() {\n    this._renderPass.end();\n    this._computePass.end();\n  }\n  setFramebuffer(fb: WebGPUFrameBuffer): void {\n    this._renderPass.setFramebuffer(fb);\n  }\n  getFramebuffer(): WebGPUFrameBuffer {\n    return this._renderPass.getFramebuffer();\n  }\n  getFramebufferInfo(): FrameBufferInfo {\n    return this._renderPass.getFrameBufferInfo();\n  }\n  compute(program: WebGPUProgram, bindGroups: WebGPUBindGroup[], bindGroupOffsets: Iterable<number>[], workgroupCountX: number, workgroupCountY: number, workgroupCountZ: number) {\n    this._renderPass.end();\n    this._computePass.compute(program, bindGroups, bindGroupOffsets, workgroupCountX, workgroupCountY, workgroupCountZ);\n  }\n  draw(program: WebGPUProgram, vertexData: WebGPUVertexInputLayout, stateSet: WebGPURenderStateSet, bindGroups: WebGPUBindGroup[], bindGroupOffsets: Iterable<number>[], primitiveType: PrimitiveType, first: number, count: number, numInstances: number): void {\n    this._computePass.end();\n    this._renderPass.draw(program, vertexData, stateSet, bindGroups, bindGroupOffsets, primitiveType, first, count, numInstances);\n  }\n  setViewport();\n  setViewport(x: number, y: number, w: number, h: number): void;\n  setViewport(x?: number, y?: number, w?: number, h?: number): void {\n    this._renderPass.setViewport(x, y, w, h);\n  }\n  getViewport(): number[] {\n    return this._renderPass.getViewport();\n  }\n  setScissor();\n  setScissor(x: number, y: number, w: number, h: number): void;\n  setScissor(x?: number, y?: number, w?: number, h?: number): void {\n    this._renderPass.setScissor(x, y, w, h);\n  }\n  getScissor(): number[] {\n    return this._renderPass.getScissor();\n  }\n  clear(color: Vector4, depth: number, stencil: number): void {\n    this._renderPass.clear(color, depth, stencil);\n  }\n  isBufferUploading(buffer: WebGPUBuffer): boolean {\n    return this._renderPass.isBufferUploading(buffer) || this._computePass.isBufferUploading(buffer);\n  }\n  isTextureUploading(tex: WebGPUBaseTexture): boolean {\n    return this._renderPass.isTextureUploading(tex) || this._computePass.isTextureUploading(tex);\n  }\n}\n"],"names":[],"mappings":"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"}