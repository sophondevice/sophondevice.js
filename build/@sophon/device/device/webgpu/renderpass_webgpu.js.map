{"version":3,"file":"renderpass_webgpu.js","sources":["../../../../../libs/device/src/device/webgpu/renderpass_webgpu.ts"],"sourcesContent":["import { Vector4 } from \"@sophon/base\";\nimport { hasStencilChannel, PrimitiveType } from \"../base_types\";\nimport { WebGPUProgram } from \"./gpuprogram_webgpu\";\nimport { WebGPURenderStateSet } from \"./renderstates_webgpu\";\nimport { WebGPUBindGroup } from \"./bindgroup_webgpu\";\nimport { typeU16 } from \"../builder\";\nimport { WebGPUMipmapGenerator, WebGPUClearQuad } from \"./utils_webgpu\";\nimport type { WebGPUBaseTexture } from \"./basetexture_webgpu\";\nimport type { WebGPUBuffer } from \"./buffer_webgpu\";\nimport type { WebGPUDevice } from \"./device\";\nimport type { WebGPUFrameBuffer } from \"./framebuffer_webgpu\";\nimport type { WebGPUVertexInputLayout } from \"./vertexinputlayout_webgpu\";\nimport type { WebGPUIndexBuffer } from \"./indexbuffer_webgpu\";\nimport type { FrameBufferInfo } from \"./pipeline_cache\";\n\nconst VALIDATION_NEED_NEW_PASS = 1 << 0;\nconst VALIDATION_NEED_GENERATE_MIPMAP = 1 << 1;\nconst VALIDATION_FAILED = 1 << 2;\n\nexport class WebGPURenderPass {\n  private _device: WebGPUDevice;\n  private _frameBuffer: WebGPUFrameBuffer;\n  private _bufferUploads: Set<WebGPUBuffer>;\n  private _textureUploads: Set<WebGPUBaseTexture>;\n  private _uploadCommandEncoder: GPUCommandEncoder;\n  private _renderCommandEncoder: GPUCommandEncoder;\n  private _renderPassEncoder: GPURenderPassEncoder;\n  private _fbBindFlag: number;\n  private _currentViewport: [number, number, number, number];\n  private _currentScissor: [number, number, number, number];\n  private _frameBufferInfo: FrameBufferInfo;\n  constructor(device: WebGPUDevice) {\n    this._device = device;\n    this._bufferUploads = new Set();\n    this._textureUploads = new Set();\n    this._uploadCommandEncoder = this._device.device.createCommandEncoder();\n    this._renderCommandEncoder = this._device.device.createCommandEncoder();\n    this._renderPassEncoder = null;\n    this._frameBuffer = null;\n    this._fbBindFlag = null;\n    this._currentViewport = null;\n    this._currentScissor = null;\n    this._frameBufferInfo = null;\n  }\n  get active(): boolean {\n    return !!this._renderPassEncoder;\n  }\n  isBufferUploading(buffer: WebGPUBuffer): boolean {\n    return !!this._bufferUploads.has(buffer);\n  }\n  isTextureUploading(tex: WebGPUBaseTexture): boolean {\n    return !!this._textureUploads.has(tex);\n  }\n  setFramebuffer(fb: WebGPUFrameBuffer): void {\n    if (this._frameBuffer !== fb) {\n      this.end();\n      this._frameBuffer = fb;\n      this._currentViewport = null;\n      this._currentScissor = null;\n    }\n  }\n  getFramebuffer(): WebGPUFrameBuffer {\n    return this._frameBuffer;\n  }\n  setViewport();\n  setViewport(x: number, y: number, w: number, h: number): void;\n  setViewport(x?: number, y?: number, w?: number, h?: number): void {\n    if (x === undefined || x === null) {\n      this._currentViewport = null;\n      if (this._renderPassEncoder) {\n        this._renderPassEncoder.setViewport(0, 0, this._device.drawingBufferWidth, this._device.drawingBufferHeight, 0, 1);\n      }\n    } else {\n      const vx = this._device.screenToDevice(x);\n      const vy = this._device.screenToDevice(y);\n      const vw = this._device.screenToDevice(w);\n      const vh = this._device.screenToDevice(h);\n      if (vx < 0 || vy < 0 || vw > this._device.drawingBufferWidth || vh > this._device.drawingBufferHeight) {\n        console.log(`** VIEWPORT ERROR **: (${vx}, ${vy}, ${vw}, ${vh}) => (0, 0, ${this._device.drawingBufferWidth}, ${this._device.drawingBufferHeight})`);\n      }\n      this._currentViewport = [x, y, w, h];\n      if (this._renderPassEncoder) {\n        this._renderPassEncoder.setViewport(vx, this._device.drawingBufferHeight - vy - vh, vw, vh, 0, 1);\n      }\n    }\n  }\n  getViewport(): number[] {\n    return this._currentViewport\n      ? [...this._currentViewport]\n      : [0, 0, this._device.deviceToScreen(this._device.drawingBufferWidth), this._device.deviceToScreen(this._device.drawingBufferHeight)];\n  }\n  setScissor();\n  setScissor(x: number, y: number, w: number, h: number): void;\n  setScissor(x?: number, y?: number, w?: number, h?: number): void {\n    if (x === undefined || x === null) {\n      this._currentScissor = null;\n      if (this._renderPassEncoder) {\n        this._renderPassEncoder.setScissorRect(0, 0, this._device.drawingBufferWidth, this._device.drawingBufferHeight);\n      }\n    } else {\n      this._currentScissor = [x, y, w, h];\n      if (this._renderPassEncoder) {\n        x = this._device.screenToDevice(x);\n        y = this._device.screenToDevice(y);\n        w = this._device.screenToDevice(w);\n        h = this._device.screenToDevice(h);\n        this._renderPassEncoder.setScissorRect(x, this._device.drawingBufferHeight - y - h, w, h);\n      }\n    }\n  }\n  getScissor(): number[] {\n    return this._currentScissor\n      ? [...this._currentScissor]\n      : [0, 0, this._device.deviceToScreen(this._device.drawingBufferWidth), this._device.deviceToScreen(this._device.drawingBufferHeight)];\n  }\n  draw(program: WebGPUProgram, vertexData: WebGPUVertexInputLayout, stateSet: WebGPURenderStateSet, bindGroups: WebGPUBindGroup[], bindGroupOffsets: Iterable<number>[], primitiveType: PrimitiveType, first: number, count: number, numInstances: number): void {\n    const validation = this.validateDraw(program, vertexData, bindGroups);\n    if ((validation & VALIDATION_NEED_NEW_PASS) || (validation & VALIDATION_NEED_GENERATE_MIPMAP)) {\n      this.end();\n    }\n    if (validation & VALIDATION_NEED_GENERATE_MIPMAP) {\n      WebGPUMipmapGenerator.generateMipmapsForBindGroups(this._device, bindGroups);\n    }\n    if (!(validation & VALIDATION_FAILED)) {\n      if (!this.active) {\n        this.begin();\n      }\n      this.drawInternal(this._renderPassEncoder, program, vertexData, stateSet, bindGroups, bindGroupOffsets, primitiveType, first, count, numInstances);\n    }\n  }\n  clear(color: Vector4, depth: number, stencil: number): void {\n    if (!this._currentScissor) {\n      this.end();\n      this.begin(color, depth, stencil);\n    } else {\n      if (!this._renderPassEncoder) {\n        this.begin();\n      }\n      this._renderPassEncoder.insertDebugMarker('clear');\n      WebGPUClearQuad.drawClearQuad(this, color, depth, stencil);\n      this._renderPassEncoder.insertDebugMarker('end clear');\n    }\n  }\n  getDevice(): WebGPUDevice {\n    return this._device;\n  }\n  getFrameBufferInfo(): FrameBufferInfo {\n    return this._frameBufferInfo;\n  }\n  begin(color?: Vector4, depth?: number, stencil?: number): void {\n    if (this.active) {\n      console.error('WebGPURenderPass.begin() failed: begin() has already been called');\n      return;\n    }\n    this._uploadCommandEncoder = this._device.device.createCommandEncoder();\n    this._renderCommandEncoder = this._device.device.createCommandEncoder();\n    if (!this._frameBuffer) {\n      this._frameBufferInfo = {\n        colorFormats: [this._device.backbufferFormat],\n        depthFormat: this._device.backbufferDepthFormat,\n        sampleCount: this._device.sampleCount,\n        hash: `${this._device.backbufferFormat}:${this._device.backbufferDepthFormat}:${this._device.sampleCount}`\n      }\n      const mainPassDesc = this._device.defaultRenderPassDesc;\n      const colorAttachmentDesc = this._device.defaultRenderPassDesc.colorAttachments[0];\n      if (this._frameBufferInfo.sampleCount > 1) {\n        colorAttachmentDesc.resolveTarget = this._device.context.getCurrentTexture().createView();\n      } else {\n        colorAttachmentDesc.view = this._device.context.getCurrentTexture().createView();\n      }\n      colorAttachmentDesc.loadOp = color ? 'clear' : 'load';\n      colorAttachmentDesc.clearValue = color?.getArray();\n      const depthAttachmentDesc = this._device.defaultRenderPassDesc.depthStencilAttachment;\n      depthAttachmentDesc.depthLoadOp = typeof depth === 'number' ? 'clear' : 'load';\n      depthAttachmentDesc.depthClearValue = depth;\n      depthAttachmentDesc.stencilLoadOp = typeof stencil === 'number' ? 'clear' : 'load';\n      depthAttachmentDesc.stencilClearValue = stencil;\n      this._renderPassEncoder = this._renderCommandEncoder.beginRenderPass(mainPassDesc);\n    } else {\n      const colorAttachmentTextures = this._frameBuffer.getColorAttachments() as WebGPUBaseTexture[];\n      const depthAttachmentTexture = this._frameBuffer.getDepthAttachment() as WebGPUBaseTexture;\n      let depthTextureView: GPUTextureView;\n      if (depthAttachmentTexture) {\n        depthAttachmentTexture._markAsCurrentFB(true);\n        const attachment = this._frameBuffer.options.depthAttachment;\n        const layer = depthAttachmentTexture.isTexture2DArray() || depthAttachmentTexture.isTexture3D() ? attachment.layer : 0;\n        depthTextureView = depthAttachmentTexture.getView(attachment.level ?? 0, layer ?? 0, 1);\n      }\n      this._frameBufferInfo = {\n        colorFormats: colorAttachmentTextures.map(val => val.gpuFormat),\n        depthFormat: depthAttachmentTexture?.gpuFormat,\n        sampleCount: 1,\n        hash: null,\n      };\n      this._frameBufferInfo.hash = `${this._frameBufferInfo.colorFormats.join('-')}:${this._frameBufferInfo.depthFormat}:${this._frameBufferInfo.sampleCount}`;\n      this._fbBindFlag = this._frameBuffer.bindFlag;\n      const passDesc: GPURenderPassDescriptor = {\n        label: `customRenderPass:${this._frameBufferInfo.hash}`,\n        colorAttachments: this._frameBuffer.options.colorAttachments.map((attachment, index) => {\n          const tex = attachment.texture as WebGPUBaseTexture;\n          if (tex) {\n            tex._markAsCurrentFB(true);\n            const layer = (tex.isTexture2DArray() || tex.isTexture3D()) ? attachment.layer : tex.isTextureCube() ? attachment.face : 0;\n            return {\n              view: tex.getView(attachment.level ?? 0, layer ?? 0, 1),\n              loadOp: color ? 'clear' : 'load',\n              clearValue: color?.getArray(),\n              storeOp: 'store',\n            } as GPURenderPassColorAttachment\n          } else {\n            return null;\n          }\n        }),\n        depthStencilAttachment: depthAttachmentTexture ? {\n          view: depthTextureView,\n          depthLoadOp: typeof depth === 'number' ? 'clear' : 'load',\n          depthClearValue: depth,\n          depthStoreOp: 'store',\n          stencilLoadOp: hasStencilChannel(depthAttachmentTexture.format) ? typeof stencil === 'number' ? 'clear' : 'load' : undefined,\n          stencilClearValue: stencil,\n          stencilStoreOp: hasStencilChannel(depthAttachmentTexture.format) ? 'store' : undefined,\n        } : undefined\n      };\n      this._renderPassEncoder = this._renderCommandEncoder.beginRenderPass(passDesc);\n    }\n    if (!this._currentViewport) {\n      this.setViewport();\n    } else {\n      this.setViewport(...this._currentViewport);\n    }\n    if (!this._currentScissor) {\n      this.setScissor();\n    } else {\n      this.setScissor(...this._currentScissor);\n    }\n  }\n  end() {\n    if (this.active) {\n      this.flush();\n      if (this._frameBuffer) {\n        const colorAttachmentTextures = this._frameBuffer.getColorAttachments() as WebGPUBaseTexture[];\n        const depthAttachmentTexture = this._frameBuffer.getDepthAttachment() as WebGPUBaseTexture;\n        for (const texture of colorAttachmentTextures) {\n          texture._markAsCurrentFB(false);\n          if (texture.mipLevelCount > 1) {\n            texture.generateMipmaps();\n          }\n        }\n        depthAttachmentTexture?._markAsCurrentFB(false);\n      }\n    }\n  }\n  private drawInternal(renderPassEncoder: GPURenderPassEncoder, program: WebGPUProgram, vertexData: WebGPUVertexInputLayout, stateSet: WebGPURenderStateSet, bindGroups: WebGPUBindGroup[], bindGroupOffsets: Iterable<number>[], primitiveType: PrimitiveType, first: number, count: number, numInstances: number): void {\n    if (this.setBindGroupsForRender(renderPassEncoder, program, vertexData, bindGroups, bindGroupOffsets)) {\n      const pipeline = this._device.pipelineCache.fetchRenderPipeline(program, vertexData, stateSet, primitiveType, this._frameBufferInfo);\n      if (pipeline) {\n        renderPassEncoder.setPipeline(pipeline);\n        const stencilState = stateSet?.stencilState;\n        if (stencilState) {\n          renderPassEncoder.setStencilReference(stencilState.ref);\n        }\n        if (vertexData) {\n          const vertexBuffers = vertexData.getLayouts(program.vertexAttributes)?.buffers;\n          vertexBuffers?.forEach((val, index) => {\n            renderPassEncoder.setVertexBuffer(index, val.buffer.object, val.offset);\n          });\n          const indexBuffer = vertexData.getIndexBuffer() as WebGPUIndexBuffer;\n          if (indexBuffer) {\n            renderPassEncoder.setIndexBuffer(indexBuffer.object, indexBuffer.indexType === typeU16 ? 'uint16' : 'uint32');\n            renderPassEncoder.drawIndexed(count, numInstances, first);\n          } else {\n            renderPassEncoder.draw(count, numInstances, first);\n          }\n        } else {\n          renderPassEncoder.draw(count, numInstances, first);\n        }\n      }\n    }\n  }\n  private validateDraw(program: WebGPUProgram, vertexData: WebGPUVertexInputLayout, bindGroups: WebGPUBindGroup[]): number {\n    let validation = 0;\n    if (bindGroups) {\n      for (const bindGroup of bindGroups) {\n        if (bindGroup) {\n          if (bindGroup.bindGroup) {\n            for (const ubo of bindGroup.bufferList) {\n              if (ubo.disposed) {\n                validation |= VALIDATION_FAILED;\n              }\n              if (ubo.getPendingUploads().length > 0) {\n                this._bufferUploads.add(ubo);\n              }\n            }\n            for (const tex of bindGroup.textureList) {\n              if (tex.disposed) {\n                validation |= VALIDATION_FAILED;\n              }\n              if (tex._isMarkedAsCurrentFB()) {\n                console.error('bind resource texture can not be current render target');\n                validation |= VALIDATION_FAILED;\n              }\n              if (tex.isMipmapDirty()) {\n                validation |= VALIDATION_NEED_GENERATE_MIPMAP;\n              }\n              if (tex.getPendingUploads().length > 0) {\n                this._textureUploads.add(tex);\n              }\n            }\n          }\n        }\n      }\n    }\n    const vertexBuffers = vertexData?.getLayouts(program.vertexAttributes)?.buffers;\n    if (vertexBuffers) {\n      for (const buffer of vertexBuffers) {\n        if (buffer.buffer.getPendingUploads().length > 0) {\n          this._bufferUploads.add(buffer.buffer);\n        }\n      }\n    }\n    const indexBuffer = vertexData?.getIndexBuffer() as unknown as WebGPUBuffer;\n    if (indexBuffer?.getPendingUploads().length > 0) {\n      this._bufferUploads.add(indexBuffer);\n    }\n    if (this._frameBuffer && this._frameBuffer.bindFlag !== this._fbBindFlag) {\n      validation |= VALIDATION_NEED_NEW_PASS;\n    }\n    return validation;\n  }\n  private setBindGroupsForRender(renderPassEncoder: GPURenderPassEncoder, program: WebGPUProgram, vertexData: WebGPUVertexInputLayout, bindGroups: WebGPUBindGroup[], bindGroupOffsets: Iterable<number>[]): boolean {\n    if (bindGroups) {\n      for (let i = 0; i < bindGroups.length; i++) {\n        if (bindGroups[i]) {\n          bindGroups[i].updateVideoTextures();\n          const bindGroup = bindGroups[i].bindGroup;\n          if (!bindGroup) {\n            return false;\n          }\n          renderPassEncoder.setBindGroup(i, bindGroup, bindGroupOffsets?.[i] || undefined);\n        }\n      }\n    }\n    return true;\n  }\n  private flush() {\n    if (this._renderPassEncoder) {\n      this._renderPassEncoder.end();\n      this._renderPassEncoder = null;\n    }\n    this._bufferUploads.forEach(buffer => buffer.beginSyncChanges(this._uploadCommandEncoder));\n    this._textureUploads.forEach(tex => tex.beginSyncChanges(this._uploadCommandEncoder));\n    this._device.device.queue.submit([this._uploadCommandEncoder.finish(), this._renderCommandEncoder.finish()]);\n    this._bufferUploads.forEach(buffer => buffer.endSyncChanges());\n    this._textureUploads.forEach(tex => tex.endSyncChanges());\n    this._bufferUploads.clear();\n    this._textureUploads.clear();\n    this._uploadCommandEncoder = null;\n    this._renderCommandEncoder = null;\n  }\n}\n"],"names":[],"mappings":"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"}