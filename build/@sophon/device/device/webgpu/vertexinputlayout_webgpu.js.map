{"version":3,"file":"vertexinputlayout_webgpu.js","sources":["../../../../../libs/device/src/device/webgpu/vertexinputlayout_webgpu.ts"],"sourcesContent":["import { PrimitiveType } from '../base_types';\nimport { StructuredBuffer, VertexInputLayout, IndexBuffer, getVertexBufferStride, getVertexBufferAttribType, VertexSemantic } from '../gpuobject';\nimport { vertexFormatToHash } from './constants_webgpu';\nimport { WebGPUObject } from './gpuobject_webgpu';\nimport { WebGPUStructuredBuffer } from './structuredbuffer_webgpu';\nimport type { WebGPUDevice } from './device';\nimport type { VertexData } from '../vertexdata';\nimport type { WebGPUBuffer } from './buffer_webgpu';\n\nexport class WebGPUVertexInputLayout extends WebGPUObject<unknown> implements VertexInputLayout<unknown> {\n  private static _hashCounter = 0;\n  private _vertexData: VertexData;\n  private _hash: string;\n  private _layouts: { [hash: string]: { layoutHash: string, buffers: { buffer: WebGPUBuffer, offset: number }[] } };\n  constructor(device: WebGPUDevice, vertexData: VertexData) {\n    super(device);\n    this._vertexData = vertexData.clone();\n    this._hash = String(++WebGPUVertexInputLayout._hashCounter);\n    this._layouts = {};\n  }\n  destroy() {\n    this._object = null;\n  }\n  async restore(): Promise<void> {\n    this._object = {};\n  }\n  get hash(): string {\n    return this._hash;\n  }\n  get vertexBuffers() {\n    return this._vertexData.vertexBuffers;\n  }\n  get indexBuffer() {\n    return this._vertexData.indexBuffer;\n  }\n  getDrawOffset(): number {\n    return this._vertexData.getDrawOffset();\n  }\n  getVertexBuffer(semantic: VertexSemantic): StructuredBuffer {\n    return this._vertexData.getVertexBuffer(semantic);\n  }\n  getIndexBuffer(): IndexBuffer {\n    return this._vertexData.getIndexBuffer();\n  }\n  getLayouts(attributes: string): { layoutHash: string, buffers: { buffer: WebGPUBuffer, offset: number }[] } {\n    if (!attributes) {\n      return null;\n    }\n    let layout = this._layouts[attributes];\n    if (!layout) {\n      layout = this.calcHash(attributes);\n      this._layouts[attributes] = layout;\n    }\n    return layout;\n  }\n  private calcHash(attribHash: string): { layoutHash: string, buffers: { buffer: WebGPUStructuredBuffer, offset: number }[] } {\n    const layouts: string[] = [];\n    const layoutVertexBuffers: { buffer: WebGPUStructuredBuffer, offset: number }[] = [];\n    const vertexBuffers = this._vertexData.vertexBuffers;\n    const drawOffset = this._vertexData.getDrawOffset();\n    const attributes = attribHash.split(':').map(val => Number(val));\n    for (let idx = 0; idx < attributes.length; idx++) {\n      const attrib = attributes[idx];\n      const bufferInfo = vertexBuffers[attrib];\n      const buffer = bufferInfo?.buffer;\n      if (!buffer) {\n        console.log(`ERROR: No vertex buffer set for location ${idx}`);\n        continue;\n      }\n      const vertexType = getVertexBufferAttribType(buffer.structure, attrib);\n      if (!vertexType) {\n        console.log(`ERROR: No vertex attrib ${attrib} found for vertex buffer`);\n        return null;\n      }\n      const gpuFormat = WebGPUStructuredBuffer.getGPUVertexFormat(vertexType);\n      if (!gpuFormat) {\n        throw new Error('Invalid vertex buffer format');\n      }\n      const index = layoutVertexBuffers.findIndex(val => val.buffer === buffer);\n      const stride = getVertexBufferStride(bufferInfo.buffer.structure);\n      if (index >= 0 && stride * drawOffset !== layoutVertexBuffers[index].offset) {\n        throw new Error('WebGPUVertexData.createLayouts() failed: inconsistent stride for interleaved vertex buffer');\n      }\n      let layout = index >= 0 ? layouts[index] : `${stride}-${Number(bufferInfo.stepMode === 'instance')}`;\n      layout += `-${vertexFormatToHash[gpuFormat]}-${bufferInfo.offset}-${idx}`;\n      if (index >= 0) {\n        layouts[index] = layout;\n      } else {\n        layouts.push(layout);\n        layoutVertexBuffers.push({ buffer: buffer as WebGPUStructuredBuffer, offset: stride * drawOffset });\n      }\n    }\n    return {\n      layoutHash: layouts.join(':'),\n      buffers: layoutVertexBuffers,\n    };\n  }\n  bind(): void {\n    this._device.setVertexData(this);\n  }\n  draw(primitiveType: PrimitiveType, first: number, count: number): void {\n    this.bind();\n    this._device.draw(primitiveType, first, count);\n  }\n  drawInstanced(\n    primitiveType: PrimitiveType,\n    first: number,\n    count: number,\n    numInstances: number,\n  ) {\n    this.bind();\n    this._device.drawInstanced(primitiveType, first, count, numInstances);\n  }\n}\n"],"names":[],"mappings":"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"}