{"version":3,"file":"framebuffer_webgpu.js","sources":["../../../../../libs/device/src/device/webgpu/framebuffer_webgpu.ts"],"sourcesContent":["import { CubeFace } from '@sophon/base';\r\nimport { WebGPUObject } from './gpuobject_webgpu';\r\nimport { FrameBuffer, IFrameBufferOptions } from '../gpuobject';\r\nimport type { WebGPUDevice } from './device';\r\nimport type { BaseTexture } from '../gpuobject';\r\nimport type { WebGPUBaseTexture } from './basetexture_webgpu';\r\n\r\nexport class WebGPUFrameBuffer extends WebGPUObject<unknown> implements FrameBuffer<unknown> {\r\n  private _options: IFrameBufferOptions;\r\n  private _viewport: number[];\r\n  private _scissor: number[];\r\n  private _width: number;\r\n  private _height: number;\r\n  private _bindFlag: number;\r\n  constructor(device: WebGPUDevice, opt?: IFrameBufferOptions) {\r\n    super(device);\r\n    this._object = null;\r\n    this._viewport = [0, 0, 0, 0];\r\n    this._scissor = null;\r\n    this._options = {\r\n      colorAttachments: opt?.colorAttachments\r\n        ? opt.colorAttachments.map((value) => Object.assign({ texture: null }, value))\r\n        : null,\r\n      depthAttachment: opt?.depthAttachment ? Object.assign({}, opt.depthAttachment) : null\r\n    };\r\n    this._width = 0;\r\n    this._height = 0;\r\n    this._bindFlag = 0;\r\n    this._init();\r\n  }\r\n  get options(): IFrameBufferOptions {\r\n    return this._options;\r\n  }\r\n  get bindFlag(): number {\r\n    return this._bindFlag;\r\n  }\r\n  getViewport(): number[] {\r\n    return this._viewport;\r\n  }\r\n  setViewport(vp: number[]): void {\r\n    this._viewport = [...vp];\r\n  }\r\n  getScissorRect(): number[] {\r\n    return this._scissor;\r\n  }\r\n  setScissorRect(scissor: number[]): void {\r\n    this._scissor = scissor ? [...scissor] : null;\r\n  }\r\n  getWidth(): number {\r\n    return this._width;\r\n  }\r\n  getHeight(): number {\r\n    return this._height;\r\n  }\r\n  async restore() {\r\n    if (this._options?.depthAttachment?.texture?.disposed) {\r\n      await this._options.depthAttachment.texture.reload();\r\n    }\r\n    if (this._options?.colorAttachments) {\r\n      for (const k of this._options.colorAttachments) {\r\n        if (k?.texture?.disposed) {\r\n          await k.texture.reload();\r\n        }\r\n      }\r\n    }\r\n    if (!this._device.isContextLost()) {\r\n      this._init();\r\n    }\r\n  }\r\n  destroy() {\r\n    this._object = null;\r\n  }\r\n  setCubeTextureFace(index: number, face: CubeFace) {\r\n    if (this._options.colorAttachments[index].face !== face) {\r\n      this._options.colorAttachments[index].face = face;\r\n      this._bindFlag++;\r\n    }\r\n  }\r\n  setTextureLevel(index: number, level: number) {\r\n    if (this._options.colorAttachments[index].level !== level) {\r\n      this._options.colorAttachments[index].level = level;\r\n      this._bindFlag++;\r\n    }\r\n  }\r\n  setTextureLayer(index: number, layer: number) {\r\n    if (this._options.colorAttachments[index].layer !== layer) {\r\n      this._options.colorAttachments[index].layer = layer;\r\n      this._bindFlag++;\r\n    }\r\n  }\r\n  setDepthTextureLayer(layer: number) {\r\n    if (this._options.depthAttachment && this._options.depthAttachment.layer !== layer) {\r\n      this._options.depthAttachment.layer = layer;\r\n      this._bindFlag++;\r\n    }\r\n  }\r\n  getDepthAttachment(): BaseTexture {\r\n    return this._options?.depthAttachment?.texture || null;\r\n  }\r\n  getColorAttachments(): BaseTexture[] {\r\n    return this._options?.colorAttachments?.map(val => val?.texture || null) || [];\r\n  }\r\n  getColorFormats(): GPUTextureFormat[] {\r\n    return this._options?.colorAttachments?.map(val => (val?.texture as WebGPUBaseTexture)?.gpuFormat || null);\r\n  }\r\n  getDepthFormat(): GPUTextureFormat {\r\n    return (this._options.depthAttachment?.texture as WebGPUBaseTexture)?.gpuFormat || null;\r\n  }\r\n  bind(): boolean {\r\n    throw new Error('no bind operatation for WebGPU');\r\n  }\r\n  unbind(): void {\r\n    throw new Error('no unbind operatation for WebGPU');\r\n  }\r\n  private _init(): void {\r\n    this._width = 0;\r\n    this._height = 0;\r\n    for (const colorAttachment of this._options.colorAttachments) {\r\n      if (colorAttachment.texture) {\r\n        if (this._width === 0) {\r\n          this._width = colorAttachment.texture.width;\r\n        }\r\n        if (this._height === 0) {\r\n          this._height = colorAttachment.texture.height;\r\n        }\r\n        if (this._width !== colorAttachment.texture.width || this._height !== colorAttachment.texture.height) {\r\n          console.error('init frame buffer failed: color attachment textures must have same size');\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (this._width === 0 || this._height === 0) {\r\n      console.error('init frame buffer failed: can not create frame buffer with zero size');\r\n      return;\r\n    }\r\n    this._object = {};\r\n  }\r\n  isFramebuffer(): boolean {\r\n    return true;\r\n  }\r\n  getSampleCount(): number {\r\n    return 1;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}