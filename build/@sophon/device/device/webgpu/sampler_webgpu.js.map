{"version":3,"file":"sampler_webgpu.js","sources":["../../../../../libs/device/src/device/webgpu/sampler_webgpu.ts"],"sourcesContent":["import { WebGPUObject } from './gpuobject_webgpu';\nimport { textureWrappingMap, textureFilterMap, compareFuncMap } from './constants_webgpu';\nimport { TextureWrapping, TextureFilter } from '../base_types';\nimport type { SamplerOptions, TextureSampler } from '../gpuobject';\nimport type { WebGPUDevice } from './device';\n\nexport class WebGPUTextureSampler extends WebGPUObject<GPUSampler> implements TextureSampler<GPUSampler> {\n  private _options: SamplerOptions;\n  constructor(device: WebGPUDevice, options: SamplerOptions) {\n    super(device);\n    this._options = Object.assign({\n      addressU: TextureWrapping.ClampToEdge,\n      addressV: TextureWrapping.ClampToEdge,\n      addressW: TextureWrapping.ClampToEdge,\n      magFilter: TextureFilter.Nearest,\n      minFilter: TextureFilter.Nearest,\n      mipFilter: TextureFilter.None,\n      lodMin: 0,\n      lodMax: 32,\n      compare: null,\n      maxAnisotropy: 1\n    }, options || {});\n    this._load();\n  }\n  get hash(): number {\n    return this._object ? this._device.gpuGetObjectHash(this._object) : 0;\n  }\n  get addressModeU() {\n    return this._options.addressU;\n  }\n  get addressModeV() {\n    return this._options.addressV;\n  }\n  get addressModeW() {\n    return this._options.addressW;\n  }\n  get magFilter() {\n    return this._options.magFilter;\n  }\n  get minFilter() {\n    return this._options.minFilter;\n  }\n  get mipFilter() {\n    return this._options.mipFilter;\n  }\n  get lodMin() {\n    return this._options.lodMin;\n  }\n  get lodMax() {\n    return this._options.lodMax;\n  }\n  get compare() {\n    return this._options.compare;\n  }\n  get maxAnisotropy() {\n    return this._options.maxAnisotropy;\n  }\n  destroy() {\n    this._object = null;\n  }\n  async restore() {\n    if (!this._device.isContextLost()) {\n      this._load();\n    }\n  }\n  private _load(): boolean {\n    this._object = this._device.gpuCreateSampler({\n      addressModeU: textureWrappingMap[this._options.addressU],\n      addressModeV: textureWrappingMap[this._options.addressV],\n      addressModeW: textureWrappingMap[this._options.addressW],\n      magFilter: textureFilterMap[this._options.magFilter],\n      minFilter: textureFilterMap[this._options.minFilter],\n      mipmapFilter: textureFilterMap[this._options.mipFilter],\n      lodMinClamp: this._options.lodMin,\n      lodMaxClamp: this._options.lodMax,\n      compare: compareFuncMap[this._options.compare] || undefined,\n      maxAnisotropy: this._options.maxAnisotropy\n    });\n    return !!this._object;\n  }\n  isSampler(): boolean {\n    return true;\n  }\n}\n"],"names":[],"mappings":"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"}