{"version":3,"file":"texturevideo_webgpu.js","sources":["../../../../../libs/device/src/device/webgpu/texturevideo_webgpu.ts"],"sourcesContent":["import { WebGPUBaseTexture } from './basetexture_webgpu';\r\nimport { TextureVideo } from '../gpuobject';\r\nimport type { WebGPUDevice } from './device';\r\n\r\nexport class WebGPUTextureVideo extends WebGPUBaseTexture<GPUExternalTexture> implements TextureVideo<GPUExternalTexture> {\r\n  private _source: HTMLVideoElement;\r\n  constructor(device: WebGPUDevice, element: HTMLVideoElement) {\r\n    super(device);\r\n    this._source = element;\r\n    this._width = 0;\r\n    this._height = 0;\r\n    this.loadFromElement();\r\n  }\r\n  isTextureVideo(): this is TextureVideo {\r\n    return true;\r\n  }\r\n  get width(): number {\r\n    return this._width;\r\n  }\r\n  get height(): number {\r\n    return this._height;\r\n  }\r\n  get source(): HTMLVideoElement {\r\n    return this._source;\r\n  }\r\n  async restore() {\r\n    if (!this._object && !this._device.isContextLost()) {\r\n      this.loadElement(this._source);\r\n    }\r\n  }\r\n  updateVideoFrame(): boolean {\r\n    if ((!this._object || (this._object as any).expired || (this._object as any).expired === undefined) && this._source.readyState > 2) {\r\n      this._object = this._device.gpuImportExternalTexture(this._source);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  createView(level?: number, face?: number, mipCount?: number): GPUTextureView {\r\n    return null;\r\n  }\r\n  init(): void {\r\n    this.loadFromElement();\r\n  }\r\n  /** @internal */\r\n  loadFromElement(): void {\r\n    this.loadElement(this._source);\r\n  }\r\n  /** @internal */\r\n  private loadElement(element: HTMLVideoElement): boolean {\r\n    this._width = element.videoWidth;\r\n    this._height = element.videoHeight;\r\n    if (!this._device.isContextLost()) {\r\n      if (element.readyState > 2) {\r\n        this._object = this._device.gpuImportExternalTexture(element);\r\n      }\r\n    }\r\n    return !!this._object;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAIM,MAAO,kBAAmB,SAAQ,iBAAqC,CAAA;AACnE,IAAA,OAAO,CAAmB;IAClC,WAAY,CAAA,MAAoB,EAAE,OAAyB,EAAA;QACzD,KAAK,CAAC,MAAM,CAAC,CAAC;AACd,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChB,QAAA,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IACD,cAAc,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC;KACb;AACD,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;AACD,IAAA,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AACD,IAAA,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AACD,IAAA,MAAM,OAAO,GAAA;AACX,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE;AAClD,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAChC,SAAA;KACF;IACD,gBAAgB,GAAA;AACd,QAAA,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,IAAK,IAAI,CAAC,OAAe,CAAC,OAAO,IAAK,IAAI,CAAC,OAAe,CAAC,OAAO,KAAK,SAAS,KAAK,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,EAAE;AAClI,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnE,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AACD,IAAA,UAAU,CAAC,KAAc,EAAE,IAAa,EAAE,QAAiB,EAAA;AACzD,QAAA,OAAO,IAAI,CAAC;KACb;IACD,IAAI,GAAA;QACF,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAChC;AAEO,IAAA,WAAW,CAAC,OAAyB,EAAA;AAC3C,QAAA,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC;AACjC,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;AACnC,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE;AACjC,YAAA,IAAI,OAAO,CAAC,UAAU,GAAG,CAAC,EAAE;gBAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;AAC/D,aAAA;AACF,SAAA;AACD,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;KACvB;AACF;;;;"}