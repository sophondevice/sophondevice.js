{"version":3,"file":"utils_webgpu.js","sources":["../../../../../libs/device/src/device/webgpu/utils_webgpu.ts"],"sourcesContent":["import { Vector4 } from \"@sophon/base\";\r\nimport { CompareFunc, PrimitiveType } from \"../base_types\";\r\nimport { ProgramBuilder } from \"../builder\";\r\nimport { FaceMode, StencilOp } from \"../render_states\";\r\nimport type { WebGPUProgram } from \"./gpuprogram_webgpu\";\r\nimport type { WebGPUBaseTexture } from \"./basetexture_webgpu\";\r\nimport type { WebGPUBindGroup } from \"./bindgroup_webgpu\";\r\nimport type { WebGPURenderStateSet } from \"./renderstates_webgpu\";\r\nimport type { WebGPUDevice } from \"./device\";\r\nimport type { FrameBufferInfo } from \"./pipeline_cache\";\r\nimport type { WebGPURenderPass } from \"./renderpass_webgpu\";\r\n\r\nexport class WebGPUClearQuad {\r\n  private static _clearPrograms: WebGPUProgram[] = [];\r\n  private static _clearBindGroup: WebGPUBindGroup = null;\r\n  private static _clearStateSet: WebGPURenderStateSet = null;\r\n  private static _defaultClearColor = new Vector4(0, 0, 0, 1);\r\n\r\n  static drawClearQuad(renderPass: WebGPURenderPass, clearColor: Vector4, clearDepth: number, clearStencil: number) {\r\n    if (!this._clearBindGroup) {\r\n      this.initClearQuad(renderPass);\r\n    }\r\n    const numColorAttachments = renderPass.getFrameBufferInfo().colorFormats.length;\r\n    const program = this._clearPrograms[numColorAttachments];\r\n    const bClearColor = !!clearColor;\r\n    const bClearDepth = !(clearDepth === null || clearDepth === undefined);\r\n    const bClearStencil = !(clearStencil === null || clearStencil === undefined);\r\n    this._clearBindGroup.setValue('clearValues', {\r\n      color: bClearColor ? clearColor.getArray() : this._defaultClearColor.getArray(),\r\n      depth: bClearDepth ? clearDepth : 1\r\n    });\r\n    this._clearStateSet.useDepthState().enableWrite(bClearDepth);\r\n    this._clearStateSet.useColorState().setColorMask(bClearColor, bClearColor, bClearColor, bClearColor);\r\n    this._clearStateSet.useStencilState().enable(bClearStencil).setReference(bClearStencil ? clearStencil : 0);\r\n    renderPass.draw(program, null, this._clearStateSet, [this._clearBindGroup], null, PrimitiveType.TriangleStrip, 0, 4, 1);\r\n  }\r\n  private static initClearQuad(renderPass: WebGPURenderPass): void {\r\n    this._clearPrograms[0] = this.createClearQuadProgram(renderPass, 1);\r\n    this._clearPrograms[1] = this.createClearQuadProgram(renderPass, 2);\r\n    this._clearPrograms[2] = this.createClearQuadProgram(renderPass, 3);\r\n    this._clearPrograms[3] = this.createClearQuadProgram(renderPass, 4);\r\n    this._clearBindGroup = renderPass.getDevice().createBindGroup(this._clearPrograms[0].bindGroupLayouts[0]) as WebGPUBindGroup;\r\n    this._clearStateSet = renderPass.getDevice().createRenderStateSet() as WebGPURenderStateSet;\r\n    this._clearStateSet.useDepthState().enableTest(false);\r\n    this._clearStateSet.useRasterizerState().setCullMode(FaceMode.NONE);\r\n    this._clearStateSet.useStencilState()\r\n      .enable(false)\r\n      .enableStencilTwoside(true)\r\n      .setFrontOp(StencilOp.REPLACE, StencilOp.REPLACE, StencilOp.REPLACE)\r\n      .setBackOp(StencilOp.REPLACE, StencilOp.REPLACE, StencilOp.REPLACE)\r\n      .setFrontCompareFunc(CompareFunc.Always)\r\n      .setBackCompareFunc(CompareFunc.Always);\r\n  }\r\n  private static createClearQuadProgram(renderPass: WebGPURenderPass, numColorAttachments: number): WebGPUProgram {\r\n    const pb = new ProgramBuilder(renderPass.getDevice());\r\n    const colorOutputNames = Array.from<string>({ length: numColorAttachments }).map((val, index) => `color${index}`);\r\n    const uniformStruct = pb.defineStruct(null, 'std140', pb.vec4('color'), pb.float('depth'));\r\n    return pb.buildRenderProgram({\r\n      label: 'ClearQuad',\r\n      vertex() {\r\n        this.clearValues = uniformStruct().uniform(0);\r\n        this.coords = [pb.vec2(-1, 1), pb.vec2(1, 1), pb.vec2(-1, -1), pb.vec2(1, -1)];\r\n        this.$mainFunc(function () {\r\n          this.$builtins.position = pb.vec4(this.coords.at(this.$builtins.vertexIndex), this.clearValues.depth, 1);\r\n        });\r\n      },\r\n      fragment() {\r\n        this.clearValues = uniformStruct().uniform(0);\r\n        colorOutputNames.forEach(name => this.$outputs[name] = pb.vec4());\r\n        this.$mainFunc(function () {\r\n          for (const c of colorOutputNames) {\r\n            this.$outputs[c] = this.clearValues.color;\r\n          }\r\n        });\r\n      }\r\n    }) as WebGPUProgram;\r\n  }\r\n}\r\n\r\nexport class WebGPUMipmapGenerator {\r\n  static _frameBufferInfo: FrameBufferInfo = null;\r\n  static _mipmapGenerationProgram: WebGPUProgram = null;\r\n  static _mipmapGenerationBindGroup: WeakMap<WebGPUBaseTexture, WebGPUBindGroup[][]> = new WeakMap();\r\n  static _mipmapGenerationStateSet: WebGPURenderStateSet = null;\r\n  static generateMipmap(device: WebGPUDevice, tex: WebGPUBaseTexture) {\r\n    if (!this._mipmapGenerationProgram) {\r\n      this.initMipmapGeneration(device);\r\n    }\r\n    const cmdEncoder = device.device.createCommandEncoder();\r\n    const miplevels = tex.mipLevelCount;\r\n    const numLayers = tex.isTextureCube() ? 6 : tex.isTexture2DArray() ? tex.depth : 1;\r\n    let tmpTex = tex.object;\r\n    if (!tex.isRenderable()) {\r\n      tmpTex = device.gpuCreateTexture({\r\n        size: {\r\n          width: tex.width,\r\n          height: tex.height,\r\n          depthOrArrayLayers: numLayers\r\n        },\r\n        format: tex.gpuFormat,\r\n        mipLevelCount: tex.mipLevelCount,\r\n        sampleCount: 1,\r\n        dimension: '2d',\r\n        usage: GPUTextureUsage.TEXTURE_BINDING\r\n          | GPUTextureUsage.RENDER_ATTACHMENT\r\n          | GPUTextureUsage.COPY_SRC,\r\n      });\r\n    }\r\n    tex.setMipmapDirty(false);\r\n    for (let face = 0; face < numLayers; face++) {\r\n      for (let level = 1; level < miplevels; level++) {\r\n        this.generateMiplevel(device, cmdEncoder, tex, tmpTex, tex.gpuFormat, tmpTex === tex.object ? level : level - 1, level, face);\r\n      }\r\n    }\r\n    if (tmpTex !== tex.object) {\r\n      let width = tex.width;\r\n      let height = tex.height;\r\n      for (let level = 1; level < miplevels; level++) {\r\n        cmdEncoder.copyTextureToTexture({\r\n          texture: tmpTex,\r\n          mipLevel: level - 1\r\n        }, {\r\n          texture: tex.object,\r\n          mipLevel: level\r\n        }, {\r\n          width: width,\r\n          height: height,\r\n          depthOrArrayLayers: numLayers\r\n        });\r\n        width = Math.ceil(width / 2);\r\n        height = Math.ceil(height / 2);\r\n      }\r\n    }\r\n    device.device.queue.submit([cmdEncoder.finish()]);\r\n    if (tmpTex !== tex.object) {\r\n      tmpTex.destroy();\r\n    }\r\n  }\r\n  static generateMipmapsForBindGroups(device: WebGPUDevice, bindGroups: WebGPUBindGroup[]) {\r\n    for (const bindGroup of bindGroups) {\r\n      if (bindGroup) {\r\n        for (const tex of bindGroup.textureList) {\r\n          if (!tex.disposed && tex.isMipmapDirty()) {\r\n            WebGPUMipmapGenerator.generateMipmap(device, tex);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private static generateMiplevel(device: WebGPUDevice, commandEncoder: GPUCommandEncoder, srcTex: WebGPUBaseTexture, dstTex: GPUTexture, format: GPUTextureFormat, dstLevel: number, srcLevel: number, face: number) {\r\n    const renderPassEncoder = this.beginMipmapGenerationPass(commandEncoder, dstTex, format, dstLevel, face);\r\n    renderPassEncoder.setBindGroup(0, this.getMipmapGenerationBindGroup(device, srcTex, srcLevel, face).bindGroup);\r\n    const pipeline = device.pipelineCache.fetchRenderPipeline(this._mipmapGenerationProgram, null, this._mipmapGenerationStateSet, PrimitiveType.TriangleStrip, this._frameBufferInfo);\r\n    if (pipeline) {\r\n      renderPassEncoder.setPipeline(pipeline);\r\n      renderPassEncoder.draw(4, 1, 0);\r\n    }\r\n    renderPassEncoder.end();\r\n  }\r\n  private static beginMipmapGenerationPass(encoder: GPUCommandEncoder, texture: GPUTexture, format: GPUTextureFormat, level: number, face: number): GPURenderPassEncoder {\r\n    const passDesc: GPURenderPassDescriptor = {\r\n      colorAttachments: [{\r\n        view: texture.createView({\r\n          dimension: '2d',\r\n          baseMipLevel: level || 0,\r\n          mipLevelCount: 1,\r\n          baseArrayLayer: face || 0,\r\n          arrayLayerCount: 1,\r\n        }),\r\n        loadOp: 'clear',\r\n        clearValue: [0, 0, 0, 0],\r\n        storeOp: 'store',\r\n      }],\r\n    }\r\n    this._frameBufferInfo = {\r\n      colorFormats: [format],\r\n      depthFormat: null,\r\n      sampleCount: 1,\r\n      hash: null,\r\n    };\r\n    this._frameBufferInfo.hash = `${this._frameBufferInfo.colorFormats.join('-')}:${this._frameBufferInfo.depthFormat}:${this._frameBufferInfo.sampleCount}`;\r\n    const renderPassEncoder = encoder.beginRenderPass(passDesc);\r\n    renderPassEncoder.insertDebugMarker('MipmapGeneration');\r\n    return renderPassEncoder;\r\n  }\r\n  private static getMipmapGenerationBindGroup(device: WebGPUDevice, texture: WebGPUBaseTexture, level: number, face: number): WebGPUBindGroup {\r\n    let faceGroups = this._mipmapGenerationBindGroup.get(texture);\r\n    if (!faceGroups) {\r\n      faceGroups = [];\r\n      this._mipmapGenerationBindGroup.set(texture, faceGroups);\r\n    }\r\n    let levelGroups = faceGroups[face];\r\n    if (!levelGroups) {\r\n      levelGroups = [];\r\n      faceGroups[face] = levelGroups;\r\n    }\r\n    let levelGroup = levelGroups[level];\r\n    if (!levelGroup) {\r\n      levelGroup = device.createBindGroup(this._mipmapGenerationProgram.bindGroupLayouts[0]) as WebGPUBindGroup;\r\n      levelGroup.setTextureView('tex', texture, level - 1, face, 1);\r\n      levelGroups[level] = levelGroup;\r\n    }\r\n    return levelGroup;\r\n  }\r\n  private static initMipmapGeneration(device: WebGPUDevice): void {\r\n    const pb = new ProgramBuilder(device);\r\n    this._mipmapGenerationProgram = pb.buildRenderProgram({\r\n      label: 'MipmapGeneration',\r\n      vertex() {\r\n        this.$outputs.outUV = pb.vec2();\r\n        this.coords = [pb.vec2(-1, 1), pb.vec2(1, 1), pb.vec2(-1, -1), pb.vec2(1, -1)];\r\n        this.uv = [pb.vec2(0, 0), pb.vec2(1, 0), pb.vec2(0, 1), pb.vec2(1, 1)];\r\n        this.$mainFunc(function () {\r\n          this.$builtins.position = pb.vec4(this.coords.at(this.$builtins.vertexIndex), 0, 1);\r\n          this.$outputs.outUV = this.uv.at(this.$builtins.vertexIndex);\r\n        });\r\n      },\r\n      fragment() {\r\n        this.$outputs.color = pb.vec4();\r\n        this.tex = pb.tex2D().uniform(0);\r\n        this.$mainFunc(function () {\r\n          this.$outputs.color = pb.textureSampleLevel(this.tex, this.$inputs.outUV, 0);\r\n        });\r\n      }\r\n    }) as WebGPUProgram;\r\n    this._mipmapGenerationStateSet = device.createRenderStateSet() as WebGPURenderStateSet;\r\n    this._mipmapGenerationStateSet.useDepthState().enableTest(false).enableWrite(false);\r\n    this._mipmapGenerationStateSet.useRasterizerState().setCullMode(FaceMode.NONE);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}