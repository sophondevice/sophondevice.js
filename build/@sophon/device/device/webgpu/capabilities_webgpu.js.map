{"version":3,"file":"capabilities_webgpu.js","sources":["../../../../../libs/device/src/device/webgpu/capabilities_webgpu.ts"],"sourcesContent":["import { TextureFormat } from '../base_types';\nimport type { FramebufferCaps, ITextureFormatInfo, MiscCaps, ShaderCaps, TextureCaps } from '../device';\nimport type { WebGPUDevice } from './device';\n\nexport interface ITextureParams {\n  gpuFormat: GPUTextureFormat;\n  stride: number;\n  filterable: boolean;\n  renderable: boolean;\n  repeatable: boolean;\n  compressed: boolean;\n  writable: boolean;\n  generateMipmap: boolean;\n}\n\nexport interface ITextureFormatInfoWebGPU extends ITextureFormatInfo {\n  gpuSampleType: GPUTextureSampleType;\n  filterable: boolean;\n  renderable: boolean;\n  compressed: boolean;\n  writable: boolean;\n  size: number;\n  blockWidth?: number;\n  blockHeight?: number;\n}\n\nexport class WebGPUFramebufferCap implements FramebufferCaps {\n  maxDrawBuffers: number;\n  supportDrawBuffers: boolean;\n  supportRenderMipmap: boolean;\n  constructor(device: WebGPUDevice) {\n    this.maxDrawBuffers = 8;\n    this.supportDrawBuffers = true;\n    this.supportRenderMipmap = true;\n  }\n}\n\nexport class WebGPUMiscCap implements MiscCaps {\n  supportBlendMinMax: boolean;\n  support32BitIndex: boolean;\n  supportLoseContext: boolean;\n  supportDebugRendererInfo: boolean;\n  supportSharedUniforms: boolean;\n  constructor(device: WebGPUDevice) {\n    this.supportBlendMinMax = true;\n    this.support32BitIndex = true;\n    // TODO:\n    this.supportLoseContext = false;\n    this.supportDebugRendererInfo = false;\n    this.supportSharedUniforms = true;\n  }\n}\nexport class WebGPUShaderCap implements ShaderCaps {\n  supportFragmentDepth: boolean;\n  supportStandardDerivatives: boolean;\n  supportShaderTextureLod: boolean;\n  supportHighPrecisionFloat: boolean;\n  supportHighPrecisionInt: boolean;\n  maxUniformBufferSize: number;\n  uniformBufferOffsetAlignment: number;\n  constructor(device: WebGPUDevice) {\n    this.supportFragmentDepth = true;\n    this.supportStandardDerivatives = true;\n    this.supportShaderTextureLod = true;\n    this.supportHighPrecisionFloat = true;\n    this.maxUniformBufferSize = device.device.limits.maxUniformBufferBindingSize || 65536;\n    this.uniformBufferOffsetAlignment = device.device.limits.minUniformBufferOffsetAlignment || 256;\n  }\n}\nexport class WebGPUTextureCap implements TextureCaps {\n  private _textureFormatInfos: { [format: number]: ITextureFormatInfoWebGPU };\n  maxTextureSize: number;\n  maxCubeTextureSize: number;\n  npo2Mipmapping: boolean;\n  npo2Repeating: boolean;\n  supportS3TC: boolean;\n  supportS3TCSRGB: boolean;\n  supportDepthTexture: boolean;\n  support3DTexture: boolean;\n  supportSRGBTexture: boolean;\n  supportFloatTexture: boolean;\n  supportLinearFloatTexture: boolean;\n  supportHalfFloatTexture: boolean;\n  supportLinearHalfFloatTexture: boolean;\n  supportAnisotropicFiltering: boolean;\n  supportFloatColorBuffer: boolean;\n  supportHalfFloatColorBuffer: boolean;\n  supportFloatBlending: boolean;\n  constructor(device: WebGPUDevice) {\n    this._textureFormatInfos = {\n      [TextureFormat.RGBA8UNORM]: {\n        gpuSampleType: 'float',\n        filterable: true,\n        renderable: true,\n        compressed: false,\n        writable: true,\n        size: 4,\n      },\n      [TextureFormat.RGBA8SNORM]: {\n        gpuSampleType: 'float',\n        filterable: true,\n        renderable: false,\n        compressed: false,\n        writable: true,\n        size: 4,\n      },\n      [TextureFormat.BGRA8UNORM]: {\n        gpuSampleType: 'float',\n        filterable: true,\n        renderable: true,\n        compressed: false,\n        writable: false, // TODO: require \"bgra8unorm-storage\" feature\n        size: 4,\n      },\n    };\n    if (this.supportS3TC) {\n      this._textureFormatInfos[TextureFormat.DXT1] = {\n        gpuSampleType: 'float',\n        filterable: true,\n        renderable: false,\n        compressed: true,\n        size: 8,\n        writable: false,\n        blockWidth: 4,\n        blockHeight: 4,\n      };\n      this._textureFormatInfos[TextureFormat.DXT3] = {\n        gpuSampleType: 'float',\n        filterable: true,\n        renderable: false,\n        compressed: true,\n        size: 16,\n        writable: false,\n        blockWidth: 4,\n        blockHeight: 4,\n      };\n      this._textureFormatInfos[TextureFormat.DXT5] = {\n        gpuSampleType: 'float',\n        filterable: true,\n        renderable: false,\n        compressed: true,\n        size: 16,\n        writable: false,\n        blockWidth: 4,\n        blockHeight: 4,\n      };\n    }\n    if (this.supportS3TCSRGB) {\n      this._textureFormatInfos[TextureFormat.DXT1_SRGB] = {\n        gpuSampleType: 'float',\n        filterable: true,\n        renderable: false,\n        compressed: true,\n        size: 8,\n        writable: false,\n        blockWidth: 4,\n        blockHeight: 4,\n      };\n      this._textureFormatInfos[TextureFormat.DXT3_SRGB] = {\n        gpuSampleType: 'float',\n        filterable: true,\n        renderable: false,\n        compressed: true,\n        size: 16,\n        writable: false,\n        blockWidth: 4,\n        blockHeight: 4,\n      };\n      this._textureFormatInfos[TextureFormat.DXT5_SRGB] = {\n        gpuSampleType: 'float',\n        filterable: true,\n        renderable: false,\n        compressed: true,\n        size: 16,\n        writable: false,\n        blockWidth: 4,\n        blockHeight: 4,\n      };\n    }\n    this._textureFormatInfos[TextureFormat.R8UNORM] = {\n      gpuSampleType: 'float',\n      filterable: true,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 1,\n    };\n    this._textureFormatInfos[TextureFormat.R8SNORM] = {\n      gpuSampleType: 'float',\n      filterable: true,\n      renderable: false,\n      compressed: false,\n      writable: false,\n      size: 1,\n    },\n      this._textureFormatInfos[TextureFormat.R16F] = {\n        gpuSampleType: 'float',\n        filterable: true,\n        renderable: true,\n        compressed: false,\n        writable: false,\n        size: 2,\n      };\n    this._textureFormatInfos[TextureFormat.R32F] = {\n      gpuSampleType: 'unfilterable-float',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.R8UI] = {\n      gpuSampleType: 'uint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 1,\n    };\n    this._textureFormatInfos[TextureFormat.R8I] = {\n      gpuSampleType: 'sint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 1,\n    };\n    this._textureFormatInfos[TextureFormat.R16UI] = {\n      gpuSampleType: 'uint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 2,\n    };\n    this._textureFormatInfos[TextureFormat.R16I] = {\n      gpuSampleType: 'sint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 2,\n    };\n    this._textureFormatInfos[TextureFormat.R32UI] = {\n      gpuSampleType: 'uint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.R32I] = {\n      gpuSampleType: 'sint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.RG8UNORM] = {\n      gpuSampleType: 'float',\n      filterable: true,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 2,\n    };\n    this._textureFormatInfos[TextureFormat.RG8SNORM] = {\n      gpuSampleType: 'float',\n      filterable: true,\n      renderable: false,\n      compressed: false,\n      writable: false,\n      size: 2,\n    };\n    this._textureFormatInfos[TextureFormat.RG16F] = {\n      gpuSampleType: 'float',\n      filterable: true,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.RG32F] = {\n      gpuSampleType: 'unfilterable-float',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 8,\n    };\n    this._textureFormatInfos[TextureFormat.RG8UI] = {\n      gpuSampleType: 'uint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 2,\n    };\n    this._textureFormatInfos[TextureFormat.RG8I] = {\n      gpuSampleType: 'sint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 2,\n    };\n    this._textureFormatInfos[TextureFormat.RG16UI] = {\n      gpuSampleType: 'uint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.RG16I] = {\n      gpuSampleType: 'sint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.RG32UI] = {\n      gpuSampleType: 'uint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 8,\n    };\n    this._textureFormatInfos[TextureFormat.RG32I] = {\n      gpuSampleType: 'sint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 8,\n    };\n    this._textureFormatInfos[TextureFormat.RGBA8UNORM_SRGB] = {\n      gpuSampleType: 'float',\n      filterable: true,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.BGRA8UNORM_SRGB] = {\n      gpuSampleType: 'float',\n      filterable: true,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.RGBA16F] = {\n      gpuSampleType: 'float',\n      filterable: true,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 8,\n    };\n    this._textureFormatInfos[TextureFormat.RGBA32F] = {\n      gpuSampleType: 'unfilterable-float',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 16,\n    };\n    this._textureFormatInfos[TextureFormat.RGBA8UI] = {\n      gpuSampleType: 'uint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.RGBA8I] = {\n      gpuSampleType: 'sint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.RGBA16UI] = {\n      gpuSampleType: 'uint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 8,\n    };\n    this._textureFormatInfos[TextureFormat.RGBA16I] = {\n      gpuSampleType: 'sint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 8,\n    };\n    this._textureFormatInfos[TextureFormat.RGBA32UI] = {\n      gpuSampleType: 'uint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 16,\n    };\n    this._textureFormatInfos[TextureFormat.RGBA32I] = {\n      gpuSampleType: 'sint',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: true,\n      size: 16,\n    };\n    this._textureFormatInfos[TextureFormat.D16] = {\n      gpuSampleType: 'depth',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 2,\n    };\n    this._textureFormatInfos[TextureFormat.D24] = {\n      gpuSampleType: 'depth',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.D32F] = {\n      gpuSampleType: 'depth',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 4,\n    };\n    this._textureFormatInfos[TextureFormat.D32FS8] = {\n      gpuSampleType: 'depth',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 8,\n    }\n    this._textureFormatInfos[TextureFormat.D24S8] = {\n      gpuSampleType: 'depth',\n      filterable: false,\n      renderable: true,\n      compressed: false,\n      writable: false,\n      size: 4,\n    };\n    this.supportAnisotropicFiltering = true;\n    this.supportDepthTexture = true;\n    this.support3DTexture = true;\n    this.supportSRGBTexture = true;\n    this.supportFloatTexture = true;\n    this.supportLinearFloatTexture = this._textureFormatInfos[TextureFormat.R32F].filterable && this._textureFormatInfos[TextureFormat.RG32F].filterable && this._textureFormatInfos[TextureFormat.RGBA32F].filterable;\n    this.supportHalfFloatTexture = true;\n    this.supportLinearHalfFloatTexture = this._textureFormatInfos[TextureFormat.R16F].filterable && this._textureFormatInfos[TextureFormat.RG16F].filterable && this._textureFormatInfos[TextureFormat.RGBA16F].filterable;\n    this.supportFloatColorBuffer = true;\n    this.supportHalfFloatColorBuffer = true;\n    this.supportFloatBlending = true;\n    this.supportS3TC = device.device.features.has('texture-compression-bc');\n    this.supportS3TCSRGB = this.supportS3TC;\n\n    this.maxTextureSize = device.device.limits.maxTextureDimension2D;\n    this.maxCubeTextureSize = device.device.limits.maxTextureDimension2D;\n    this.npo2Mipmapping = true;\n    this.npo2Repeating = true;\n  }\n  calcMemoryUsage(format: TextureFormat, numPixels): number {\n    return this._textureFormatInfos[format] ? this._textureFormatInfos[format].size * numPixels : 0;\n  }\n  getTextureFormatInfo(format: TextureFormat): ITextureFormatInfoWebGPU {\n    return this._textureFormatInfos[format];\n  }\n}\n"],"names":[],"mappings":";;;MA0Ba,oBAAoB,CAAA;AAC/B,IAAA,cAAc,CAAS;AACvB,IAAA,kBAAkB,CAAU;AAC5B,IAAA,mBAAmB,CAAU;AAC7B,IAAA,WAAA,CAAY,MAAoB,EAAA;AAC9B,QAAA,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;AACxB,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAC/B,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;KACjC;AACF,CAAA;MAEY,aAAa,CAAA;AACxB,IAAA,kBAAkB,CAAU;AAC5B,IAAA,iBAAiB,CAAU;AAC3B,IAAA,kBAAkB,CAAU;AAC5B,IAAA,wBAAwB,CAAU;AAClC,IAAA,qBAAqB,CAAU;AAC/B,IAAA,WAAA,CAAY,MAAoB,EAAA;AAC9B,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAC/B,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAE9B,QAAA,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAChC,QAAA,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;AACtC,QAAA,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;KACnC;AACF,CAAA;MACY,eAAe,CAAA;AAC1B,IAAA,oBAAoB,CAAU;AAC9B,IAAA,0BAA0B,CAAU;AACpC,IAAA,uBAAuB,CAAU;AACjC,IAAA,yBAAyB,CAAU;AACnC,IAAA,uBAAuB,CAAU;AACjC,IAAA,oBAAoB,CAAS;AAC7B,IAAA,4BAA4B,CAAS;AACrC,IAAA,WAAA,CAAY,MAAoB,EAAA;AAC9B,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;AACjC,QAAA,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;AACvC,QAAA,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;AACpC,QAAA,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;AACtC,QAAA,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,IAAI,KAAK,CAAC;AACtF,QAAA,IAAI,CAAC,4BAA4B,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,+BAA+B,IAAI,GAAG,CAAC;KACjG;AACF,CAAA;MACY,gBAAgB,CAAA;AACnB,IAAA,mBAAmB,CAAiD;AAC5E,IAAA,cAAc,CAAS;AACvB,IAAA,kBAAkB,CAAS;AAC3B,IAAA,cAAc,CAAU;AACxB,IAAA,aAAa,CAAU;AACvB,IAAA,WAAW,CAAU;AACrB,IAAA,eAAe,CAAU;AACzB,IAAA,mBAAmB,CAAU;AAC7B,IAAA,gBAAgB,CAAU;AAC1B,IAAA,kBAAkB,CAAU;AAC5B,IAAA,mBAAmB,CAAU;AAC7B,IAAA,yBAAyB,CAAU;AACnC,IAAA,uBAAuB,CAAU;AACjC,IAAA,6BAA6B,CAAU;AACvC,IAAA,2BAA2B,CAAU;AACrC,IAAA,uBAAuB,CAAU;AACjC,IAAA,2BAA2B,CAAU;AACrC,IAAA,oBAAoB,CAAU;AAC9B,IAAA,WAAA,CAAY,MAAoB,EAAA;QAC9B,IAAI,CAAC,mBAAmB,GAAG;AACzB,YAAA,CAAC,aAAa,CAAC,UAAU,GAAG;AAC1B,gBAAA,aAAa,EAAE,OAAO;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE,CAAC;AACR,aAAA;AACD,YAAA,CAAC,aAAa,CAAC,UAAU,GAAG;AAC1B,gBAAA,aAAa,EAAE,OAAO;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE,CAAC;AACR,aAAA;AACD,YAAA,CAAC,aAAa,CAAC,UAAU,GAAG;AAC1B,gBAAA,aAAa,EAAE,OAAO;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,QAAQ,EAAE,KAAK;AACf,gBAAA,IAAI,EAAE,CAAC;AACR,aAAA;SACF,CAAC;QACF,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,YAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC7C,gBAAA,aAAa,EAAE,OAAO;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,IAAI,EAAE,CAAC;AACP,gBAAA,QAAQ,EAAE,KAAK;AACf,gBAAA,UAAU,EAAE,CAAC;AACb,gBAAA,WAAW,EAAE,CAAC;aACf,CAAC;AACF,YAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC7C,gBAAA,aAAa,EAAE,OAAO;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,IAAI,EAAE,EAAE;AACR,gBAAA,QAAQ,EAAE,KAAK;AACf,gBAAA,UAAU,EAAE,CAAC;AACb,gBAAA,WAAW,EAAE,CAAC;aACf,CAAC;AACF,YAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC7C,gBAAA,aAAa,EAAE,OAAO;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,IAAI,EAAE,EAAE;AACR,gBAAA,QAAQ,EAAE,KAAK;AACf,gBAAA,UAAU,EAAE,CAAC;AACb,gBAAA,WAAW,EAAE,CAAC;aACf,CAAC;AACH,SAAA;QACD,IAAI,IAAI,CAAC,eAAe,EAAE;AACxB,YAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG;AAClD,gBAAA,aAAa,EAAE,OAAO;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,IAAI,EAAE,CAAC;AACP,gBAAA,QAAQ,EAAE,KAAK;AACf,gBAAA,UAAU,EAAE,CAAC;AACb,gBAAA,WAAW,EAAE,CAAC;aACf,CAAC;AACF,YAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG;AAClD,gBAAA,aAAa,EAAE,OAAO;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,IAAI,EAAE,EAAE;AACR,gBAAA,QAAQ,EAAE,KAAK;AACf,gBAAA,UAAU,EAAE,CAAC;AACb,gBAAA,WAAW,EAAE,CAAC;aACf,CAAC;AACF,YAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG;AAClD,gBAAA,aAAa,EAAE,OAAO;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,IAAI,EAAE,EAAE;AACR,gBAAA,QAAQ,EAAE,KAAK;AACf,gBAAA,UAAU,EAAE,CAAC;AACb,gBAAA,WAAW,EAAE,CAAC;aACf,CAAC;AACH,SAAA;AACD,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG;AAChD,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG;AAChD,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;AACR,SAAA;AACC,YAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC7C,gBAAA,aAAa,EAAE,OAAO;AACtB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,UAAU,EAAE,KAAK;AACjB,gBAAA,QAAQ,EAAE,KAAK;AACf,gBAAA,IAAI,EAAE,CAAC;aACR,CAAC;AACJ,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC7C,YAAA,aAAa,EAAE,oBAAoB;AACnC,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC7C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG;AAC5C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG;AAC9C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC7C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG;AAC9C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC7C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG;AACjD,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG;AACjD,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG;AAC9C,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG;AAC9C,YAAA,aAAa,EAAE,oBAAoB;AACnC,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG;AAC9C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC7C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG;AAC/C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG;AAC9C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG;AAC/C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG;AAC9C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG;AACxD,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG;AACxD,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG;AAChD,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG;AAChD,YAAA,aAAa,EAAE,oBAAoB;AACnC,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,EAAE;SACT,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG;AAChD,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG;AAC/C,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG;AACjD,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG;AAChD,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG;AACjD,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,EAAE;SACT,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG;AAChD,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,IAAI,EAAE,EAAE;SACT,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG;AAC5C,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG;AAC5C,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC7C,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG;AAC/C,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAA;AACD,QAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG;AAC9C,YAAA,aAAa,EAAE,OAAO;AACtB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,IAAI,EAAE,CAAC;SACR,CAAC;AACF,QAAA,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;AACxC,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAChC,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC7B,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAC/B,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAChC,QAAA,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC;AACnN,QAAA,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;AACpC,QAAA,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC;AACvN,QAAA,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;AACpC,QAAA,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;AACxC,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;AACjC,QAAA,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;AACxE,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC;QAExC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC;QACjE,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC;AACrE,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC3B,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;IACD,eAAe,CAAC,MAAqB,EAAE,SAAS,EAAA;QAC9C,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,SAAS,GAAG,CAAC,CAAC;KACjG;AACD,IAAA,oBAAoB,CAAC,MAAqB,EAAA;AACxC,QAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;KACzC;AACF;;;;"}