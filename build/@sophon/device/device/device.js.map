{"version":3,"file":"device.js","sources":["../../../../libs/device/src/device/device.ts"],"sourcesContent":["import { REventTarget, REvent, Vector4 } from '@sophon/base';\nimport { PrimitiveType, TextureFormat } from './base_types';\nimport { CPUTimer, ITimer } from './timer';\nimport { AssetManager } from '../scene/asset/assetmanager';\nimport type { TypedArray } from '../misc';\nimport type { RenderStateSet } from './render_states';\nimport type { VertexData } from './vertexdata';\nimport {\n  IFrameBufferOptions,\n  SamplerOptions,\n  TextureSampler,\n  Texture2D,\n  Texture3D,\n  TextureCube,\n  VertexInputLayout,\n  GPUDataBuffer,\n  FrameBuffer,\n  BaseTexture,\n  GPUProgram,\n  GPUObject,\n  StructuredBuffer,\n  BindGroupLayout,\n  BindGroup,\n  IndexBuffer,\n  TextureVideo,\n  TextureMipmapData,\n  TextureImageElement,\n  Texture2DArray,\n  TextureCreationOptions,\n  BufferCreationOptions,\n  GPUResourceUsageFlags,\n  BufferUsage\n} from './gpuobject';\nimport { PBStructTypeInfo, ProgramBuilder } from './builder';\n\ninterface GPUObjectList {\n  textures: BaseTexture[];\n  samplers: TextureSampler[];\n  buffers: GPUDataBuffer[];\n  programs: GPUProgram[];\n  framebuffers: FrameBuffer[];\n  vertexArrayObjects: VertexInputLayout[];\n  bindGroups: BindGroup[];\n}\n\nexport interface EngineCaps {\n  maxVertexAttributes: number;\n  maxBindGroups: number;\n  maxTexCoordIndex: number;\n}\n\nexport interface FramebufferCaps {\n  maxDrawBuffers: number;\n  supportDrawBuffers: boolean;\n  supportRenderMipmap: boolean;\n}\n\nexport interface MiscCaps {\n  supportBlendMinMax: boolean;\n  support32BitIndex: boolean;\n  supportLoseContext: boolean;\n  supportDebugRendererInfo: boolean;\n  supportSharedUniforms: boolean;\n}\n\nexport interface ShaderCaps {\n  supportFragmentDepth: boolean;\n  supportStandardDerivatives: boolean;\n  supportShaderTextureLod: boolean;\n  supportHighPrecisionFloat: boolean;\n  supportHighPrecisionInt: boolean;\n  maxUniformBufferSize: number;\n  uniformBufferOffsetAlignment: number;\n}\n\nexport interface ITextureFormatInfo {\n  filterable: boolean;\n  renderable: boolean;\n  compressed: boolean;\n}\n\nexport interface TextureCaps {\n  maxTextureSize: number;\n  maxCubeTextureSize: number;\n  npo2Mipmapping: boolean;\n  npo2Repeating: boolean;\n  supportS3TC: boolean;\n  supportS3TCSRGB: boolean;\n  supportDepthTexture: boolean;\n  support3DTexture: boolean;\n  supportSRGBTexture: boolean;\n  supportFloatTexture: boolean;\n  supportLinearFloatTexture: boolean;\n  supportHalfFloatTexture: boolean;\n  supportLinearHalfFloatTexture: boolean;\n  supportAnisotropicFiltering: boolean;\n  supportFloatColorBuffer: boolean;\n  supportHalfFloatColorBuffer: boolean;\n  supportFloatBlending: boolean;\n  getTextureFormatInfo(format: TextureFormat): ITextureFormatInfo;\n}\n\nexport type DeviceTypeWebGL = 'webgl' | 'webgl2';\nexport type DeviceTypeWebGPU = 'webgpu';\nexport type DeviceType = DeviceTypeWebGL | DeviceTypeWebGPU;\nexport const DEVICE_TYPE_WEBGL = 'webgl';\nexport const DEVICE_TYPE_WEBGL2 = 'webgl2';\nexport const DEVICE_TYPE_WEBGPU = 'webgpu';\n\nexport interface RenderProgramConstructParams {\n  vs: string;\n  fs: string;\n  bindGroupLayouts: BindGroupLayout[],\n  vertexAttributes: number[],\n}\n\nexport interface ComputeProgramConstructParams {\n  source: string;\n  bindGroupLayouts: BindGroupLayout[],\n}\n\nexport interface GPUProgramConstructParams {\n  type: 'render' | 'compute';\n  label?: string;\n  params: RenderProgramConstructParams | ComputeProgramConstructParams;\n}\n\nexport class DeviceResizeEvent extends REvent {\n  static readonly NAME = 'resize';\n  width: number;\n  height: number;\n  constructor(width: number, height: number) {\n    super(DeviceResizeEvent.NAME, false, false);\n    this.width = width;\n    this.height = height;\n  }\n}\n\nexport class DeviceFrameBegin extends REvent {\n  static readonly NAME = 'framebegin';\n  device: Device;\n  constructor(device: Device) {\n    super(DeviceFrameBegin.NAME, false, false);\n    this.device = device;\n  }\n}\n\nexport class DeviceFrameEnd extends REvent {\n  static readonly NAME = 'frameend';\n  device: Device;\n  constructor(device: Device) {\n    super(DeviceFrameEnd.NAME, false, false);\n    this.device = device;\n  }\n}\n\nexport interface FrameInfo {\n  frameCounter: number;\n  frameTimestamp: number;\n  elapsedTimeCPU: number;\n  elapsedTimeGPU: number;\n  elapsedFrame: number;\n  elapsedOverall: number;\n  FPS: number;\n  drawCalls: number;\n  computeCalls: number;\n  nextFrameCall: (() => void)[];\n}\n\nexport class DeviceGPUObjectAddedEvent extends REvent {\n  static readonly NAME = 'gpuobject_added';\n  object: GPUObject;\n  constructor(obj: GPUObject) {\n    super(DeviceGPUObjectAddedEvent.NAME, false, false);\n    this.object = obj;\n  }\n}\n\nexport class DeviceGPUObjectRemovedEvent extends REvent {\n  static readonly NAME = 'gpuobject_removed';\n  object: GPUObject;\n  constructor(obj: GPUObject) {\n    super(DeviceGPUObjectRemovedEvent.NAME, false, false);\n    this.object = obj;\n  }\n}\n\nexport class DeviceGPUObjectRenameEvent extends REvent {\n  static readonly NAME = 'gpuobject_rename';\n  object: GPUObject;\n  lastName: string;\n  constructor(obj: GPUObject, lastName: string) {\n    super(DeviceGPUObjectRenameEvent.NAME, false, false);\n    this.object = obj;\n    this.lastName = lastName;\n  }\n}\n\nexport class DeviceLostEvent extends REvent {\n  static readonly NAME = 'device_lost';\n  constructor() {\n    super(DeviceLostEvent.NAME, false, false);\n  }\n}\n\nexport class DeviceRestoreEvent extends REvent {\n  static readonly NAME = 'device_restored';\n  constructor() {\n    super(DeviceRestoreEvent.NAME, false, false);\n  }\n}\n\nexport interface DeviceOptions {\n  msaa?: boolean;\n  dpr?: number;\n}\n\nexport abstract class Device extends REventTarget {\n  /** @internal */\n  protected _gpuObjectList: GPUObjectList;\n  protected _gpuMemCost: number;\n  protected _disposeObjectList: GPUObject[];\n  protected _beginFrameTime: number;\n  protected _endFrameTime: number;\n  protected _frameInfo: FrameInfo;\n  protected _cpuTimer: CPUTimer;\n  protected _gpuTimer: ITimer;\n  protected _runningLoop: number;\n  protected _frameBeginEvent: DeviceFrameBegin;\n  protected _frameEndEvent: DeviceFrameEnd;\n  protected _fpsCounter: { time: number, frame: number };\n  protected _runLoopFunc: (device: Device) => void;\n  constructor() {\n    super();\n    this._gpuObjectList = {\n      textures: [],\n      samplers: [],\n      buffers: [],\n      programs: [],\n      framebuffers: [],\n      vertexArrayObjects: [],\n      bindGroups: []\n    };\n    this._gpuMemCost = 0;\n    this._disposeObjectList = [];\n    this._beginFrameTime = 0;\n    this._endFrameTime = 0;\n    this._runLoopFunc = null;\n    this._frameInfo = {\n      frameCounter: 0,\n      frameTimestamp: 0,\n      elapsedTimeCPU: 0,\n      elapsedTimeGPU: 0,\n      elapsedFrame: 0,\n      elapsedOverall: 0,\n      FPS: 0,\n      drawCalls: 0,\n      computeCalls: 0,\n      nextFrameCall: []\n    };\n    this._cpuTimer = new CPUTimer();\n    this._gpuTimer = null;\n    this._runningLoop = null;\n    this._fpsCounter = { time: 0, frame: 0 };\n    this._frameBeginEvent = new DeviceFrameBegin(this);\n    this._frameEndEvent = new DeviceFrameEnd(this);\n  }\n  abstract getDeviceType(): DeviceType;\n  abstract getCanvas(): HTMLCanvasElement;\n  abstract isContextLost(): boolean;\n  abstract getScale(): number;\n  abstract getDrawingBufferWidth(): number;\n  abstract getDrawingBufferHeight(): number;\n  abstract getBackBufferWidth(): number;\n  abstract getBackBufferHeight(): number;\n  abstract getTextureCaps(): TextureCaps;\n  abstract getFramebufferCaps(): FramebufferCaps;\n  abstract getMiscCaps(): MiscCaps;\n  abstract getShaderCaps(): ShaderCaps;\n  abstract initContext(): Promise<void>;\n  abstract clearFrameBuffer(clearColor: Vector4, clearDepth: number, clearStencil: number);\n  abstract createGPUTimer(): ITimer;\n  abstract createRenderStateSet(): RenderStateSet;\n  abstract createSampler(options: SamplerOptions): TextureSampler;\n  abstract createTexture2D(format: TextureFormat, width: number, height: number, options?: TextureCreationOptions): Texture2D;\n  abstract createTexture2DFromMipmapData(data: TextureMipmapData, options?: TextureCreationOptions): Texture2D;\n  abstract createTexture2DFromImage(element: TextureImageElement, options?: TextureCreationOptions): Texture2D;\n  abstract createTexture2DArray(format: TextureFormat, width: number, height: number, depth: number, options?: TextureCreationOptions): Texture2DArray;\n  abstract createTexture3D(format: TextureFormat, width: number, height: number, depth: number, options?: TextureCreationOptions): Texture3D;\n  abstract createCubeTexture(format: TextureFormat, size: number, options?: TextureCreationOptions): TextureCube;\n  abstract createCubeTextureFromMipmapData(data: TextureMipmapData, options?: TextureCreationOptions): TextureCube;\n  abstract createTextureVideo(el: HTMLVideoElement): TextureVideo;\n  abstract reverseVertexWindingOrder(reverse: boolean): void;\n  abstract isWindingOrderReversed(): boolean;\n  abstract setRenderStatesOverridden(renderStates: RenderStateSet);\n  // program\n  abstract createGPUProgram(params: GPUProgramConstructParams): GPUProgram;\n  abstract createBindGroup(layout: BindGroupLayout): BindGroup;\n  abstract createBuffer(sizeInBytes: number, options: BufferCreationOptions): GPUDataBuffer;\n  abstract createIndexBuffer(data: Uint16Array | Uint32Array, options?: BufferCreationOptions): IndexBuffer;\n  abstract createStructuredBuffer(structureType: PBStructTypeInfo, options: BufferCreationOptions, data?: TypedArray): StructuredBuffer;\n  abstract createVAO(vertexData: VertexData): VertexInputLayout;\n  abstract createFrameBuffer(options?: IFrameBufferOptions): FrameBuffer;\n  // render related\n  abstract setViewport(vp?: number[]): number[];\n  abstract setViewport(x: number, y: number, w: number, h: number): void;\n  abstract getViewport(): number[];\n  abstract setScissor(scissor?: number[]): number[];\n  abstract setScissor(x: number, y: number, w: number, h: number): void;\n  abstract getScissor(): number[]\n  abstract setProgram(program: GPUProgram): void;\n  abstract getProgram(): GPUProgram;\n  abstract setVertexData(vertexData: VertexInputLayout): void;\n  abstract getVertexData(): VertexInputLayout;\n  abstract setRenderStates(renderStates: RenderStateSet): void;\n  abstract getRenderStates(): RenderStateSet;\n  abstract setFramebuffer(rt: FrameBuffer): void;\n  abstract getFramebuffer(): FrameBuffer;\n  abstract setBindGroup(index: number, bindGroup: BindGroup, dynamicOffsets?: Iterable<number>);\n  abstract flush(): void;\n  // misc\n  abstract readPixels(x: number, y: number, w: number, h: number, buffer: TypedArray): Promise<void>;\n  abstract readPixelsToBuffer(x: number, y: number, w: number, h: number, buffer: GPUDataBuffer): void;\n  abstract looseContext(): void;\n  abstract restoreContext(): void;\n  // draw\n  protected abstract _draw(primitiveType: PrimitiveType, first: number, count: number): void;\n  protected abstract _drawInstanced(primitiveType: PrimitiveType, first: number, count: number, numInstances: number): void;\n  protected abstract _compute(workgroupCountX, workgroupCountY, workgroupCountZ): void;\n\n  get videoMemoryUsage(): number {\n    return this._gpuMemCost;\n  }\n  get frameInfo(): FrameInfo {\n    return this._frameInfo;\n  }\n  get isRendering(): boolean {\n    return this._runningLoop !== null;\n  }\n  getEngineCaps(): EngineCaps {\n    return {\n      maxBindGroups: 4,\n      maxTexCoordIndex: 8,\n      maxVertexAttributes: 16\n    };\n  }\n  disposeObject(obj: GPUObject, remove = true) {\n    if (obj) {\n      if (remove) {\n        this.removeGPUObject(obj);\n      }\n      if (!obj.disposed) {\n        if (this.isContextLost()) {\n          obj.destroy();\n        } else {\n          this._disposeObjectList.push(obj);\n        }\n      }\n    }\n  }\n  async restoreObject(obj: GPUObject) {\n    if (obj && obj.disposed && !this.isContextLost()) {\n      await obj.restore();\n      if (obj.restoreHandler) {\n        await obj.restoreHandler(obj);\n      }\n    }\n  }\n  enableGPUTimeRecording(enable: boolean) {\n    if (enable && !this._gpuTimer) {\n      this._gpuTimer = this.createGPUTimer();\n    } else if (!enable) {\n      this._gpuTimer?.end();\n      this._gpuTimer = null;\n    }\n  }\n  beginFrame(): boolean {\n    for (const obj of this._disposeObjectList) {\n      obj.destroy();\n    }\n    this._disposeObjectList = [];\n    this._beginFrameTime = this._cpuTimer.now();\n    this.updateFrameInfo();\n    this._frameBeginEvent.reset();\n    this.dispatchEvent(this._frameBeginEvent);\n    return this.onBeginFrame();\n  }\n  endFrame(): void {\n    this._endFrameTime = this._cpuTimer.now();\n    this._frameEndEvent.reset();\n    this.dispatchEvent(this._frameEndEvent);\n    this.onEndFrame();\n  }\n  draw(primitiveType: PrimitiveType, first: number, count: number): void {\n    this._frameInfo.drawCalls++;\n    this._draw(primitiveType, first, count);\n  }\n  drawInstanced(primitiveType: PrimitiveType, first: number, count: number, numInstances: number): void {\n    this._frameInfo.drawCalls++;\n    this._drawInstanced(primitiveType, first, count, numInstances);\n  }\n  compute(workgroupCountX, workgroupCountY, workgroupCountZ): void {\n    this._frameInfo.computeCalls++;\n    this._compute(workgroupCountX, workgroupCountY, workgroupCountZ);\n  }\n  runNextFrame(f: () => void) {\n    if (f) {\n      this._frameInfo.nextFrameCall.push(f);\n    }\n  }\n  cancelNextFrameCall(f: () => void) {\n    const index = this._frameInfo.nextFrameCall.indexOf(f);\n    if (index >= 0) {\n      this._frameInfo.nextFrameCall.splice(index, 1);\n    }\n  }\n  exitLoop() {\n    if (this._runningLoop) {\n      cancelAnimationFrame(this._runningLoop);\n      this._runningLoop = null;\n    }\n  }\n  runLoop(func: (device: Device) => void) {\n    if (this._runningLoop !== null) {\n      console.error('Device.runLoop() can not be nested');\n      return;\n    }\n    if (!func) {\n      console.error('Device.runLoop() argment error');\n      return;\n    }\n    const that = this;\n    that._runLoopFunc = func;\n    (function entry() {\n      that._runningLoop = requestAnimationFrame(entry);\n      if (that.beginFrame()) {\n        that._runLoopFunc(that);\n        that.endFrame();\n      }\n    }());\n  }\n  getGPUObjects(): GPUObjectList {\n    return this._gpuObjectList;\n  }\n  getGPUObjectById(uid: number): GPUObject {\n    for (const list of [\n      this._gpuObjectList.textures,\n      this._gpuObjectList.samplers,\n      this._gpuObjectList.buffers,\n      this._gpuObjectList.framebuffers,\n      this._gpuObjectList.programs,\n      this._gpuObjectList.vertexArrayObjects\n    ]) {\n      for (const obj of list) {\n        if (obj.uid === uid) {\n          return obj;\n        }\n      }\n    }\n    return null;\n  }\n  screenToDevice(val: number): number {\n    return this.getFramebuffer() ? val : Math.round(val * this.getScale());\n  }\n  deviceToScreen(val: number): number {\n    return this.getFramebuffer() ? val : Math.round(val / this.getScale());\n  }\n  createAssetManager(): AssetManager {\n    return new AssetManager(this);\n  }\n  createProgramBuilder(): ProgramBuilder {\n    return new ProgramBuilder(this);\n  }\n  /** @internal */\n  addGPUObject(obj: GPUObject) {\n    const list = this.getGPUObjectList(obj);\n    if (list && list.indexOf(obj) < 0) {\n      list.push(obj);\n      this.dispatchEvent(new DeviceGPUObjectAddedEvent(obj));\n    }\n  }\n  /** @internal */\n  removeGPUObject(obj: GPUObject) {\n    const list = this.getGPUObjectList(obj);\n    if (list) {\n      const index = list.indexOf(obj);\n      if (index >= 0) {\n        list.splice(index, 1);\n        this.dispatchEvent(new DeviceGPUObjectRemovedEvent(obj));\n      }\n    }\n  }\n  /** @internal */\n  updateVideoMemoryCost(delta: number) {\n    this._gpuMemCost += delta;\n  }\n  /** @internal */\n  protected abstract onBeginFrame(): boolean;\n  /** @internal */\n  protected abstract onEndFrame(): void;\n  /** @internal */\n  private updateFrameInfo() {\n    this._frameInfo.frameCounter++;\n    this._frameInfo.drawCalls = 0;\n    this._frameInfo.computeCalls = 0;\n    const now = this._beginFrameTime;\n    if (this._frameInfo.frameTimestamp === 0) {\n      this._frameInfo.frameTimestamp = now;\n      this._frameInfo.elapsedTimeCPU = 0;\n      this._frameInfo.elapsedTimeGPU = 0;\n      this._frameInfo.elapsedFrame = 0;\n      this._frameInfo.elapsedOverall = 0;\n      this._frameInfo.FPS = 0;\n      this._fpsCounter.time = now;\n      this._fpsCounter.frame = this._frameInfo.frameCounter;\n      if (this._gpuTimer) {\n        this._gpuTimer.begin();\n      }\n    } else {\n      this._frameInfo.elapsedFrame = now - this._frameInfo.frameTimestamp;\n      this._frameInfo.elapsedOverall += this._frameInfo.elapsedFrame;\n      if (this._endFrameTime !== 0) {\n        this._frameInfo.elapsedTimeGPU = now - this._endFrameTime;\n        this._frameInfo.elapsedTimeCPU = this._endFrameTime - this._frameInfo.frameTimestamp;\n      }\n      this._frameInfo.frameTimestamp = now;\n      if (now >= this._fpsCounter.time + 1000) {\n        this._frameInfo.FPS = (this._frameInfo.frameCounter - this._fpsCounter.frame) * 1000 / (now - this._fpsCounter.time);\n        this._fpsCounter.time = now;\n        this._fpsCounter.frame = this._frameInfo.frameCounter;\n      }\n    }\n    for (const f of this._frameInfo.nextFrameCall) {\n      f();\n    }\n    this._frameInfo.nextFrameCall.length = 0;\n  }\n  /** @internal */\n  private getGPUObjectList(obj: GPUObject): GPUObject[] {\n    let list: GPUObject[] = null;\n    if (obj.isTexture()) {\n      list = this._gpuObjectList.textures;\n    } else if (obj.isSampler()) {\n      list = this._gpuObjectList.samplers;\n    } else if (obj.isBuffer()) {\n      list = this._gpuObjectList.buffers;\n    } else if (obj.isFramebuffer()) {\n      list = this._gpuObjectList.framebuffers;\n    } else if (obj.isProgram()) {\n      list = this._gpuObjectList.programs;\n    } else if (obj.isVAO()) {\n      list = this._gpuObjectList.vertexArrayObjects;\n    } else if (obj.isBindGroup()) {\n      list = this._gpuObjectList.bindGroups;\n    }\n    return list;\n  }\n  /** @internal */\n  protected invalidateAll() {\n    for (const list of [\n      this._gpuObjectList.buffers,\n      this._gpuObjectList.textures,\n      this._gpuObjectList.samplers,\n      this._gpuObjectList.programs,\n      this._gpuObjectList.framebuffers,\n      this._gpuObjectList.vertexArrayObjects,\n      this._gpuObjectList.bindGroups\n    ]) {\n      for (const obj of list) {\n        this.disposeObject(obj, false);\n      }\n    }\n    if (this.isContextLost()) {\n      for (const obj of this._disposeObjectList) {\n        obj.destroy();\n      }\n      this._disposeObjectList = [];\n    }\n  }\n  /** @internal */\n  protected async reloadAll() {\n    const promises: Promise<void>[] = [];\n    for (const list of [\n      this._gpuObjectList.buffers,\n      this._gpuObjectList.textures,\n      this._gpuObjectList.samplers,\n      this._gpuObjectList.programs,\n      this._gpuObjectList.framebuffers,\n      this._gpuObjectList.vertexArrayObjects,\n      this._gpuObjectList.bindGroups\n    ]) {\n      // obj.reload() may change the list, so make a copy first\n      for (const obj of list.slice()) {\n        promises.push(obj.reload());\n      }\n    }\n    return Promise.all(promises);\n  }\n  /** @internal */\n  protected parseTextureOptions(options?: TextureCreationOptions): number {\n    const colorSpace = options?.colorSpace ?? 'srgb';\n    console.assert(colorSpace === 'srgb' || colorSpace === 'linear', `invalid texture color space: ${colorSpace}`);\n    const colorSpaceFlag = colorSpace === 'srgb' ? 0 : GPUResourceUsageFlags.TF_LINEAR_COLOR_SPACE;\n    const noMipmapFlag = !!options?.noMipmap ? GPUResourceUsageFlags.TF_NO_MIPMAP : 0;\n    const writableFlag = !!options?.writable ? GPUResourceUsageFlags.TF_WRITABLE : 0;\n    const dynamicFlag = !!options?.dynamic ? GPUResourceUsageFlags.DYNAMIC : 0;\n    const managedFlag = !!options?.managed ? GPUResourceUsageFlags.MANAGED : 0;\n    return colorSpaceFlag|noMipmapFlag|writableFlag|dynamicFlag|managedFlag;\n  }\n  /** @internal */\n  protected parseBufferOptions(options: BufferCreationOptions, defaultUsage?: BufferUsage): number {\n    const usage = options?.usage || defaultUsage;\n    let usageFlag: number;\n    switch(usage) {\n      case 'uniform':\n        usageFlag = GPUResourceUsageFlags.BF_UNIFORM;\n        break;\n      case 'vertex':\n        usageFlag = GPUResourceUsageFlags.BF_VERTEX;\n        break;\n      case 'index': \n        usageFlag = GPUResourceUsageFlags.BF_INDEX; \n        break;\n      case 'read':\n        usageFlag = GPUResourceUsageFlags.BF_READ;\n        break;\n      case 'write':\n        usageFlag = GPUResourceUsageFlags.BF_WRITE;\n        break;\n      default:\n        usageFlag = 0;\n        break;\n    }\n    const storageFlag = !!options?.storage ? GPUResourceUsageFlags.BF_STORAGE : 0;\n    const dynamicFlag = !!options?.dynamic ? GPUResourceUsageFlags.DYNAMIC : 0;\n    const managedFlag = !!options?.managed ? GPUResourceUsageFlags.MANAGED : 0;\n    return usageFlag|storageFlag|dynamicFlag|managedFlag;\n  }\n}\n"],"names":[],"mappings":"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"}