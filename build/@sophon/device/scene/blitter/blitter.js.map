{"version":3,"file":"blitter.js","sources":["../../../../../libs/device/src/scene/blitter/blitter.ts"],"sourcesContent":["import { CubeFace } from \"@sophon/base\";\nimport { PrimitiveType } from '../../device/base_types'\nimport { RenderStateSet, FaceMode } from '../../device/render_states';\nimport { makeVertexBufferType } from '../../device/gpuobject';\nimport { Primitive } from \"../primitive\";\nimport { BoxShape } from \"../shape\";\nimport type { Device } from '../../device/device';\nimport type { BaseTexture, BindGroup, FrameBuffer, GPUProgram, Texture2D, Texture2DArray, TextureCube, TextureSampler } from '../../device/gpuobject';\nimport type { PBGlobalScope, PBInsideFunctionScope, PBShaderExp } from \"../../device/builder\";\n\n// TODO: multi-pass support for filter\n\nexport type BlitType = '2d' | '2d-array' | 'cube';\nexport type BlitProgramInfo = { program: GPUProgram, bindGroup: BindGroup };\n\nexport abstract class Blitter {\n  /** @internal */\n  protected _hash: string;\n  constructor() {\n    this._hash = null;\n  }\n  get hash(): string {\n    if (!this._hash) {\n      this._hash = `${this.constructor.name}:${this.calcHash()}`;\n    }\n    return this._hash;\n  }\n  invalidateHash(): void {\n    this._hash = null;\n  }\n  readTexel(scope: PBInsideFunctionScope, type: BlitType, srcTex: PBShaderExp, srcUV: PBShaderExp, srcLayer: PBShaderExp): PBShaderExp {\n    const pb = scope.$builder;\n    switch (type) {\n      case '2d':\n      case 'cube':\n        return pb.device?.getShaderCaps().supportShaderTextureLod ? pb.textureSampleLevel(srcTex, srcUV, 0) : pb.textureSample(srcTex, srcUV);\n      case '2d-array':\n        return pb.textureArraySampleLevel(srcTex, srcUV, srcLayer, 0);\n      default:\n        return null;\n    }\n  }\n  writeTexel(scope: PBInsideFunctionScope, type: BlitType, srcUV: PBShaderExp, texel: PBShaderExp): PBShaderExp {\n    return texel;\n  }\n  setup(scope: PBGlobalScope, type: BlitType) {\n  }\n  setUniforms(bindGroup: BindGroup) {\n  }\n  abstract filter(scope: PBInsideFunctionScope, type: BlitType, srcTex: PBShaderExp, srcUV: PBShaderExp, srcLayer: PBShaderExp): PBShaderExp;\n  /** @internal */\n  protected abstract calcHash(): string;\n  /** @internal */\n  protected blit2D(source: Texture2D, dest: FrameBuffer, sampler?: TextureSampler): void {\n    const device = source.device;\n    const programInfo = getBlitProgram(device, '2d', this);\n    programInfo.bindGroup.setTexture('srcTex', source, sampler);\n    this.setUniforms(programInfo.bindGroup);\n    device.setFramebuffer(dest);\n    device.setViewport(null);\n    device.setScissor(null);\n    device.setProgram(programInfo.program);\n    device.setBindGroup(0, programInfo.bindGroup);\n    device.setBindGroup(1, null);\n    device.setBindGroup(2, null);\n    device.setBindGroup(3, null);\n    device.setRenderStates(getBlitRenderStateSet(device));\n    getBlitPrimitive2D(device).draw();\n  }\n  /** @internal */\n  protected blit2DArray(source: Texture2DArray, dest: FrameBuffer, layer: number, sampler?: TextureSampler): void {\n    const device = source.device;\n    const programInfo = getBlitProgram(device, '2d-array', this);\n    programInfo.bindGroup.setTexture('srcTex', source, sampler);\n    programInfo.bindGroup.setValue('srcLayer', layer);\n    this.setUniforms(programInfo.bindGroup);\n    device.setFramebuffer(dest);\n    device.setViewport(null);\n    device.setScissor(null);\n    device.setProgram(programInfo.program);\n    device.setBindGroup(0, programInfo.bindGroup);\n    device.setBindGroup(1, null);\n    device.setBindGroup(2, null);\n    device.setBindGroup(3, null);\n    device.setRenderStates(getBlitRenderStateSet(device));\n    getBlitPrimitive2D(device).draw();\n  }\n  /** @internal */\n  protected blitCubeMap(source: TextureCube, dest: FrameBuffer, face: CubeFace, sampler?: TextureSampler): void {\n    const device = source.device;\n    const programInfo = getBlitProgram(device, 'cube', this);\n    programInfo.bindGroup.setTexture('srcTex', source, sampler);\n    programInfo.bindGroup.setValue('texelSize', 1 / source.width);\n    programInfo.bindGroup.setValue('cubeFace', face);\n    this.setUniforms(programInfo.bindGroup);\n    device.setFramebuffer(dest);\n    device.setViewport(null);\n    device.setScissor(null);\n    device.setProgram(programInfo.program);\n    device.setBindGroup(0, programInfo.bindGroup);\n    device.setBindGroup(1, null);\n    device.setBindGroup(2, null);\n    device.setBindGroup(3, null);\n    device.setRenderStates(getBlitRenderStateSet(device));\n    getBlitPrimitive2D(device).draw();\n  }\n  blit(source: Texture2D, dest: Texture2D | FrameBuffer, sampler?: TextureSampler): void;\n  blit(source: Texture2D, dest: Texture2DArray, layer: number, sampler?: TextureSampler): void;\n  blit(source: Texture2DArray, dest: Texture2DArray, sampler?: TextureSampler): void;\n  blit(source: Texture2DArray, dest: Texture2D | FrameBuffer, layer: number, sampler?: TextureSampler): void;\n  blit(source: TextureCube, dest: TextureCube, sampler?: TextureSampler): void;\n  blit(source: TextureCube, dest: Texture2D | FrameBuffer, layer: number, sampler?: TextureSampler): void;\n  blit(source: BaseTexture, dest: BaseTexture | FrameBuffer, layer?: number | TextureSampler, sampler?: TextureSampler): void {\n    const device = source.device;\n    const saveFramebuffer = device.getFramebuffer();\n    const saveViewport = device.getViewport();\n    const saveScissor = device.getScissor();\n    const saveRenderStates = device.getRenderStates();\n    const framebuffer = dest.isFramebuffer() ? dest : device.createFrameBuffer({\n      colorAttachments: [{ texture: dest }]\n    });\n    const destTexture = dest.isFramebuffer() ? dest.getColorAttachments()?.[0] : dest;\n    if (source.isTexture2D()) {\n      if (!destTexture?.isTexture2D() && !destTexture?.isTexture2DArray()) {\n        throw new Error('Blitter.blit() failed: invalid destination texture type');\n      }\n      if (destTexture.isTexture2DArray()) {\n        framebuffer.setTextureLayer(0, (layer as number) || 0);\n      }\n      this.blit2D(source, framebuffer, sampler);\n    } else if (source.isTexture2DArray()) {\n      if (!destTexture?.isTexture2D() && !destTexture.isTexture2DArray()) {\n        throw new Error('Blitter.blit() failed: invalid destination texture type');\n      }\n      if (destTexture.isTexture2D()) {\n        this.blit2DArray(source, framebuffer, (layer as number) || 0, sampler);\n      } else {\n        if (destTexture.depth !== source.depth) {\n          throw new Error('Blitter.blit() failed: can not blit between texture 2d arrays with different array size');\n        } else {\n          for (let i = 0; i < source.depth; i++) {\n            framebuffer.setTextureLayer(0, i);\n            this.blit2DArray(source, framebuffer, i, layer as TextureSampler);\n          }\n        }\n      }\n    } else if (source.isTextureCube()) {\n      if (!destTexture.isTextureCube() && !destTexture.isTexture2D()) {\n        throw new Error('Blitter.blit() failed: invalid destination texture type');\n      }\n      if (destTexture.isTextureCube()) {\n        for (let i = 0; i < 6; i++) {\n          framebuffer.setCubeTextureFace(0, i);\n          this.blitCubeMap(source, framebuffer, i, layer as TextureSampler);\n        }\n      } else {\n        this.blitCubeMap(source, framebuffer, (layer as number) || 0, sampler);\n      }\n    } else {\n      throw new Error('Blitter.blit() failed: invalid texture type');\n    }\n    device.setFramebuffer(saveFramebuffer);\n    device.setViewport(saveViewport);\n    device.setScissor(saveScissor);\n    device.setRenderStates(saveRenderStates);\n    if (!dest.isFramebuffer()) {\n      framebuffer.dispose();\n    }\n  }\n}\n\nconst blitProgramCache: {\n  [hash: string]: BlitProgramInfo,\n} = {};\n\nlet blitPrimitive2D: Primitive = null;\nlet blitPrimitiveCube: Primitive = null;\nlet blitRenderStates: RenderStateSet = null;\n\nfunction getBlitPrimitive2D(device: Device): Primitive {\n  if (!blitPrimitive2D) {\n    blitPrimitive2D = new Primitive(device);\n    const vb = device.createStructuredBuffer(makeVertexBufferType(4, 'position_f32x2'), { usage: 'vertex', managed: true }, new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]));\n    blitPrimitive2D.setVertexBuffer(vb);\n    blitPrimitive2D.indexCount = 4;\n    blitPrimitive2D.indexStart = 0;\n    blitPrimitive2D.primitiveType = PrimitiveType.TriangleStrip;\n  }\n  return blitPrimitive2D;\n}\n\nfunction getBlitPrimitiveCube(device: Device): Primitive {\n  if (!blitPrimitiveCube) {\n    blitPrimitiveCube = new BoxShape(device, {\n      needNormal: false,\n      needTangent: false,\n      needUV: false,\n      size: 2,\n      pivotX: 0.5,\n      pivotY: 0.5,\n      pivotZ: 0.5\n    });\n  }\n  return blitPrimitiveCube;\n}\n\nfunction getBlitRenderStateSet(device: Device): RenderStateSet {\n  if (!blitRenderStates) {\n    blitRenderStates = device.createRenderStateSet();\n    blitRenderStates.useDepthState().enableTest(false).enableWrite(false);\n    blitRenderStates.useRasterizerState().setCullMode(FaceMode.NONE);\n  }\n  return blitRenderStates;\n}\n\nfunction getBlitProgram(device: Device, type: BlitType, filter: Blitter): BlitProgramInfo {\n  const hash = `${type}:${filter.hash}`;\n  let programInfo = blitProgramCache[hash];\n  if (programInfo === undefined) {\n    programInfo = createBlitProgram(device, type, filter) || null;\n    blitProgramCache[hash] = programInfo;\n  }\n  return programInfo;\n}\n\nfunction createBlitProgram(device: Device, type: BlitType, filter: Blitter): BlitProgramInfo {\n  const pb = device.createProgramBuilder();\n  const program = pb.buildRenderProgram({\n    vertex() {\n      this.$inputs.pos = pb.vec2().attrib('position');\n      this.$outputs.uv = pb.vec2();\n      filter.setup(this, type);\n      this.$mainFunc(function () {\n        this.$builtins.position = pb.vec4(this.$inputs.pos, 0, 1);\n        this.$outputs.uv = type === 'cube' ? pb.mul(pb.vec2(1, -1), this.$inputs.pos.xy) : pb.add(pb.mul(this.$inputs.pos.xy, 0.5), pb.vec2(0.5));\n        if (device.getDeviceType() === 'webgpu') {\n          this.$builtins.position.y = pb.neg(this.$builtins.position.y);\n        }\n      });\n    },\n    fragment() {\n      switch (type) {\n        case '2d':\n          this.srcTex = pb.tex2D().uniform(0);\n          break;\n        case '2d-array':\n          this.srcTex = pb.tex2DArray().uniform(0);\n          this.srcLayer = pb.int().uniform(0);\n          break;\n        case 'cube':\n          this.srcTex = pb.texCube().uniform(0);\n          this.texelSize = pb.float().uniform(0);\n          this.cubeFace = pb.int().uniform(0);\n          break;\n        default:\n          throw new Error(`invalid blit type: ${type}`);\n      }\n      this.$outputs.outColor = pb.vec4();\n      filter.setup(this, type);\n      this.$mainFunc(function () {\n        if (type === 'cube') {\n          this.uv = pb.vec3();\n          this.$if(pb.equal(this.cubeFace, 0), function () {\n            this.uv = pb.vec3(1, this.$inputs.uv.y, pb.neg(this.$inputs.uv.x));\n          }).$elseif(pb.equal(this.cubeFace, 1), function () {\n            this.uv = pb.vec3(-1, this.$inputs.uv.y, this.$inputs.uv.x);\n          }).$elseif(pb.equal(this.cubeFace, 2), function () {\n            this.uv = pb.vec3(this.$inputs.uv.x, 1, pb.neg(this.$inputs.uv.y));\n          }).$elseif(pb.equal(this.cubeFace, 3), function () {\n            this.uv = pb.vec3(this.$inputs.uv.x, -1, this.$inputs.uv.y);\n          }).$elseif(pb.equal(this.cubeFace, 4), function () {\n            this.uv = pb.vec3(this.$inputs.uv.x, this.$inputs.uv.y, 1);\n          }).$else(function () {\n            this.uv = pb.vec3(pb.neg(this.$inputs.uv.x), this.$inputs.uv.y, -1);\n          });\n        } else {\n          this.uv = this.$inputs.uv;\n        }\n        this.$l.outTexel = filter.filter(this, type, this.srcTex, this.uv, type === '2d' ? null : this.srcLayer);\n        this.$outputs.outColor = filter.writeTexel(this, type, this.$inputs.uv, this.outTexel);\n      });\n    }\n  });\n  return program ? {\n    program,\n    bindGroup: device.createBindGroup(program.bindGroupLayouts[0]),\n  } : null;\n}\n\n"],"names":[],"mappings":"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"}