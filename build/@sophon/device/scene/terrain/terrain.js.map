{"version":3,"file":"terrain.js","sources":["../../../../../libs/device/src/scene/terrain/terrain.ts"],"sourcesContent":["import { REvent, Vector3 } from \"@sophon/base\";\r\nimport { Quadtree } from \"./quadtree\";\r\nimport { FaceMode, GPUObject, PBStructTypeInfo, RenderStateSet, StructuredBuffer, Texture2D, TextureFormat } from \"../../device\";\r\nimport { MAX_DETAIL_TEXTURE_LEVELS, TerrainMaterial } from \"./terrainmaterial\";\r\nimport { Drawable, DrawContext } from \"../drawable\";\r\nimport { GraphNode } from \"../graph_node\";\r\nimport { MATERIAL_FUNC_DEPTH_SHADOW } from \"../values\";\r\nimport type { Camera } from \"../camera\";\r\nimport type { TerrainPatch } from \"./patch\";\r\nimport type { BoundingVolume } from \"../bounding_volume\";\r\nimport type { Scene } from \"../scene\";\r\nimport type { SceneNode } from \"../scene_node\";\r\nimport type { CullVisitor } from \"../visitors\";\r\n\r\nexport class Terrain extends GraphNode implements Drawable {\r\n  private _quadtree: Quadtree;\r\n  private _maxPixelError: number;\r\n  private _maxPixelErrorDirty: boolean;\r\n  private _detailPatches: TerrainPatch[];\r\n  private _nondetailPatches: TerrainPatch[];\r\n  private _lodCamera: Camera;\r\n  private _scale: Vector3;\r\n  private _patchSize: number;\r\n  private _detailLodLevel: number;\r\n  private _lastViewportH: number;\r\n  private _lastTanHalfFOVY: number;\r\n  private _width: number;\r\n  private _height: number;\r\n  private _material: TerrainMaterial;\r\n  private _terrainInfoBuffer: StructuredBuffer;\r\n  private _maxDetailTextureLevels: number;\r\n  private _overridenStateSet: RenderStateSet;\r\n  private _wireframe: boolean;\r\n  private _viewPoint: Vector3;\r\n  private _castShadow: boolean;\r\n  private _updateFunc: (evt: REvent) => void;\r\n  constructor(scene: Scene, parent?: SceneNode) {\r\n    super(scene, null);\r\n    this._quadtree = null;\r\n    this._maxPixelError = 10;\r\n    this._maxPixelErrorDirty = true;\r\n    this._lodCamera = null;\r\n    this._detailPatches = [];\r\n    this._nondetailPatches = [];\r\n    this._scale = Vector3.one();\r\n    this._patchSize = 33;\r\n    this._detailLodLevel = 0;\r\n    this._lastViewportH = 0;\r\n    this._lastTanHalfFOVY = 0;\r\n    this._width = 0;\r\n    this._height = 0;\r\n    this._material = null;\r\n    this._maxDetailTextureLevels = MAX_DETAIL_TEXTURE_LEVELS;\r\n    this._wireframe = false;\r\n    this._viewPoint = null;\r\n    this._castShadow = false;\r\n    this._overridenStateSet = scene.device.createRenderStateSet();\r\n    this._overridenStateSet.useRasterizerState().setCullMode(FaceMode.NONE);\r\n    this._updateFunc = (evt: REvent) => this.frameUpdate((evt as Scene.TickEvent).camera);\r\n    this.addEventListener('attached', () => {\r\n      scene.addEventListener('tick', this._updateFunc);\r\n    });\r\n    this.addEventListener('detached', () => {\r\n      scene.removeEventListener('tick', this._updateFunc);\r\n    });\r\n    this.parent = parent || scene.rootNode;\r\n  }\r\n  get castShadow(): boolean {\r\n    return this._castShadow;\r\n  }\r\n  set castShadow(val: boolean) {\r\n    this._castShadow = !!val;\r\n  }\r\n  get maxDetailTextureLevels(): number {\r\n    return this._maxDetailTextureLevels;\r\n  }\r\n  get maxPixelError(): number {\r\n    return this._maxPixelError;\r\n  }\r\n  set maxPixelError(val: number) {\r\n    if (val !== this._maxPixelError) {\r\n      this._maxPixelError = val;\r\n      this._maxPixelErrorDirty = true;\r\n    }\r\n  }\r\n  get LODCamera(): Camera {\r\n    return this._lodCamera;\r\n  }\r\n  set LODCamera(camera: Camera) {\r\n    this._lodCamera = camera;\r\n  }\r\n  get scale(): Vector3 {\r\n    return this._scale;\r\n  }\r\n  get patchSize(): number {\r\n    return this._patchSize;\r\n  }\r\n  get width(): number {\r\n    return this._width;\r\n  }\r\n  get height(): number {\r\n    return this._height;\r\n  }\r\n  get detailLODLevel(): number {\r\n    return this._detailLodLevel;\r\n  }\r\n  get material(): TerrainMaterial {\r\n    return this._material;\r\n  }\r\n  get wireframe(): boolean {\r\n    return this._wireframe;\r\n  }\r\n  set wireframe(b: boolean) {\r\n    this._wireframe = !!b;\r\n  }\r\n  get normalMap(): Texture2D {\r\n    return this._quadtree.normalMap;\r\n  }\r\n  create(sizeX: number, sizeZ: number, elevations: Float32Array, scale: Vector3, patchSize: number): boolean {\r\n    this._quadtree = new Quadtree(this);\r\n    this._material = new TerrainMaterial(this._scene.device);\r\n    if (!this._quadtree.build(this._scene, patchSize, sizeX, sizeZ, elevations, scale.x, scale.z, 24)) {\r\n      this._quadtree = null;\r\n      return false;\r\n    }\r\n    this._patchSize = patchSize;\r\n    this._width = sizeX;\r\n    this._height = sizeZ;\r\n    this._material.normalMap = this._quadtree.normalMap;\r\n    this._terrainInfoBuffer = null;\r\n    this.invalidateBoundingVolume();\r\n    return true;\r\n  }\r\n  computeBoundingVolume(bv: BoundingVolume): BoundingVolume {\r\n    return this._quadtree ? this._quadtree.getHeightField().getBBoxTree().getRootNode().bbox : null;\r\n  }\r\n  frameUpdate(camera: Camera) {\r\n    const viewportH = this.scene.device.getViewport()[3];\r\n    const tanHalfFovy = camera.getTanHalfFovy();\r\n    if (viewportH !== this._lastViewportH || tanHalfFovy !== this._lastTanHalfFOVY || this._maxPixelErrorDirty) {\r\n      this._maxPixelErrorDirty = false;\r\n      this._lastViewportH = viewportH;\r\n      this._lastTanHalfFOVY = tanHalfFovy;\r\n      this._quadtree.setupCamera(viewportH, tanHalfFovy, this._maxPixelError);\r\n    }\r\n    const worldEyePos = camera.worldMatrix.getRow(3).xyz();\r\n    this._viewPoint = this.invWorldMatrix.transformPointAffine(worldEyePos);\r\n  }\r\n  cull(cullVisitor: CullVisitor): boolean {\r\n    this.clearPatches();\r\n    this._quadtree.cull(cullVisitor.camera, this._viewPoint, this.worldMatrix);\r\n    return this._detailPatches.length > 0;\r\n  }\r\n  // Drawable interfaces\r\n  isTransparency(): boolean {\r\n    return false;\r\n  }\r\n  isUnlit(): boolean {\r\n    return !this.material?.supportLighting();\r\n  }\r\n  isTerrain(): this is Terrain {\r\n    return true;\r\n  }\r\n  draw(ctx: DrawContext) {\r\n    if (!this._terrainInfoBuffer) {\r\n      const program = this._material.getOrCreateProgram(ctx).programs[ctx.materialFunc];\r\n      this._terrainInfoBuffer = this.scene.device.createStructuredBuffer(program.getBindingInfo('terrainInfo').type as PBStructTypeInfo, { usage: 'uniform' });\r\n      const bbox = this.getBoundingVolume().toAABB();\r\n      const terrainSizeX = bbox.extents.x * 2;\r\n      const terrainSizeZ = bbox.extents.z * 2;\r\n      this._terrainInfoBuffer.bufferSubData(0, new Int32Array([terrainSizeX, terrainSizeZ, 0, 0]))\r\n      this._terrainInfoBuffer.restoreHandler = async (obj: GPUObject) => {\r\n        this._terrainInfoBuffer.bufferSubData(0, new Int32Array([terrainSizeX, terrainSizeZ, 0, 0]))\r\n      };\r\n    }\r\n    if (ctx.materialFunc === MATERIAL_FUNC_DEPTH_SHADOW) {\r\n      this.scene.device.setRenderStatesOverridden(this._overridenStateSet);\r\n    }\r\n    if (this._material.beginDraw(ctx)) {\r\n      const bindGroup = this._material.getMaterialBindGroup();\r\n      bindGroup.setBuffer('terrainInfo', this._terrainInfoBuffer);\r\n      for (const patch of this._detailPatches) {\r\n        bindGroup.setBuffer('scaleOffset', patch.getOffsetScale(this, ctx));\r\n        (this._wireframe ? patch.getGeometryWireframe() : patch.getGeometry()).draw();\r\n      }\r\n      this._material.endDraw();\r\n    }\r\n    if (ctx.materialFunc === MATERIAL_FUNC_DEPTH_SHADOW) {\r\n      this.scene.device.setRenderStatesOverridden(null);\r\n    }\r\n  }\r\n  getPatches(): TerrainPatch[] {\r\n    return this._quadtree?.getPatches() || [];\r\n  }\r\n  /** @internal */\r\n  addPatch(patch: TerrainPatch, detail: boolean) {\r\n    if (detail) {\r\n      this._detailPatches.push(patch);\r\n    } else {\r\n      this._nondetailPatches.push(patch);\r\n    }\r\n  }\r\n  /** @internal */\r\n  clearPatches() {\r\n    this._detailPatches.length = 0;\r\n    this._nondetailPatches.length = 0;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}