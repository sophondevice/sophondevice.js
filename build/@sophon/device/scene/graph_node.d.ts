import { ListIterator, Frustum, Matrix4x4 } from '@sophon/base';
import { SceneNode } from './scene_node';
import type { XForm } from './xform';
import type { Texture2D } from '../device/gpuobject';
import type { BatchDrawable, Drawable } from './drawable';
import type { Scene } from './scene';
import type { Camera } from './camera';
export declare class GraphNode extends SceneNode {
    static readonly ORDER_INHERITED = -1;
    static readonly ORDER_BACKGROUND = 0;
    static readonly ORDER_DEFAULT = 32;
    static readonly CLIP_INHERITED = -1;
    static readonly CLIP_DISABLED = 0;
    static readonly CLIP_ENABLED = 1;
    static readonly SHOW_INHERITED = -1;
    static readonly SHOW_HIDE = 0;
    static readonly SHOW_DEFAULT = 1;
    static readonly PICK_INHERITED = -1;
    static readonly PICK_DISABLED = 0;
    static readonly PICK_ENABLED = 1;
    static readonly BBOXDRAW_INHERITED = -1;
    static readonly BBOXDRAW_DISABLED = 0;
    static readonly BBOXDRAW_LOCAL = 1;
    static readonly BBOXDRAW_WORLD = 2;
    constructor(scene: Scene, parent?: SceneNode);
    get computedRenderOrder(): any;
    get renderOrder(): number;
    set renderOrder(val: number);
    get computedClipMode(): number;
    get clipMode(): number;
    set clipMode(val: number);
    get computedShowState(): number;
    get showState(): number;
    set showState(val: number);
    get computedPickMode(): number;
    get pickMode(): number;
    set pickMode(val: number);
    get computedBoundingBoxDrawMode(): number;
    get boundingBoxDrawMode(): number;
    set boundingBoxDrawMode(mode: number);
    isGraphNode(): this is GraphNode;
    outsideFrustum(frustum: Frustum | Matrix4x4): boolean;
    getXForm(): XForm;
    getBoneMatrices(): Texture2D;
    getInvBindMatrix(): Matrix4x4;
    getSortDistance(camera: Camera): number;
    setLastRenderTimestamp(ts: number): void;
    getLastRenderTimeStamp(): number;
    setLRUIterator(iter: ListIterator<Drawable>): void;
    getLRUIterator(): ListIterator<Drawable>;
    isBatchable(): this is BatchDrawable;
}
