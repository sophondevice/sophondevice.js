{"version":3,"file":"fps.js","sources":["../../../../../libs/device/src/scene/cameralib/fps.ts"],"sourcesContent":["import { Vector3, Quaternion, Matrix3x3, Matrix4x4 } from '@sophon/base';\nimport { BaseCameraModel } from './base';\nimport type { AbstractCameraModel, IMouseEvent, IKeyEvent } from '../camera';\nexport interface IFPSCameraModelOptions {\n  controlKeys?: {\n    up: string;\n    down: string;\n    forward: string;\n    backward: string;\n    left: string;\n    right: string;\n  };\n  moveSpeed?: number;\n  rotateSpeed?: number;\n}\n\nexport class FPSCameraModel extends BaseCameraModel implements AbstractCameraModel {\n  /** @internal */\n  private options: IFPSCameraModelOptions;\n  /** @internal */\n  private mouseDown: boolean;\n  /** @internal */\n  private lastMouseX: number;\n  /** @internal */\n  private lastMouseY: number;\n  /** @internal */\n  private keyUp: boolean;\n  /** @internal */\n  private keyDown: boolean;\n  /** @internal */\n  private keyLeft: boolean;\n  /** @internal */\n  private keyRight: boolean;\n  /** @internal */\n  private keyForward: boolean;\n  /** @internal */\n  private keyBackward: boolean;\n  constructor(options?: IFPSCameraModelOptions) {\n    super();\n    this.options = Object.assign(\n      {\n        controlKeys: {\n          up: 'KeyQ',\n          down: 'KeyE',\n          forward: 'KeyW',\n          backward: 'KeyS',\n          left: 'KeyA',\n          right: 'KeyD',\n        },\n        moveSpeed: 0.2,\n        rotateSpeed: 0.01,\n      },\n      options || {},\n    );\n  }\n  reset() {\n    this.mouseDown = false;\n    this.lastMouseX = 0;\n    this.lastMouseY = 0;\n    this.keyUp = false;\n    this.keyDown = false;\n    this.keyLeft = false;\n    this.keyRight = false;\n    this.keyForward = false;\n    this.keyBackward = false;\n  }\n  /** @internal */\n  protected _onMouseDown(evt: IMouseEvent) {\n    if (evt.button === 0) {\n      this.mouseDown = true;\n      this.lastMouseX = evt.offsetX;\n      this.lastMouseY = evt.offsetY;\n    }\n  }\n  /** @internal */\n  protected _onMouseUp(evt: IMouseEvent) {\n    if (evt.button === 0) {\n      this.mouseDown = false;\n    }\n  }\n  /** @internal */\n  protected _onMouseWheel() {\n    void 0;\n  }\n  /** @internal */\n  protected _onMouseMove(evt: IMouseEvent) {\n    if (this.mouseDown) {\n      const dx = evt.offsetX - this.lastMouseX;\n      const dy = evt.offsetY - this.lastMouseY;\n      this.lastMouseX = evt.offsetX;\n      this.lastMouseY = evt.offsetY;\n      const zAxis = this._getCamera().worldMatrix.getRow(2).xyz();\n      const alpha = Math.atan2(zAxis.z, zAxis.x) + dx * this.options.rotateSpeed;\n      const beta = Math.min(\n        Math.PI / 2.1,\n        Math.max(-Math.PI / 2.1, Math.asin(zAxis.y) + dy * this.options.rotateSpeed),\n      );\n      const newY = Math.sin(beta);\n      const r = Math.sqrt(Math.max(0, 1 - newY * newY));\n      const newZ = Math.sin(alpha) * r;\n      const newX = Math.cos(alpha) * r;\n      zAxis.set(newX, newY, newZ).inplaceNormalize();\n      const XAxis = Vector3.cross(Vector3.axisPY(), zAxis).inplaceNormalize();\n      const YAxis = Vector3.cross(zAxis, XAxis).inplaceNormalize();\n      const rotation = Quaternion.fromRotationMatrix(\n        new Matrix3x3([\n          XAxis.x,\n          XAxis.y,\n          XAxis.z,\n          YAxis.x,\n          YAxis.y,\n          YAxis.z,\n          zAxis.x,\n          zAxis.y,\n          zAxis.z,\n        ]),\n      );\n      if (!this._getCamera().parent) {\n        this._getCamera().rotation = rotation;\n      } else {\n        const pos = new Vector3();\n        const scale = new Vector3();\n        this._getCamera().worldMatrix.decompose(scale, null, pos);\n        const newWorldMatrix = Matrix4x4.scaling(scale).rotateLeft(rotation).translateLeft(pos);\n        const newLocalMatrix = this._getCamera().parent ? newWorldMatrix.multiplyLeftAffine(Matrix4x4.inverseAffine(this._getCamera().parent.worldMatrix)) : newWorldMatrix;\n        newLocalMatrix.decompose(scale, rotation, pos);\n        this._getCamera().position = pos;\n        this._getCamera().scaling = scale;\n        this._getCamera().rotation = rotation;\n      }\n    }\n  }\n  /** @internal */\n  protected _onKeyDown(evt: IKeyEvent) {\n    switch (evt.code) {\n      case this.options.controlKeys.up:\n        this.keyUp = true;\n        break;\n      case this.options.controlKeys.down:\n        this.keyDown = true;\n        break;\n      case this.options.controlKeys.left:\n        this.keyLeft = true;\n        break;\n      case this.options.controlKeys.right:\n        this.keyRight = true;\n        break;\n      case this.options.controlKeys.forward:\n        this.keyForward = true;\n        break;\n      case this.options.controlKeys.backward:\n        this.keyBackward = true;\n        break;\n    }\n  }\n  /** @internal */\n  protected _onKeyUp(evt: IKeyEvent) {\n    switch (evt.code) {\n      case this.options.controlKeys.up:\n        this.keyUp = false;\n        break;\n      case this.options.controlKeys.down:\n        this.keyDown = false;\n        break;\n      case this.options.controlKeys.left:\n        this.keyLeft = false;\n        break;\n      case this.options.controlKeys.right:\n        this.keyRight = false;\n        break;\n      case this.options.controlKeys.forward:\n        this.keyForward = false;\n        break;\n      case this.options.controlKeys.backward:\n        this.keyBackward = false;\n        break;\n    }\n  }\n  setOptions(opt?: IFPSCameraModelOptions) {\n    opt && Object.assign(this.options, opt);\n    this.reset();\n  }\n  update() {\n    const x = this._getCamera().worldMatrix.getRow(0).xyz().setY(0).inplaceNormalize();\n    if (x.isNaN()) {\n      console.log(`Camera error 1: ${x.toString()}`);\n    }\n    const z = this._getCamera().worldMatrix.getRow(2).xyz().inplaceNormalize();\n    if (z.isNaN()) {\n      console.log(`Camera error 2: ${z.toString()}`);\n    }\n    const move = new Vector3(0, 0, 0);\n    let changed = false;\n    if (this.keyForward) {\n      changed = true;\n      move.subBy(Vector3.scale(z, this.options.moveSpeed));\n    }\n    if (this.keyBackward) {\n      changed = true;\n      move.addBy(Vector3.scale(z, this.options.moveSpeed));\n    }\n    if (this.keyUp) {\n      changed = true;\n      move.y += this.options.moveSpeed;\n    }\n    if (this.keyDown) {\n      changed = true;\n      move.y -= this.options.moveSpeed;\n    }\n    if (this.keyLeft) {\n      changed = true;\n      move.subBy(Vector3.scale(x, this.options.moveSpeed));\n    }\n    if (this.keyRight) {\n      changed = true;\n      move.addBy(Vector3.scale(x, this.options.moveSpeed));\n    }\n    if (changed) {\n      if (this._getCamera().parent) {\n        const pos = new Vector3();\n        const scale = new Vector3();\n        const rotation = new Quaternion();\n        this._getCamera().worldMatrix.decompose(scale, rotation, pos);\n        pos.addBy(move);\n        const newWorldMatrix = Matrix4x4.scaling(scale).rotateLeft(rotation).translateLeft(pos);\n        const newLocalMatrix = newWorldMatrix.multiplyLeftAffine(Matrix4x4.inverseAffine(this._getCamera().parent.worldMatrix));\n        newLocalMatrix.decompose(scale, rotation, pos);\n        if (scale.isNaN() || rotation.isNaN() || pos.isNaN()) {\n          console.log(`Camera error 3: ${scale.toString()} ${rotation.toString()} ${pos.toString()}`);\n        }\n        this._getCamera().position = pos;\n        this._getCamera().scaling = scale;\n        this._getCamera().rotation = rotation;\n      } else {\n        this._getCamera().position.addBy(move);\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}