{"version":3,"file":"render_queue.js","sources":["../../../../libs/device/src/scene/render_queue.ts"],"sourcesContent":["import type { Matrix4x4 } from '@sophon/base';\r\nimport type { Device } from '../device';\r\nimport type { Camera } from './camera';\r\nimport type { Drawable } from './drawable';\r\nimport type { RenderPass } from './renderers';\r\n\r\nexport interface InstanceData {\r\n  worldMatrices: Matrix4x4[];\r\n  hash: string,\r\n}\r\n\r\nexport interface IRenderQueueItem {\r\n  drawable: Drawable,\r\n  sortDistance: number,\r\n  instanceData: InstanceData,\r\n}\r\n\r\ninterface RenderItemList {\r\n  opaqueList: IRenderQueueItem[];\r\n  opaqueInstanceList: { [hash: string]: number };\r\n  transList: IRenderQueueItem[];\r\n  transInstanceList: { [hash: string]: number };\r\n}\r\n\r\nexport class RenderQueue {\r\n  /** @internal */\r\n  private _itemLists: { [order: number]: RenderItemList };\r\n  /** @internal */\r\n  private _renderPass: RenderPass;\r\n  constructor(renderPass: RenderPass) {\r\n    this._itemLists = {};\r\n    this._renderPass = renderPass;\r\n  }\r\n  get renderPass(): RenderPass {\r\n    return this._renderPass;\r\n  }\r\n  get items() {\r\n    return this._itemLists;\r\n  }\r\n  getMaxBatchSize(device: Device) {\r\n    return device.getShaderCaps().maxUniformBufferSize / 64;\r\n  }\r\n  push(camera: Camera, drawable: Drawable, renderOrder: number) {\r\n    if (drawable) {\r\n      let itemList = this._itemLists[renderOrder];\r\n      if (!itemList) {\r\n        itemList = {\r\n          opaqueList: [],\r\n          opaqueInstanceList: {},\r\n          transList: [],\r\n          transInstanceList: {},\r\n        };\r\n        this._itemLists[renderOrder] = itemList;\r\n      }\r\n      const trans = drawable.isTransparency();\r\n      const list = trans ? itemList.transList : itemList.opaqueList;\r\n      if (drawable.isBatchable()) {\r\n        const instanceList = trans ? itemList.transInstanceList : itemList.opaqueInstanceList;\r\n        const hash = drawable.getInstanceId(this._renderPass);\r\n        const index = instanceList[hash];\r\n        if (index === undefined || list[index].instanceData.worldMatrices.length === this.getMaxBatchSize(camera.scene.device)) {\r\n          instanceList[hash] = list.length;\r\n          list.push({\r\n            drawable,\r\n            sortDistance: drawable.getSortDistance(camera),\r\n            instanceData: {\r\n              worldMatrices: [drawable.getXForm().worldMatrix],\r\n              hash: hash,\r\n            }\r\n          });\r\n        } else {\r\n          list[index].instanceData.worldMatrices.push(drawable.getXForm().worldMatrix);\r\n        }\r\n      } else {\r\n        list.push({\r\n          drawable,\r\n          sortDistance: drawable.getSortDistance(camera),\r\n          instanceData: null,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  clear() {\r\n    this._itemLists = {};\r\n  }\r\n  sortItems() {\r\n    for (const list of Object.values(this._itemLists)) {\r\n      list.opaqueList.sort((a, b) => a.sortDistance - b.sortDistance);\r\n      list.transList.sort((a, b) => b.sortDistance - a.sortDistance);\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}