{"version":3,"file":"shadowmapper.js","sources":["../../../../../libs/device/src/scene/shadow/shadowmapper.ts"],"sourcesContent":["import { Matrix4x4, Vector3, Vector4, AABB } from \"@sophon/base\";\nimport { PBShaderExp, RenderStateSet, FrameBuffer, Texture2D, Texture2DArray, TextureCube, FaceMode, TextureFormat, TextureTarget, PBInsideFunctionScope, TextureSampler, TextureCreationOptions } from \"../../device\";\nimport { Camera } from \"../camera\";\nimport { ShaderLib } from \"../materiallib\";\nimport { SSM } from \"./ssm\";\nimport { ESM } from \"./esm\";\nimport { VSM } from \"./vsm\";\nimport { PCFPD } from \"./pcf_pd\";\nimport { PCFOPT } from './pcf_opt';\nimport type { PointLight, PunctualLight, SpotLight } from \"../light\";\nimport type { ShadowMapPass } from \"../renderers\";\nimport type { Scene } from \"../scene\";\nimport type { ShadowImpl } from \"./shadow_impl\";\n\nexport type ShadowMapType = Texture2D | TextureCube | Texture2DArray;\n\nexport type ShadowMode = 'none' | 'hard' | 'vsm' | 'esm' | 'pcf-pd' | 'pcf-opt';\n\nexport interface ShadowConfig {\n  shadowMapSize: number;\n  numCascades?: number;\n  splitLambda?: number;\n  depthBias?: number;\n  normalBias?: number;\n  renderBackfaceOnly?: boolean;\n  nearClip?: number;\n}\n\nexport class ShadowMapper {\n  /** @internal */\n  private static _sceneMin: Vector3 = new Vector3();\n  /** @internal */\n  private static _sceneMax: Vector3 = new Vector3();\n  /** @internal */\n  private static _frustumMin: Vector3 = new Vector3();\n  /** @internal */\n  private static _frustumMax: Vector3 = new Vector3();\n  /** @internal */\n  protected _lightCameras: WeakMap<Scene, Camera[]>;\n  /** @internal */\n  protected _light: PunctualLight;\n  /** @internal */\n  protected _config: ShadowConfig;\n  /** @internal */\n  protected _colorAttachment: ShadowMapType;\n  /** @internal */\n  protected _depthAttachment: Texture2D | Texture2DArray;\n  /** @internal */\n  protected _framebuffer: FrameBuffer;\n  /** @internal */\n  protected _cascadeDistances: Vector4;\n  /** @internal */\n  protected _shadowCameraParams: Vector4;\n  /** @internal */\n  protected _shadowMatrices: Float32Array;\n  /** @internal */\n  protected _resourceDirty: boolean;\n  /** @internal */\n  protected _depthClampEnabled: boolean;\n  /** @internal */\n  protected _cullFrontFaceRenderStates: RenderStateSet;\n  /** @internal */\n  protected _depthBias: Vector4[];\n  /** @internal */\n  protected _depthBiasScale: Vector4;\n  /** @internal */\n  protected _shadowMode: ShadowMode;\n  /** @internal */\n  protected _impl: ShadowImpl;\n  /** @internal */\n  protected _pdSampleCount: number;\n  /** @internal */\n  protected _pdSampleRadius: number;\n  /** @internal */\n  protected _pcfKernelSize: number;\n  /** @internal */\n  protected _vsmBlurKernelSize: number;\n  /** @internal */\n  protected _vsmBlurRadius: number;\n  /** @internal */\n  protected _vsmDarkness: number;\n  /** @internal */\n  protected _esmBlurKernelSize: number;\n  /** @internal */\n  protected _esmBlurRadius: number;\n  /** @internal */\n  protected _esmDepthScale: number;\n  constructor(light: PunctualLight) {\n    this._light = light;\n    this._config = {\n      shadowMapSize: 512,\n      numCascades: 1,\n      splitLambda: 0.5,\n      depthBias: 0.05,\n      normalBias: 0.05,\n      renderBackfaceOnly: false,\n      nearClip: 1,\n    }\n    this._colorAttachment = null;\n    this._depthAttachment = null;\n    this._framebuffer = null;\n    this._cascadeDistances = Vector4.zero();\n    this._shadowCameraParams = Vector4.zero();\n    this._shadowMatrices = new Float32Array(16 * 4);\n    this._resourceDirty = true;\n    this._depthClampEnabled = false;\n    this._lightCameras = new WeakMap();\n    this._cullFrontFaceRenderStates = this._light.scene.device.createRenderStateSet();\n    this._cullFrontFaceRenderStates.useRasterizerState().setCullMode(FaceMode.FRONT);\n    this._depthBias = [new Vector4(), new Vector4(), new Vector4(), new Vector4()];\n    this._depthBiasScale = Vector4.one();\n    this._shadowMode = 'none';\n    this._impl = null;\n    this._pdSampleCount = 12;\n    this._pdSampleRadius = 4;\n    this._pcfKernelSize = 5;\n    this._vsmBlurKernelSize = 5;\n    this._vsmBlurRadius = 4;\n    this._vsmDarkness = 0.3;\n    this._esmBlurKernelSize = 5;\n    this._esmBlurRadius = 4;\n    this._esmDepthScale = 200;\n    this.mode = 'hard';\n  }\n  get light(): PunctualLight {\n    return this._light;\n  }\n  get shadowMapSize(): number {\n    return this._config.shadowMapSize;\n  }\n  set shadowMapSize(num: number) {\n    if (!Number.isInteger(num) || num < 1) {\n      console.error(`invalid shadow map size: ${num}`);\n      return;\n    }\n    if (this._config.shadowMapSize !== num) {\n      this._config.shadowMapSize = num;\n      this._resourceDirty = true;\n    }\n  }\n  get numShadowCascades(): number {\n    return this._config.numCascades;\n  }\n  set numShadowCascades(num: number) {\n    if (num !== 1 && num !== 2 && num !== 3 && num !== 4) {\n      console.error(`invalid shadow cascade number: ${num}`);\n      return;\n    }\n    if (!this._light.isDirectionLight() && num > 1) {\n      console.error(`only directional light can have more than one shadow cascades`);\n      return;\n    }\n    if (num !== this._config.numCascades) {\n      this._config.numCascades = num;\n      this._resourceDirty = true;\n    }\n  }\n  get renderBackfaceOnly(): boolean {\n    return this._config.renderBackfaceOnly;\n  }\n  set renderBackfaceOnly(b: boolean) {\n    this._config.renderBackfaceOnly = !!b;\n  }\n  get splitLambda(): number {\n    return this._config.splitLambda;\n  }\n  set splitLambda(val: number) {\n    this._config.splitLambda = val;\n  }\n  get depthBias(): number {\n    return this._config.depthBias;\n  }\n  set depthBias(val: number) {\n    this._config.depthBias = val;\n  }\n  get normalBias(): number {\n    return this._config.normalBias;\n  }\n  set normalBias(val: number) {\n    this._config.normalBias = val;\n  }\n  get nearClip(): number {\n    return this._config.nearClip;\n  }\n  set nearClip(val: number) {\n    this._config.nearClip = val;\n  }\n  get mode(): ShadowMode {\n    return this._shadowMode;\n  }\n  set mode(mode: ShadowMode) {\n    if (mode !== this._shadowMode) {\n      if (mode !== 'none' && mode !== 'hard' && mode !== 'vsm' && mode !== 'esm' && mode !== 'pcf-pd' && mode !== 'pcf-opt') {\n        console.error(`ShadowMapper.setShadowMode() failed: invalid mode: ${mode}`);\n      }\n      this._shadowMode = mode;\n      this._resourceDirty = true;\n      this._impl?.dispose();\n      this._impl = null;\n      if (this._shadowMode === 'hard') {\n        this._impl = new SSM();\n      } else if (this._shadowMode === 'vsm') {\n        this._impl = new VSM(this._vsmBlurKernelSize, this._vsmBlurRadius, this._vsmDarkness);\n      } else if (this._shadowMode === 'esm') {\n        this._impl = new ESM(this._esmBlurKernelSize, this._esmBlurRadius, this._esmDepthScale);\n      } else if (this._shadowMode === 'pcf-pd') {\n        this._impl = new PCFPD(this._pdSampleCount, this._pdSampleRadius);\n      } else if (this._shadowMode === 'pcf-opt') {\n        this._impl = new PCFOPT(this._pcfKernelSize);\n      }\n    }\n  }\n  get depthClampEnabled(): boolean {\n    return this._depthClampEnabled;\n  }\n  get cascadeDistances(): Vector4 {\n    return this._cascadeDistances;\n  }\n  get shadowCameraParams(): Vector4 {\n    return this._shadowCameraParams;\n  }\n  get shadowMap(): Texture2D | TextureCube | Texture2DArray {\n    return this._impl.getShadowMap(this) || this._colorAttachment;\n  }\n  get shadowMapSampler(): TextureSampler {\n    return this._impl.getShadowMapSampler(this);\n  }\n  get shaderHash(): string {\n    return `${this._impl.constructor.name}_${this._impl.getShaderHash()}_${this.light.lightType}_${this.shadowMap.target}_${Number(this.numShadowCascades > 1)}_${Number(this.shadowMap.device.getTextureCaps().getTextureFormatInfo(this.shadowMap.format).filterable)}`;\n  }\n  get pdSampleCount(): number {\n    return this._pdSampleCount;\n  }\n  set pdSampleCount(val: number) {\n    val = Math.min(Math.max(1, Number(val) >> 0), 64);\n    if (val !== this._pdSampleCount) {\n      this._pdSampleCount = val;\n      this.asPCFPD() && (this.asPCFPD().tapCount = this._pdSampleCount);\n    }\n  }\n  get pdSampleRadius(): number {\n    return this._pdSampleRadius;\n  }\n  set pdSampleRadius(val: number) {\n    val = Math.max(0, Number(val) >> 0);\n    if (val !== this._pdSampleRadius) {\n      this._pdSampleRadius = val;\n      this.asPCFPD()?.setDepthScale(this._pdSampleRadius);\n    }\n  }\n  get pcfKernelSize(): number {\n    return this._pcfKernelSize;\n  }\n  set pcfKernelSize(val: number) {\n    val = (val !== 3 && val !== 5 && val !== 7) ? 5 : val;\n    if (val !== this._pcfKernelSize) {\n      this._pcfKernelSize = val;\n      this.asPCFOPT() && (this.asPCFOPT().kernelSize = this._pcfKernelSize);\n    }\n  }\n  get vsmBlurKernelSize(): number {\n    return this._vsmBlurKernelSize;\n  }\n  set vsmBlurKernelSize(val: number) {\n    val = Math.max(3, Number(val) >> 0) | 1;\n    if (val !== this._vsmBlurKernelSize) {\n      this._vsmBlurKernelSize = val;\n      this.asVSM() && (this.asVSM().kernelSize = this._vsmBlurKernelSize);\n    }\n  }\n  get vsmBlurRadius(): number {\n    return this._vsmBlurRadius;\n  }\n  set vsmBlurRadius(val: number) {\n    val = Math.max(0, Number(val) || 0);\n    if (val !== this._vsmBlurRadius) {\n      this._vsmBlurRadius = val;\n      this.asVSM() && (this.asVSM().blurSize = this._vsmBlurRadius);\n    }\n  }\n  get vsmDarkness(): number {\n    return this._vsmDarkness;\n  }\n  set vsmDarkness(val: number) {\n    val = Math.min(0.999, Math.max(0, Number(val) || 0));\n    if (val !== this._vsmDarkness) {\n      this._vsmDarkness = val;\n      this.asVSM()?.setDepthScale(this._vsmDarkness);\n    }\n  }\n  get esmBlurKernelSize(): number {\n    return this._esmBlurKernelSize;\n  }\n  set esmBlurKernelSize(val: number) {\n    val = Math.max(3, Number(val) >> 0) | 1;\n    if (val !== this._esmBlurKernelSize) {\n      this._esmBlurKernelSize = val;\n      this.asESM() && (this.asESM().kernelSize = this._esmBlurKernelSize);\n    }\n  }\n  get esmBlurRadius(): number {\n    return this._esmBlurRadius;\n  }\n  set esmBlurRadius(val: number) {\n    val = Math.max(0, Number(val) || 0);\n    if (val !== this._esmBlurRadius) {\n      this._esmBlurRadius = val;\n      this.asESM() && (this.asESM().blurSize = this._esmBlurRadius);\n    }\n  }\n  get esmDepthScale(): number {\n    return this._esmDepthScale;\n  }\n  set esmDepthScale(val: number) {\n    val = Math.max(0, Number(val) || 0);\n    if (val !== this._esmDepthScale) {\n      this._esmDepthScale = val;\n      this.asESM()?.setDepthScale(this._esmDepthScale);\n    }\n  }\n  computeShadowMapDepth(scope: PBInsideFunctionScope): PBShaderExp {\n    return this._impl.computeShadowMapDepth(this, scope);\n  }\n  computeShadow(scope: PBInsideFunctionScope, shadowVertex: PBShaderExp, NdotL: PBShaderExp): PBShaderExp {\n    return this._impl.computeShadow(this, scope, shadowVertex, NdotL)\n  }\n  computeShadowCSM(scope: PBInsideFunctionScope, shadowVertex: PBShaderExp, NdotL: PBShaderExp, split: PBShaderExp): PBShaderExp {\n    return this._impl.computeShadowCSM(this, scope, shadowVertex, NdotL, split);\n  }\n  computeShadowBias(scope: PBInsideFunctionScope, z: PBShaderExp, NdotL: PBShaderExp): PBShaderExp {\n    const pb = scope.$builder;\n    const lib = new ShaderLib(pb);\n    const depthBiasParam = pb.getDeviceType() === 'webgl'\n      ? scope.global.light.depthBias\n      : scope.global.light.lightParams[4];\n    if (this.light.isDirectionLight()) {\n      return pb.dot(pb.mul(depthBiasParam.xy, pb.vec2(1, pb.sub(1, NdotL))), pb.vec2(1, 1));\n    } else {\n      const nearFar = pb.getDeviceType() === 'webgl'\n        ? scope.global.light.shadowCameraParams.xy\n        : scope.global.light.lightParams[5].xy;\n      const linearDepth = lib.nonLinearDepthToLinearNormalized(z, nearFar);\n      const biasScaleFactor = pb.mix(1, depthBiasParam.w, linearDepth);\n      return pb.dot(pb.mul(depthBiasParam.xy, pb.vec2(1, pb.sub(1, NdotL)), biasScaleFactor), pb.vec2(1, 1));\n    }\n    // return pb.add(depthBiasParam.x, pb.mul(depthBiasParam.y, pb.sub(1, NdotL)));\n  }\n  computeShadowBiasCSM(scope: PBInsideFunctionScope, NdotL: PBShaderExp, split: PBShaderExp): PBShaderExp {\n    const pb = scope.$builder;\n    const depthBiasParam = pb.getDeviceType() === 'webgl'\n      ? scope.global.light.depthBias\n      : scope.global.light.lightParams[4];\n    const splitFlags = pb.vec4(\n      pb.float(pb.equal(split, 0)),\n      pb.float(pb.equal(split, 1)),\n      pb.float(pb.equal(split, 2)),\n      pb.float(pb.equal(split, 3)));\n    const depthBiasScale = pb.getDeviceType() === 'webgl'\n      ? pb.dot(scope.global.light.depthBiasScales, splitFlags)\n      : pb.dot(scope.global.light.lightParams[6], splitFlags);\n    // const biasScaleFactor = pb.mix(1, depthBiasParam.w, linearDepth);\n    return pb.dot(pb.mul(depthBiasParam.xy, pb.vec2(1, pb.sub(1, NdotL)), depthBiasScale), pb.vec2(1, 1));\n  }\n  /** @internal */\n  get depthBiasValues(): Vector4 {\n    return this._depthBias[0];\n  }\n  /** @internal */\n  get depthBiasScales(): Vector4 {\n    return this._depthBiasScale;\n  }\n  /** @internal */\n  get shadowMatrices(): Float32Array {\n    return this._shadowMatrices;\n  }\n  invalidate() {\n    this._framebuffer?.dispose();\n    this._framebuffer = null;\n    this._colorAttachment?.dispose();\n    this._colorAttachment = null;\n    this._depthAttachment?.dispose();\n    this._depthAttachment = null;\n  }\n  dispose() {\n    this.invalidate();\n  }\n  /** @internal */\n  getColorAttachment(): ShadowMapType {\n    return this._colorAttachment;\n  }\n  /** @internal */\n  getDepthAttachment(): Texture2D | Texture2DArray {\n    return this._depthAttachment;\n  }\n  /** @internal */\n  protected isTextureInvalid(texture: Texture2D | TextureCube | Texture2DArray, target: TextureTarget, format: TextureFormat, width: number, height: number): boolean {\n    return texture && (texture.target !== target\n      || texture.format !== format\n      || texture.width !== width\n      || texture.height !== height\n      || texture.depth !== this.numShadowCascades);\n  }\n  /** @internal */\n  protected createTexture(target: TextureTarget, format: TextureFormat, width: number, height: number, depth: number): Texture2D | TextureCube | Texture2DArray {\n    const options: TextureCreationOptions = {\n      colorSpace: 'linear',\n      noMipmap: true\n    };\n    switch (target) {\n      case TextureTarget.Texture2D:\n        return this._light.scene.device.createTexture2D(format, width, height, options);\n      case TextureTarget.TextureCubemap:\n        return this._light.scene.device.createCubeTexture(format, width, options);\n      case TextureTarget.Texture2DArray:\n        return this._light.scene.device.createTexture2DArray(format, width, height, depth, options);\n      default:\n        return null;\n    }\n  }\n  /** @internal */\n  protected updateResources() {\n    if (this._resourceDirty) {\n      this._resourceDirty = false;\n      this._impl.invalidateResource();\n      const device = this._light.scene.device;\n      const colorFormat = this._impl.getShadowMapColorFormat(this);\n      const depthFormat = this._impl.getShadowMapDepthFormat(this);\n      const numCascades = this._light.isDirectionLight() ? this._config.numCascades : 1;\n      const useTextureArray = numCascades > 1 && device.getDeviceType() !== 'webgl';\n      const shadowMapWidth = (numCascades > 1 && !useTextureArray) ? 2 * this._config.shadowMapSize : this._config.shadowMapSize;\n      const shadowMapHeight = (numCascades > 2 && !useTextureArray) ? 2 * this._config.shadowMapSize : this._config.shadowMapSize;\n      const target = useTextureArray ? TextureTarget.Texture2DArray : this._light.isPointLight() ? TextureTarget.TextureCubemap : TextureTarget.Texture2D;\n      if (this.isTextureInvalid(this._colorAttachment, target, colorFormat, shadowMapWidth, shadowMapHeight)) {\n        this._framebuffer?.dispose();\n        this._framebuffer = null;\n        this._colorAttachment.dispose();\n        this._colorAttachment = null;\n      }\n      if (this.isTextureInvalid(this._depthAttachment, TextureTarget.Texture2D, depthFormat, shadowMapWidth, shadowMapHeight)) {\n        this._framebuffer?.dispose();\n        this._framebuffer = null;\n        this._depthAttachment.dispose();\n        this._depthAttachment = null;\n      }\n      if (!this._colorAttachment || this._colorAttachment.disposed) {\n        this._colorAttachment = this.createTexture(target, colorFormat, shadowMapWidth, shadowMapHeight, numCascades);\n      }\n      if (!this._depthAttachment || this._depthAttachment.disposed) {\n        this._depthAttachment = this.createTexture(target, depthFormat, shadowMapWidth, shadowMapHeight, numCascades);\n      }\n      if (!this._framebuffer || this._framebuffer.disposed) {\n        this._framebuffer = device.createFrameBuffer({\n          colorAttachments: [{ texture: this._colorAttachment }],\n          depthAttachment: { texture: this._depthAttachment },\n        });\n      }\n    }\n    if (this._colorAttachment) {\n      this._impl.updateResources(this);\n    }\n  }\n  /** @internal */\n  protected createLightCameraPoint(lightCamera: Camera): void {\n    lightCamera.reparent(this._light);\n    lightCamera.position.set(0, 0, 0);\n    lightCamera.rotation.identity();\n    lightCamera.scaling.set(1, 1, 1);\n    lightCamera.projectionMatrix = Matrix4x4.perspective(Math.PI / 2, 1, this._config.nearClip, (this._light as PointLight).range)\n  }\n  /** @internal */\n  protected createLightCameraSpot(lightCamera: Camera): void {\n    lightCamera.reparent(this._light);\n    lightCamera.position.set(0, 0, 0);\n    lightCamera.rotation.identity();\n    lightCamera.scaling.set(1, 1, 1);\n    lightCamera.projectionMatrix = Matrix4x4.perspective(2 * (this._light as SpotLight).cutoff, 1, this._config.nearClip, (this._light as SpotLight).range);\n  }\n  /** @internal */\n  protected createLightCameraDirectional(sceneAABB: AABB, sceneCamera: Camera, lightCamera: Camera, cropMatrix?: Matrix4x4, clipNear?: boolean, border?: number) {\n    lightCamera.reparent(this._light);\n    lightCamera.position.set(0, 0, 0);\n    lightCamera.rotation.identity();\n    lightCamera.scaling.set(1, 1, 1);\n    border = border || 0;\n    const expand = border / (1 - 2 * border);\n    const frustum = sceneCamera.frustum;\n    const sceneMin = ShadowMapper._sceneMin;\n    const sceneMax = ShadowMapper._sceneMax;\n    const frustumMin = ShadowMapper._frustumMin;\n    const frustumMax = ShadowMapper._frustumMax;\n    // const frustum = new Frustum(sceneCamera.viewProjectionMatrix);\n    sceneMin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    sceneMax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n    sceneAABB.computePoints().forEach((p) => {\n      const lsp = this._light.invWorldMatrix.transformPointAffine(p);\n      sceneMin.inplaceMin(lsp);\n      sceneMax.inplaceMax(lsp);\n    });\n    frustumMin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    frustumMax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n    frustum.corners.forEach((p) => {\n      const lsPoint = this._light.invWorldMatrix.transformPointAffine(p);\n      frustumMin.inplaceMin(lsPoint);\n      frustumMax.inplaceMax(lsPoint);\n    });\n    const minx = Math.max(sceneMin.x, frustumMin.x);\n    const maxx = Math.min(sceneMax.x, frustumMax.x);\n    const miny = Math.max(sceneMin.y, frustumMin.y);\n    const maxy = Math.min(sceneMax.y, frustumMax.y);\n    const minz = Math.max(sceneMin.z, frustumMin.z);\n    const texelSizeW = (maxx - minx) / this.shadowMapSize;\n    const texelSizeH = (maxy - miny) / this.shadowMapSize;\n    const cx = Math.floor((minx + maxx) / 2 / texelSizeW) * texelSizeW;\n    const cy = Math.floor((miny + maxy) / 2 / texelSizeH) * texelSizeH;\n    const hx = Math.floor((maxx - minx) * (expand + 0.5) / texelSizeW) * texelSizeW;\n    const hy = Math.floor((maxy - miny) * (expand + 0.5) / texelSizeH) * texelSizeH;\n    const maxz = clipNear ? Math.min(sceneMax.z, frustumMax.z) : sceneMax.z;\n    lightCamera.position.set(cx, cy, sceneMax.z + 1);\n    // lightCamera.position.z = sceneMax.z + 1;\n    lightCamera.projectionMatrix = Matrix4x4.ortho(-hx, hx, -hy, hy, sceneMax.z - maxz + 1, sceneMax.z - minz + 1)\n\n    if (cropMatrix) {\n      // compute crop matrix\n      let clipMaxX = 0, clipMaxY = 0;\n      let clipMinX = Number.MAX_VALUE, clipMinY = Number.MAX_VALUE;\n      frustum.corners.forEach((p) => {\n        const clipPos = lightCamera.viewProjectionMatrix.transformPoint(p);\n        clipPos.x = Math.min(1, Math.max(-1, clipPos.x / clipPos.w));\n        clipPos.y = Math.min(1, Math.max(-1, clipPos.y / clipPos.w));\n        if (clipPos.x > clipMaxX) {\n          clipMaxX = clipPos.x;\n        }\n        if (clipPos.x < clipMinX) {\n          clipMinX = clipPos.x;\n        }\n        if (clipPos.y > clipMaxY) {\n          clipMaxY = clipPos.y;\n        }\n        if (clipPos.y < clipMinY) {\n          clipMinY = clipPos.y;\n        }\n      });\n      const clipW = clipMaxX - clipMinX;\n      const clipH = clipMaxY - clipMinY;\n      clipMinX -= expand * clipW;\n      clipMinY -= expand * clipH;\n      clipMaxX += expand * clipW;\n      clipMaxY += expand * clipH;\n      const scaleX = 2 / (clipMaxX - clipMinX);\n      const scaleY = 2 / (clipMaxY - clipMinY);\n      const offsetX = -0.5 * (clipMaxX + clipMinX) * scaleX;\n      const offsetY = -0.5 * (clipMaxY + clipMinY) * scaleY;\n      cropMatrix.identity();\n      cropMatrix.m00 = scaleX;\n      cropMatrix.m11 = scaleY;\n      cropMatrix.m03 = offsetX;\n      cropMatrix.m13 = offsetY;\n    }\n  }\n  /** @internal */\n  protected fetchCameraForScene(scene: Scene) {\n    const cameras = this._lightCameras.get(scene);\n    if (!cameras || cameras.length === 0) {\n      return new Camera(scene);\n    } else {\n      const camera = cameras.pop();\n      camera.position.set(0, 0, 0);\n      camera.rotation.identity();\n      camera.scaling.set(1, 1, 1);\n      return camera;\n    }\n  }\n  /** @internal */\n  protected releaseCamera(camera: Camera) {\n    let cameras = this._lightCameras.get(camera.scene);\n    if (!cameras) {\n      cameras = [];\n      this._lightCameras.set(camera.scene, cameras);\n    }\n    camera.remove();\n    cameras.push(camera);\n  }\n  /** @internal */\n  calcSplitDistances(camera: Camera, numCascades: number): number[] {\n    const farPlane = camera.getFarPlane();\n    const nearPlane = camera.getNearPlane();\n    const result: number[] = [0, 0, 0, 0, 0];\n    for (let i = 0; i <= numCascades; ++i) {\n      const fIDM = i / numCascades;\n      const fLog = nearPlane * Math.pow((farPlane / nearPlane), fIDM);\n      const fUniform = nearPlane + (farPlane - nearPlane) * fIDM;\n      result[i] = fLog * this._config.splitLambda + fUniform * (1 - this._config.splitLambda);\n    }\n    return result;\n  }\n  /** @internal */\n  protected calcDepthBiasParams(shadowMapCamera: Camera, shadowMapSize: number, depthBias: number, normalBias: number, depthScale: number, result: Vector4): void {\n    const sizeNear = Math.min(shadowMapCamera.projectionMatrix.getNearPlaneWidth(), shadowMapCamera.projectionMatrix.getNearPlaneHeight());\n    const sizeFar = Math.min(shadowMapCamera.projectionMatrix.getFarPlaneWidth(), shadowMapCamera.projectionMatrix.getFarPlaneHeight());\n    const scaleFactor = sizeNear / shadowMapSize / 2;\n    result.set(depthBias * scaleFactor, normalBias * scaleFactor, depthScale, sizeFar / sizeNear);\n  }\n  /** @internal */\n  protected postRenderShadowMap() {\n    this._impl.postRenderShadowMap(this);\n  }\n  render(renderPass: ShadowMapPass, scene: Scene, camera: Camera) {\n    this.updateResources();\n\n    const fb = this._framebuffer;\n    this._depthClampEnabled = false;\n    renderPass.scissor = null;\n    renderPass.viewport = null;\n    renderPass.clearColor = this._colorAttachment.isFloatFormat() ? new Vector4(1, 1, 1, 1) : new Vector4(0, 0, 0, 1);\n    if (this._config.renderBackfaceOnly) {\n      scene.device.setRenderStatesOverridden(this._cullFrontFaceRenderStates);\n    }\n    const depthScale = this._impl.getDepthScale();\n    if (this._light.isPointLight()) {\n      const shadowMapRenderCamera = this.fetchCameraForScene(scene);\n      this.createLightCameraPoint(shadowMapRenderCamera);\n      renderPass.cullCamera = shadowMapRenderCamera;\n      this.calcDepthBiasParams(shadowMapRenderCamera, this._config.shadowMapSize, this._config.depthBias, this._config.normalBias, depthScale, this._depthBias[0]);\n      this._shadowCameraParams.set(shadowMapRenderCamera.getNearPlane(), shadowMapRenderCamera.getFarPlane(), this._config.shadowMapSize, 1 / this._config.shadowMapSize);\n      renderPass.renderToCubeTexture(scene, shadowMapRenderCamera, fb);\n      this._shadowMatrices.set(Matrix4x4.transpose(shadowMapRenderCamera.viewMatrix).getArray());\n      renderPass.cullCamera = null;\n      this.releaseCamera(shadowMapRenderCamera);\n    } else {\n      if (this._config.numCascades > 1) {\n        const distances = this.calcSplitDistances(camera, this._config.numCascades);\n        const cascadeCamera = this.fetchCameraForScene(scene);\n        const shadowMapRenderCamera = this.fetchCameraForScene(scene);\n        const shadowMapCullCamera = this.fetchCameraForScene(scene);\n        cascadeCamera.reparent(camera);\n        this._depthClampEnabled = renderPass.renderScheme.device.getShaderCaps().supportFragmentDepth;\n        for (let split = 0; split < this._config.numCascades; split++) {\n          cascadeCamera.projectionMatrix = Matrix4x4.perspective(camera.getFOV(), camera.getAspect(), distances[split], distances[split + 1]);\n          const cropMatrix = new Matrix4x4();\n          const border = 20 / this._config.shadowMapSize;\n          this.createLightCameraDirectional(scene.boundingBox, cascadeCamera, shadowMapRenderCamera, cropMatrix, this.depthClampEnabled, border);\n          this.createLightCameraDirectional(scene.boundingBox, cascadeCamera, shadowMapCullCamera, null, false, border);\n          this.calcDepthBiasParams(shadowMapRenderCamera, this._config.shadowMapSize, this._config.depthBias, this._config.normalBias, depthScale, this._depthBias[split]);\n          this._depthBiasScale.getArray()[split] = this._depthBias[0].x !== 0 ? this._depthBias[split].x / this._depthBias[0].x : 1;\n          this._shadowCameraParams.set(shadowMapRenderCamera.getNearPlane(), shadowMapRenderCamera.getFarPlane(), this._config.shadowMapSize, 1 / this._config.shadowMapSize);\n          if (this._colorAttachment.isTexture2DArray()) {\n            shadowMapRenderCamera.projectionMatrix.multiplyLeft(cropMatrix);\n            fb.setTextureLayer(0, split);\n            fb.setDepthTextureLayer(split);\n          } else {\n            const numRows = this._config.numCascades > 2 ? 2 : 1;\n            const numCols = this._config.numCascades > 1 ? 2 : 1;\n            const adjMatrix = new Matrix4x4();\n            const col = split % 2;\n            const row = split >> 1;\n            adjMatrix.setRow(0, new Vector4(1.5 - 0.5 * numCols, 0, 0, 0));\n            adjMatrix.setRow(1, new Vector4(0, 1.5 - 0.5 * numRows, 0, 0));\n            adjMatrix.setRow(2, new Vector4(0, 0, 1, 0));\n            adjMatrix.setRow(3, new Vector4(col - 0.5 * numCols + 0.5, row - 0.5 * numRows + 0.5, 0, 1));\n            shadowMapRenderCamera.projectionMatrix.multiplyLeft(cropMatrix).multiplyLeft(adjMatrix);\n            if (scene.device.getDeviceType() === 'webgpu') {\n              renderPass.scissor = [col * this._config.shadowMapSize, (numRows - 1 - row) * this._config.shadowMapSize, this._config.shadowMapSize, this._config.shadowMapSize];\n            } else {\n              renderPass.scissor = [col * this._config.shadowMapSize, row * this._config.shadowMapSize, this._config.shadowMapSize, this._config.shadowMapSize];\n            }\n          }\n          renderPass.renderQueue = renderPass.cullScene(scene, shadowMapCullCamera, false);\n          renderPass.renderToTexture(scene, shadowMapRenderCamera, fb);\n          renderPass.renderQueue = null;\n          this._shadowMatrices.set(Matrix4x4.transpose(shadowMapRenderCamera.viewProjectionMatrix).getArray(), split * 16);\n          this._cascadeDistances.getArray()[split] = distances[split + 1];\n        }\n        this.releaseCamera(cascadeCamera);\n        this.releaseCamera(shadowMapRenderCamera);\n        this.releaseCamera(shadowMapCullCamera);\n      } else {\n        const shadowMapRenderCamera = this.fetchCameraForScene(scene);\n        if (this._light.isDirectionLight()) {\n          this.createLightCameraDirectional(scene.boundingBox, camera, shadowMapRenderCamera, null, false);\n        } else {\n          this.createLightCameraSpot(shadowMapRenderCamera);\n        }\n        renderPass.renderQueue = renderPass.cullScene(scene, shadowMapRenderCamera, false);\n        this.calcDepthBiasParams(shadowMapRenderCamera, this._config.shadowMapSize, this._config.depthBias, this._config.normalBias, depthScale, this._depthBias[0]);\n        this._shadowCameraParams.set(shadowMapRenderCamera.getNearPlane(), shadowMapRenderCamera.getFarPlane(), this._config.shadowMapSize, 1 / this._config.shadowMapSize);\n        renderPass.renderToTexture(scene, shadowMapRenderCamera, fb);\n        renderPass.renderQueue = null;\n        this._shadowMatrices.set(Matrix4x4.transpose(shadowMapRenderCamera.viewProjectionMatrix).getArray());\n        this.releaseCamera(shadowMapRenderCamera);\n      }\n    }\n    this.postRenderShadowMap();\n    scene.device.setRenderStatesOverridden(null);\n  }\n  /** @internal */\n  private asSSM(): SSM {\n    return this._impl?.getType() === 'hard' ? this._impl as SSM : null;\n  }\n  /** @internal */\n  private asVSM(): VSM {\n    return this._impl?.getType() === 'vsm' ? this._impl as VSM : null;\n  }\n  /** @internal */\n  private asESM(): ESM {\n    return this._impl?.getType() === 'esm' ? this._impl as ESM : null;\n  }\n  /** @internal */\n  private asPCFPD(): PCFPD {\n    return this._impl?.getType() === 'pcf-pd' ? this._impl as PCFPD : null;\n  }\n  /** @internal */\n  private asPCFOPT(): PCFOPT {\n    return this._impl?.getType() === 'pcf-opt' ? this._impl as PCFOPT : null;\n  }\n}\n"],"names":[],"mappings":"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"}