{"version":3,"file":"vsm.js","sources":["../../../../../libs/device/src/scene/shadow/vsm.ts"],"sourcesContent":["import { ShadowImpl } from \"./shadow_impl\";\nimport { Blitter, BlitType } from \"../blitter\";\nimport { ShaderLib } from \"../materiallib\";\nimport { Device, BindGroup, ShaderType, FrameBuffer, TextureTarget, TextureFormat, GPUResourceUsageFlags, ProgramBuilder, PBShaderExp, TextureFilter, PBInsideFunctionScope, TextureSampler, PBGlobalScope, TextureCreationOptions } from \"../../device\";\nimport { computeShadowMapDepth, filterShadowVSM } from \"../renderers/shadowmap.shaderlib\";\nimport type { ShadowMapper, ShadowMapType, ShadowMode } from \"./shadowmapper\";\n\nexport class VSMBlitter extends Blitter {\n  protected _phase: 'horizonal' | 'vertical';\n  protected _packFloat: boolean;\n  protected _blurSize: number;\n  protected _kernelSize: number;\n  constructor(phase: 'horizonal' | 'vertical', kernelSize: number, blurSize: number, packFloat: boolean) {\n    super();\n    this._phase = phase;\n    this._blurSize = blurSize;\n    this._kernelSize = kernelSize;\n    this._packFloat = packFloat;\n  }\n  get blurSize(): number {\n    return this._blurSize;\n  }\n  set blurSize(val: number) {\n    this._blurSize = val;\n  }\n  get kernelSize(): number {\n    return this._kernelSize;\n  }\n  set kernelSize(val: number) {\n    if (val !== this._kernelSize) {\n      this._kernelSize = val;\n      this.invalidateHash();\n    }\n  }\n  get packFloat(): boolean {\n    return this._packFloat;\n  }\n  set packFloat(b: boolean) {\n    if (this._packFloat !== !!b) {\n      this._packFloat = !!b;\n      this.invalidateHash();\n    }\n  }\n  setup(scope: PBGlobalScope, type: BlitType) {\n    const pb = scope.$builder;\n    if (pb.shaderType === ShaderType.Fragment) {\n      scope.blurSize = pb.float().uniform(0);\n      scope.blurMultiplyVec = type === 'cube'\n        ? this._phase === 'horizonal' ? pb.vec3(1, 0, 0) : pb.vec3(0, 1, 0)\n        : this._phase === 'horizonal' ? pb.vec2(1, 0) : pb.vec2(0, 1);\n      scope.numBlurPixelsPerSide = pb.float((this._kernelSize + 1) / 2);\n      scope.weight = pb.float(1 / (this._kernelSize * this._kernelSize));\n    }\n  }\n  setUniforms(bindGroup: BindGroup) {\n    bindGroup.setValue('blurSize', this._blurSize);\n  }\n  readTexel(scope: PBInsideFunctionScope, type: BlitType, srcTex: PBShaderExp, srcUV: PBShaderExp, srcLayer: PBShaderExp): PBShaderExp {\n    const pb = scope.$builder;\n    const texel = super.readTexel(scope, type, srcTex, srcUV, srcLayer);\n    if (this._packFloat) {\n      const lib = new ShaderLib(pb);\n      if (this._phase === 'horizonal') {\n        return pb.vec4(lib.decodeNormalizedFloatFromRGBA(texel));\n      } else {\n        return pb.vec4(lib.decode2HalfFromRGBA(texel), 0, 0);\n      }\n    } else {\n      return texel;\n    }\n  }\n  writeTexel(scope: PBInsideFunctionScope, type: BlitType, srcUV: PBShaderExp, texel: PBShaderExp): PBShaderExp {\n    const pb = scope.$builder;\n    const outTexel = super.writeTexel(scope, type, srcUV, texel);\n    if (this._packFloat) {\n      const lib = new ShaderLib(pb);\n      return lib.encode2HalfToRGBA(outTexel.x, outTexel.y);\n    } else {\n      return outTexel;\n    }\n  }\n  filter(scope: PBInsideFunctionScope, type: BlitType, srcTex: PBShaderExp, srcUV: PBShaderExp, srcLayer: PBShaderExp): PBShaderExp {\n    const that = this;\n    const pb = scope.$builder;\n    scope.d0 = that.readTexel(scope, type, srcTex, srcUV, srcLayer);\n    scope.mean = pb.float(0);\n    scope.squaredMean = pb.float(0);\n    scope.$for(pb.float('i'), 1, scope.numBlurPixelsPerSide, function () {\n      this.d1 = that.readTexel(this, type, srcTex, pb.sub(srcUV, pb.mul(this.blurMultiplyVec, this.blurSize, this.i)), srcLayer);\n      this.d2 = that.readTexel(this, type, srcTex, pb.add(srcUV, pb.mul(this.blurMultiplyVec, this.blurSize, this.i)), srcLayer);\n      this.mean = pb.add(this.mean, this.d1.x);\n      this.mean = pb.add(this.mean, this.d2.x);\n      if (that._phase === 'horizonal') {\n        this.squaredMean = pb.add(this.squaredMean, pb.mul(this.d1.x, this.d1.x));\n        this.squaredMean = pb.add(this.squaredMean, pb.mul(this.d2.x, this.d2.x));\n      } else {\n        this.squaredMean = pb.add(this.squaredMean, pb.dot(this.d1.xy, this.d1.xy));\n        this.squaredMean = pb.add(this.squaredMean, pb.dot(this.d2.xy, this.d2.xy));\n      }\n    });\n    scope.mean = pb.div(scope.mean, that._kernelSize);\n    scope.squaredMean = pb.div(scope.squaredMean, that._kernelSize);\n    scope.stdDev = pb.sqrt(pb.max(0, pb.sub(scope.squaredMean, pb.mul(scope.mean, scope.mean))));\n    return pb.vec4(scope.mean, scope.stdDev, 0, 1);\n  }\n  protected calcHash(): string {\n    return `${this._phase}-${this._kernelSize}-${Number(this._packFloat)}`;\n  }\n}\n\nexport class VSM extends ShadowImpl {\n  /** @internal */\n  protected _blur: boolean;\n  /** @internal */\n  protected _kernelSize: number;\n  /** @internal */\n  protected _blurSize: number;\n  /** @internal */\n  protected _blurMap: ShadowMapType;\n  /** @internal */\n  protected _blurFramebuffer: FrameBuffer;\n  /** @internal */\n  protected _blurMap2: ShadowMapType;\n  /** @internal */\n  protected _blurFramebuffer2: FrameBuffer;\n  /** @internal */\n  protected _blitterH: VSMBlitter;\n  /** @internal */\n  protected _blitterV: VSMBlitter;\n  /** @internal */\n  protected _mipmap: boolean;\n  /** @internal */\n  protected _darkness: number;\n  /** @internal */\n  protected _shadowSampler: TextureSampler;\n  constructor(kernelSize?: number, blurSize?: number, darkness?: number) {\n    super();\n    this._blur = true;\n    this._kernelSize = kernelSize ?? 5;\n    this._blurSize = blurSize ?? 1;\n    this._darkness = darkness ?? 0;\n    this._mipmap = true;\n    this._shadowSampler = null;\n    this._blitterH = new VSMBlitter('horizonal', this._kernelSize, 1 / 1024, false);\n    this._blitterV = new VSMBlitter('vertical', this._kernelSize, 1 / 1024, false);\n  }\n  resourceDirty(): boolean {\n    return this._resourceDirty;\n  }\n  get blur(): boolean {\n    return this._blur;\n  }\n  set blur(val: boolean) {\n    if (this._blur !== !!val) {\n      this._blur = !!val;\n      this._resourceDirty = true;\n    }\n  }\n  get mipmap(): boolean {\n    return this._mipmap;\n  }\n  set mipmap(b: boolean) {\n    if (this._mipmap !== !!b) {\n      this._mipmap = !!b;\n      if (this._blur) {\n        this._resourceDirty = true;\n      }\n    }\n  }\n  get kernelSize(): number {\n    return this._kernelSize;\n  }\n  set kernelSize(val: number) {\n    this._kernelSize = val;\n  }\n  get blurSize(): number {\n    return this._blurSize;\n  }\n  set blurSize(val: number) {\n    this._blurSize = val;\n  }\n  getDepthScale(): number {\n    return this._darkness;\n  }\n  setDepthScale(val: number) {\n    this._darkness = val;\n  }\n  getType(): ShadowMode {\n    return 'vsm';\n  }\n  dispose(): void {\n    this._blurFramebuffer?.dispose();\n    this._blurFramebuffer = null;\n    this._blurFramebuffer2?.dispose();\n    this._blurFramebuffer2 = null;\n    this._blurMap?.dispose();\n    this._blurMap = null;\n    this._blurMap2?.dispose();\n    this._blurMap2 = null;\n    this._shadowSampler = null;\n  }\n  getShadowMap(shadowMapper: ShadowMapper): ShadowMapType {\n    return this._blur ? this._blurMap2 : shadowMapper.getColorAttachment();\n  }\n  getShadowMapSampler(shadowMapper: ShadowMapper): TextureSampler {\n    if (!this._shadowSampler) {\n      this._shadowSampler = this.getShadowMap(shadowMapper)?.getDefaultSampler(false) || null;\n    }\n    return this._shadowSampler;\n  }\n  /** @internal */\n  protected isTextureInvalid(shadowMapper: ShadowMapper, texture: ShadowMapType, target: TextureTarget, format: TextureFormat, width: number, height: number): boolean {\n    return texture && (texture.target !== target\n      || texture.format !== format\n      || texture.width !== width\n      || texture.height !== height\n      || texture.depth !== shadowMapper.numShadowCascades);\n  }\n  /** @internal */\n  protected createTexture(device: Device, target: TextureTarget, format: TextureFormat, width: number, height: number, depth: number, mipmap: boolean): ShadowMapType {\n    const options: TextureCreationOptions = {\n      colorSpace: 'linear',\n      noMipmap: !mipmap\n    };\n    switch (target) {\n      case TextureTarget.Texture2D:\n        return device.createTexture2D(format, width, height, options);\n      case TextureTarget.TextureCubemap:\n        return device.createCubeTexture(format, width, options);\n      case TextureTarget.Texture2DArray:\n        return device.createTexture2DArray(format, width, height, depth, options);\n      default:\n        return null;\n    }\n  }\n  doUpdateResources(shadowMapper: ShadowMapper) {\n    const device = shadowMapper.light.scene.device;\n    const colorFormat = this.getShadowMapColorFormat(shadowMapper);\n    const target = shadowMapper.getColorAttachment().target;\n    const shadowMapWidth = shadowMapper.getColorAttachment().width;\n    const shadowMapHeight = shadowMapper.getColorAttachment().height;\n    const blur = this._blur;\n    const blurMapWidth = shadowMapWidth;\n    const blurMapHeight = shadowMapHeight;\n    if (!blur) {\n      this._blurFramebuffer?.dispose();\n      this._blurFramebuffer = null;\n      this._blurMap?.dispose();\n      this._blurMap = null;\n      this._blurFramebuffer2?.dispose();\n      this._blurFramebuffer2 = null;\n      this._blurMap2?.dispose();\n      this._blurMap2 = null;\n    }\n    if (this.isTextureInvalid(shadowMapper, this._blurMap, target, colorFormat, blurMapWidth, blurMapHeight)) {\n      this._blurFramebuffer?.dispose();\n      this._blurFramebuffer = null;\n      this._blurMap?.dispose();\n      this._blurMap = null;\n    }\n    if (this.isTextureInvalid(shadowMapper, this._blurMap2, target, colorFormat, blurMapWidth, blurMapHeight)) {\n      this._blurFramebuffer2?.dispose();\n      this._blurFramebuffer2 = null;\n      this._blurMap2?.dispose();\n      this._blurMap2 = null;\n    }\n    if (blur) {\n      if (!this._blurMap || this._blurMap.disposed) {\n        this._blurMap = this.createTexture(device, target, colorFormat, blurMapWidth, blurMapHeight, shadowMapper.numShadowCascades, false);\n      }\n      if (!this._blurMap2 || (this._mipmap !== this._blurMap2.mipLevelCount > 1) || this._blurMap2.disposed) {\n        this._blurMap2 = this.createTexture(device, target, colorFormat, blurMapWidth, blurMapHeight, shadowMapper.numShadowCascades, this._mipmap);\n      }\n      if (!this._blurFramebuffer || this._blurFramebuffer.disposed) {\n        this._blurFramebuffer = device.createFrameBuffer({ colorAttachments: [{ texture: this._blurMap }] });\n      }\n      if (!this._blurFramebuffer2 || this._blurFramebuffer2.disposed) {\n        this._blurFramebuffer2 = device.createFrameBuffer({ colorAttachments: [{ texture: this._blurMap2 }] });\n      }\n    }\n    this._shadowSampler = null;\n  }\n  postRenderShadowMap(shadowMapper: ShadowMapper) {\n    if (this._blur) {\n      this._blitterH.blurSize = this._blurSize / shadowMapper.shadowMap.width;\n      this._blitterH.kernelSize = this._kernelSize;\n      this._blitterH.packFloat = shadowMapper.shadowMap.format === TextureFormat.RGBA8UNORM;\n      this._blitterV.blurSize = this._blurSize / shadowMapper.shadowMap.height;\n      this._blitterV.kernelSize = this._kernelSize;\n      this._blitterV.packFloat = shadowMapper.shadowMap.format === TextureFormat.RGBA8UNORM;\n      this._blitterH.blit(shadowMapper.getColorAttachment() as any, this._blurFramebuffer as any);\n      this._blitterV.blit(this._blurMap as any, this._blurFramebuffer2 as any);\n    }\n  }\n  isSupported(shadowMapper: ShadowMapper): boolean {\n    return this.getShadowMapColorFormat(shadowMapper) !== TextureFormat.Unknown && this.getShadowMapDepthFormat(shadowMapper) !== TextureFormat.Unknown;\n  }\n  getShaderHash(): string {\n    return '';\n  }\n  getShadowMapColorFormat(shadowMapper: ShadowMapper): TextureFormat {\n    const device = shadowMapper.light.scene.device;\n    return device.getTextureCaps().supportFloatColorBuffer && device.getTextureCaps().supportLinearFloatTexture\n      ? device.getDeviceType() === 'webgl' ? TextureFormat.RGBA32F : TextureFormat.RG32F\n      : device.getTextureCaps().supportHalfFloatColorBuffer && device.getTextureCaps().supportLinearHalfFloatTexture\n        ? device.getDeviceType() === 'webgl' ? TextureFormat.RGBA16F : TextureFormat.RG16F\n        : TextureFormat.RGBA8UNORM;\n  }\n  getShadowMapDepthFormat(shadowMapper: ShadowMapper): TextureFormat {\n    return TextureFormat.D24S8;\n  }\n  computeShadowMapDepth(shadowMapper: ShadowMapper, scope: PBInsideFunctionScope): PBShaderExp {\n    return computeShadowMapDepth(scope, shadowMapper.shadowMap.format);\n  }\n  computeShadowCSM(shadowMapper: ShadowMapper, scope: PBInsideFunctionScope, shadowVertex: PBShaderExp, NdotL: PBShaderExp, split: PBShaderExp): PBShaderExp {\n    const funcNameComputeShadowCSM = 'lib_computeShadowCSM';\n    const pb = scope.$builder;\n    if (!pb.getFunction(funcNameComputeShadowCSM)) {\n      pb.globalScope.$function(funcNameComputeShadowCSM, [pb.vec4('shadowVertex'), pb.float('NdotL'), pb.int('split')], function () {\n        this.$l.shadowCoord = pb.div(this.shadowVertex, this.shadowVertex.w);\n        this.$l.shadowCoord = pb.add(pb.mul(this.shadowCoord, 0.5), 0.5);\n        this.$l.inShadow = pb.all(pb.bvec2(pb.all(pb.bvec4(pb.greaterThanEqual(this.shadowCoord.x, 0), pb.lessThanEqual(this.shadowCoord.x, 1), pb.greaterThanEqual(this.shadowCoord.y, 0), pb.lessThanEqual(this.shadowCoord.y, 1))), pb.lessThanEqual(this.shadowCoord.z, 1)));\n        this.$l.shadow = pb.float(1);\n        this.$if(this.inShadow, function () {\n          this.$l.shadowBias = shadowMapper.computeShadowBiasCSM(this, this.NdotL, this.split);\n          this.shadowCoord.z = pb.sub(this.shadowCoord.z, this.shadowBias);\n          this.shadow = filterShadowVSM(this, shadowMapper.light.lightType, shadowMapper.shadowMap.format, this.shadowCoord, this.split);\n        });\n        this.$return(this.shadow);\n      });\n    }\n    return pb.globalScope[funcNameComputeShadowCSM](shadowVertex, NdotL, split);\n  }\n  computeShadow(shadowMapper: ShadowMapper, scope: PBInsideFunctionScope, shadowVertex: PBShaderExp, NdotL: PBShaderExp): PBShaderExp {\n    const funcNameComputeShadow = 'lib_computeShadow';\n    const pb = scope.$builder;\n    const lib = new ShaderLib(pb);\n    const that = this;\n    if (!pb.getFunction(funcNameComputeShadow)) {\n      pb.globalScope.$function(funcNameComputeShadow, [pb.vec4('shadowVertex'), pb.float('NdotL')], function () {\n        if (shadowMapper.light.isPointLight()) {\n          this.$l.shadowBias = shadowMapper.computeShadowBias(this, this.distance, this.NdotL);\n          this.$l.coord = pb.vec4(this.shadowVertex.xyz, pb.sub(pb.div(pb.length(this.shadowVertex.xyz), this.global.light.lightParams[0].w), this.shadowBias));\n          this.$return(filterShadowVSM(this, shadowMapper.light.lightType, shadowMapper.shadowMap.format, this.coord));\n        } else {\n          this.$l.shadowCoord = pb.div(this.shadowVertex, this.shadowVertex.w);\n          this.$l.shadowCoord = pb.add(pb.mul(this.shadowCoord, 0.5), 0.5);\n          this.$l.inShadow = pb.all(pb.bvec2(pb.all(pb.bvec4(pb.greaterThanEqual(this.shadowCoord.x, 0), pb.lessThanEqual(this.shadowCoord.x, 1), pb.greaterThanEqual(this.shadowCoord.y, 0), pb.lessThanEqual(this.shadowCoord.y, 1))), pb.lessThanEqual(this.shadowCoord.z, 1)));\n          this.$l.shadow = pb.float(1);\n          this.$if(this.inShadow, function () {\n            if (shadowMapper.light.isSpotLight()) {\n              this.$l.nearFar = pb.getDeviceType() === 'webgl' ? this.global.light.shadowCameraParams.xy : this.global.light.lightParams[5].xy;\n              this.shadowCoord.z = lib.nonLinearDepthToLinearNormalized(this.shadowCoord.z, this.nearFar);\n            }\n            this.$l.shadowBias = shadowMapper.computeShadowBias(this, this.shadowCoord.z, this.NdotL);\n            this.shadowCoord.z = pb.sub(this.shadowCoord.z, this.shadowBias);\n            this.shadow = filterShadowVSM(this, shadowMapper.light.lightType, shadowMapper.shadowMap.format, this.shadowCoord);\n          });\n          this.$return(this.shadow);\n        }\n      });\n    }\n    return pb.globalScope[funcNameComputeShadow](shadowVertex, NdotL);\n  }\n  useNativeShadowMap(shadowMapper: ShadowMapper): boolean {\n    return false;\n  }\n}\n"],"names":[],"mappings":"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"}