{"version":3,"file":"pcf_opt.js","sources":["../../../../../libs/device/src/scene/shadow/pcf_opt.ts"],"sourcesContent":["import { ShadowImpl } from './shadow_impl';\nimport { ShaderLib } from '../materiallib';\nimport { PBInsideFunctionScope, PBShaderExp, TextureFormat, TextureSampler } from '../../device';\nimport * as lib from '../renderers/shadowmap.shaderlib';\nimport type { ShadowMapper, ShadowMapType, ShadowMode } from './shadowmapper';\n\nexport class PCFOPT extends ShadowImpl {\n  protected _kernelSize: number;\n  protected _shadowSampler: TextureSampler;\n  constructor(kernelSize?: number) {\n    super();\n    this._kernelSize = kernelSize ?? 5;\n    this._shadowSampler = null;\n  }\n  get kernelSize(): number {\n    return this._kernelSize;\n  }\n  set kernelSize(val: number) {\n    val = (val !== 3 && val !== 5 && val !== 7) ? 5 : val;\n    this._kernelSize = val;\n  }\n  getType(): ShadowMode {\n    return 'pcf-opt';\n  }\n  dispose(): void {\n    this._shadowSampler = null;\n  }\n  isSupported(shadowMapper: ShadowMapper): boolean {\n    return this.getShadowMapColorFormat(shadowMapper) !== TextureFormat.Unknown && this.getShadowMapDepthFormat(shadowMapper) !== TextureFormat.Unknown;\n  }\n  resourceDirty(): boolean {\n    return false;\n  }\n  getShadowMap(shadowMapper: ShadowMapper): ShadowMapType {\n    return this.useNativeShadowMap(shadowMapper) ? shadowMapper.getDepthAttachment() : shadowMapper.getColorAttachment();\n  }\n  getShadowMapSampler(shadowMapper: ShadowMapper): TextureSampler {\n    if (!this._shadowSampler) {\n      this._shadowSampler = this.getShadowMap(shadowMapper)?.getDefaultSampler(this.useNativeShadowMap(shadowMapper)) || null;\n    }\n    return this._shadowSampler;\n  }\n  doUpdateResources() {\n    this._shadowSampler = null;\n  }\n  postRenderShadowMap() {\n  }\n  getDepthScale(): number {\n    return 1;\n  }\n  setDepthScale(val: number) {\n  }\n  getShaderHash(): string {\n    return `${this._kernelSize}`;\n  }\n  getShadowMapColorFormat(shadowMapper: ShadowMapper): TextureFormat {\n    return TextureFormat.RGBA8UNORM;\n  }\n  getShadowMapDepthFormat(shadowMapper: ShadowMapper): TextureFormat {\n    return shadowMapper.light.scene.device.getDeviceType() === 'webgl' ? TextureFormat.D24S8 : TextureFormat.D32F;\n  }\n  computeShadowMapDepth(shadowMapper: ShadowMapper, scope: PBInsideFunctionScope): PBShaderExp {\n    return lib.computeShadowMapDepth(scope, shadowMapper.shadowMap.format);\n  }\n  computeShadowCSM(shadowMapper: ShadowMapper, scope: PBInsideFunctionScope, shadowVertex: PBShaderExp, NdotL: PBShaderExp, split: PBShaderExp): PBShaderExp {\n    const funcNameComputeShadowCSM = 'lib_computeShadowCSM';\n    const pb = scope.$builder;\n    const that = this;\n    if (!pb.getFunction(funcNameComputeShadowCSM)) {\n      pb.globalScope.$function(funcNameComputeShadowCSM, [pb.vec4('shadowVertex'), pb.float('NdotL'), pb.int('split')], function () {\n        this.$l.shadowCoord = pb.div(this.shadowVertex, this.shadowVertex.w);\n        this.$l.shadowCoord = pb.add(pb.mul(this.shadowCoord, 0.5), 0.5);\n        this.$l.inShadow = pb.all(pb.bvec2(pb.all(pb.bvec4(pb.greaterThanEqual(this.shadowCoord.x, 0), pb.lessThanEqual(this.shadowCoord.x, 1), pb.greaterThanEqual(this.shadowCoord.y, 0), pb.lessThanEqual(this.shadowCoord.y, 1))), pb.lessThanEqual(this.shadowCoord.z, 1)));\n        this.$l.shadow = pb.float(1);\n        this.$l.receiverPlaneDepthBias = lib.computeReceiverPlaneDepthBias(this, this.shadowCoord);\n        this.$if(this.inShadow, function () {\n          this.$l.shadowBias = shadowMapper.computeShadowBiasCSM(this, this.NdotL, this.split);\n          this.shadowCoord.z = pb.sub(this.shadowCoord.z, this.shadowBias);\n          this.shadow = lib.filterShadowPCF(this, shadowMapper.light.lightType, shadowMapper.shadowMap.format, that._kernelSize, this.shadowCoord, this.receiverPlaneDepthBias, this.split);\n        });\n        this.$return(this.shadow);\n      });\n    }\n    return pb.globalScope[funcNameComputeShadowCSM](shadowVertex, NdotL, split);\n  }\n  computeShadow(shadowMapper: ShadowMapper, scope: PBInsideFunctionScope, shadowVertex: PBShaderExp, NdotL: PBShaderExp): PBShaderExp {\n    const funcNameComputeShadow = 'lib_computeShadow';\n    const pb = scope.$builder;\n    const shaderlib = new ShaderLib(pb);\n    const that = this;\n    if (!pb.getFunction(funcNameComputeShadow)) {\n      pb.globalScope.$function(funcNameComputeShadow, [pb.vec4('shadowVertex'), pb.float('NdotL')], function () {\n        if (shadowMapper.light.isPointLight()) {\n          if (that.useNativeShadowMap(shadowMapper)) {\n            this.$l.nearFar = pb.getDeviceType() === 'webgl' ? this.global.light.shadowCameraParams.xy : this.global.light.lightParams[5].xy;\n            this.$l.distance = shaderlib.linearToNonLinear(pb.max(pb.max(pb.abs(this.shadowVertex.x), pb.abs(this.shadowVertex.y)), pb.abs(this.shadowVertex.z)), this.nearFar);\n            this.$l.shadowBias = shadowMapper.computeShadowBias(this, this.distance, this.NdotL);\n            this.$return(that.sampleShadowMap(shadowMapper, this, this.shadowVertex, this.distance, this.shadowBias));\n          } else {\n            this.$l.distance = pb.length(this.shadowVertex.xyz);\n            this.$l.distance = pb.div(this.$l.distance, this.global.light.lightParams[0].w);\n            this.$l.shadowBias = shadowMapper.computeShadowBias(this, this.distance, this.NdotL);\n            this.$return(that.sampleShadowMap(shadowMapper, this, this.shadowVertex, this.distance, this.shadowBias));\n          }\n        } else {\n          this.$l.shadowCoord = pb.div(this.shadowVertex, this.shadowVertex.w);\n          this.$l.shadowCoord = pb.add(pb.mul(this.shadowCoord, 0.5), 0.5);\n          this.$l.inShadow = pb.all(pb.bvec2(pb.all(pb.bvec4(pb.greaterThanEqual(this.shadowCoord.x, 0), pb.lessThanEqual(this.shadowCoord.x, 1), pb.greaterThanEqual(this.shadowCoord.y, 0), pb.lessThanEqual(this.shadowCoord.y, 1))), pb.lessThanEqual(this.shadowCoord.z, 1)));\n          this.$l.shadow = pb.float(1);\n          this.$l.receiverPlaneDepthBias = lib.computeReceiverPlaneDepthBias(this, this.shadowCoord);\n          this.$if(this.inShadow, function () {\n            this.$l.shadowBias = shadowMapper.computeShadowBias(this, this.shadowCoord.z, this.NdotL);\n            this.shadowCoord.z = pb.sub(this.shadowCoord.z, this.shadowBias);\n            this.shadow = lib.filterShadowPCF(this, shadowMapper.light.lightType, shadowMapper.shadowMap.format, that._kernelSize, this.shadowCoord, this.receiverPlaneDepthBias);\n          });\n          this.$return(this.shadow);\n        }\n      });\n    }\n    return pb.globalScope[funcNameComputeShadow](shadowVertex, NdotL);\n  }\n  useNativeShadowMap(shadowMapper: ShadowMapper): boolean {\n    return shadowMapper.light.scene.device.getDeviceType() !== 'webgl';\n  }\n  /** @internal */\n  sampleShadowMap(shadowMapper: ShadowMapper, scope: PBInsideFunctionScope, coords: PBShaderExp, z: PBShaderExp, bias: PBShaderExp): PBShaderExp {\n    const funcNameSampleShadowMap = `lib_sampleShadowMap`;\n    const pb = scope.$builder;\n    const lib = new ShaderLib(pb);\n    const that = this;\n    if (!pb.getFunction(funcNameSampleShadowMap)) {\n      pb.globalScope.$function(funcNameSampleShadowMap, [pb.vec4('coords'), pb.float('z'), pb.float('bias')], function () {\n        const floatDepthTexture = shadowMapper.shadowMap.format !== TextureFormat.RGBA8UNORM;\n        if (shadowMapper.light.isPointLight()) {\n          if (this.useNativeShadowMap(shadowMapper)) {\n            this.$return(pb.clamp(pb.textureSampleCompareLevel(this.shadowMap, this.coords.xyz, pb.sub(this.z, this.bias)), 0, 1));\n          } else {\n            this.$l.shadowTex = pb.textureSampleLevel(this.shadowMap, this.coords.xyz, 0);\n            if (!floatDepthTexture) {\n              this.shadowTex.x = lib.decodeNormalizedFloatFromRGBA(this.shadowTex);\n            }\n            this.$l.distance = pb.sub(this.z, this.bias);\n            this.$return(pb.step(this.distance, this.shadowTex.x));\n          }\n        } else {\n          this.$l.distance = pb.sub(this.z, this.bias);\n          if (that.useNativeShadowMap(shadowMapper)) {\n            this.$return(pb.clamp(pb.textureSampleCompareLevel(this.shadowMap, this.coords.xy, this.distance), 0, 1));\n          } else {\n            this.$l.shadowTex = pb.textureSampleLevel(this.shadowMap, this.coords.xy, 0);\n            if (!floatDepthTexture) {\n              this.shadowTex.x = lib.decodeNormalizedFloatFromRGBA(this.shadowTex);\n            }\n            this.$return(pb.step(this.distance, this.shadowTex.x));\n          }\n        }\n      });\n    }\n    return pb.globalScope[funcNameSampleShadowMap](coords, z, bias);\n  }\n  /** @internal */\n  sampleShadowMapCSM(shadowMapper: ShadowMapper, scope: PBInsideFunctionScope, coords: PBShaderExp, split: PBShaderExp, z: PBShaderExp, bias: PBShaderExp): PBShaderExp {\n    const funcNameSampleShadowMapCSM = 'lib_sampleShadowMapCSM';\n    const pb = scope.$builder;\n    const lib = new ShaderLib(pb);\n    const that = this;\n    if (!pb.getFunction(funcNameSampleShadowMapCSM)) {\n      pb.globalScope.$function(funcNameSampleShadowMapCSM, [pb.vec4('coords'), pb.int('split'), pb.float('z'), pb.float('bias')], function () {\n        const floatDepthTexture = shadowMapper.shadowMap.format !== TextureFormat.RGBA8UNORM;\n        this.$l.distance = pb.sub(this.z, this.bias);\n        if (that.useNativeShadowMap(shadowMapper)) {\n          if (shadowMapper.shadowMap.isTexture2DArray()) {\n            this.$return(pb.clamp(pb.textureArraySampleCompareLevel(this.shadowMap, this.coords.xy, this.split, this.distance), 0, 1));\n          } else {\n            this.$return(pb.clamp(pb.textureSampleCompareLevel(this.shadowMap, this.coords.xy, this.distance), 0, 1));\n          }\n        } else {\n          if (shadowMapper.shadowMap.isTexture2DArray()) {\n            this.$l.shadowTex = pb.textureArraySampleLevel(this.shadowMap, this.coords.xy, this.split, 0);\n          } else {\n            this.$l.shadowTex = pb.textureSampleLevel(this.shadowMap, this.coords.xy, 0);\n          }\n          if (!floatDepthTexture) {\n            this.shadowTex.x = lib.decodeNormalizedFloatFromRGBA(this.shadowTex);\n          }\n          this.$return(pb.step(this.distance, this.shadowTex.x));\n        }\n      });\n    }\n    return pb.globalScope[funcNameSampleShadowMapCSM](coords, split, z, bias);\n  }\n}\n\n"],"names":["lib.computeShadowMapDepth","lib.computeReceiverPlaneDepthBias","lib.filterShadowPCF"],"mappings":"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"}