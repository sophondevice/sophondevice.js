{"version":3,"file":"forward.shaderlib.js","sources":["../../../../../libs/device/src/scene/renderers/forward.shaderlib.ts"],"sourcesContent":["import { PBInsideFunctionScope, PBShaderExp } from \"../../device/builder\";\nimport { ShaderLib } from \"../materiallib/shaderlib\";\nimport { DEBUG_CASCADED_SHADOW_MAPS, LIGHT_TYPE_DIRECTIONAL, LIGHT_TYPE_POINT, LIGHT_TYPE_SPOT, RENDER_PASS_TYPE_FORWARD, RENDER_PASS_TYPE_MULTI_FORWARD } from \"../values\";\nimport { DrawContext } from \"../drawable\";\nimport { ForwardMultiRenderPass } from \"./forward_multi_pass\";\nimport type { LightModel } from \"../materiallib/lightmodel\";\n\nexport function forwardComputeLighting(scope: PBInsideFunctionScope, lm: LightModel, ctx: DrawContext): PBShaderExp {\n  const env = ctx.environment;\n  const funcNameIllumPointLight = 'stdmat_illumPointLight';\n  const funcNameIllumDirectionalLight = 'stdmat_illumDirectionalLight';\n  const funcNameIllumSpotLight = 'stdmat_illumSpotLight';\n  const funcNameIllumDirectionalShadowLight = 'stdmat_illumDirectionalShadowLight';\n  const funcNameIllumPointShadowLight = 'stdmat_illumPointShadowLight';\n  const funcNameIllumCascadedShadowLight = 'stdmat_illumCascadedShadowLight';\n  const funcNameIllumUnshadowedLights = 'stdmat_illumUnshadowedLights';\n  const funcNameComputeLighting = 'stdmat_computeLighting';\n  const pb = scope.$builder;\n  if (!scope || !(scope instanceof PBInsideFunctionScope)) {\n    throw new Error('forwardComputeLighting() failed: forwardComputeLighting() must be called inside a function');\n  }\n  if (!lm.supportLighting()) {\n    return lm.calculateAlbedo(scope);\n  }\n  if (ctx.renderPass.getRenderPassType() === RENDER_PASS_TYPE_MULTI_FORWARD) {\n    return forwardComputeLightingMultiPass(scope, lm, ctx);\n  }\n  if (ctx.renderPass.getRenderPassType() !== RENDER_PASS_TYPE_FORWARD) {\n    throw new Error(`forwardComputeLighting() failed: invalid render pass type: ${ctx.renderPass.getRenderPassType()}`);\n  }\n  const lib = new ShaderLib(pb);\n  function illumPointLight(lm: LightModel, surfaceData: PBShaderExp, ...args: PBShaderExp[]) {\n    if (!pb.getFunction(funcNameIllumPointLight)) {\n      pb.globalScope.$function(funcNameIllumPointLight, [\n        pb.struct(surfaceData.getTypeName(), 'surfaceData'),\n        pb.vec4('lightPositionRange'),\n        pb.vec4('lightDirectionCutoff'),\n        pb.vec3('lightDir'),\n        pb.vec3('attenuation')\n      ], function () {\n        this.$l.dist = pb.distance(this.lightPositionRange.xyz, pb.queryGlobal(ShaderLib.USAGE_WORLD_POSITION).xyz);\n        this.$l.falloff = pb.max(0, pb.sub(1, pb.div(this.dist, this.lightPositionRange.w)));\n        this.$l.falloff2 = pb.mul(this.falloff, this.falloff);\n        this.$if(pb.greaterThan(this.falloff2, 0), function () {\n          lm.directBRDF(this, this.surfaceData, this.lightDir, pb.mul(this.attenuation, this.falloff2));\n        });\n      });\n    }\n    pb.globalScope[funcNameIllumPointLight](surfaceData, ...args);\n  }\n  function illumDirectionalLight(lm: LightModel, surfaceData: PBShaderExp, ...args: PBShaderExp[]) {\n    if (!pb.getFunction(funcNameIllumDirectionalLight)) {\n      pb.globalScope.$function(funcNameIllumDirectionalLight, [\n        pb.struct(surfaceData.getTypeName(), 'surfaceData'),\n        pb.vec4('lightPositionRange'),\n        pb.vec4('lightDirectionCutoff'),\n        pb.vec3('lightDir'),\n        pb.vec3('attenuation')\n      ], function () {\n        lm.directBRDF(this, this.surfaceData, this.lightDir, this.attenuation);\n      });\n    }\n    pb.globalScope[funcNameIllumDirectionalLight](surfaceData, ...args);\n  }\n  function illumSpotLight(lm: LightModel, surfaceData: PBShaderExp, ...args: PBShaderExp[]) {\n    if (!pb.getFunction(funcNameIllumSpotLight)) {\n      pb.globalScope.$function(funcNameIllumSpotLight, [\n        pb.struct(surfaceData.getTypeName(), 'surfaceData'),\n        pb.vec4('lightPositionRange'),\n        pb.vec4('lightDirectionCutoff'),\n        pb.vec3('lightDir'),\n        pb.vec3('attenuation')\n      ], function () {\n        this.$l.spotFactor = pb.dot(this.lightDir, this.lightDirectionCutoff.xyz);\n        this.spotFactor = pb.smoothStep(this.lightDirectionCutoff.w, pb.mix(this.lightDirectionCutoff.w, 1, 0.5), this.spotFactor);\n        this.$if(pb.greaterThan(this.spotFactor, 0), function () {\n          illumPointLight(lm, this.surfaceData, this.lightPositionRange, this.lightDirectionCutoff, this.lightDir, pb.mul(this.attenuation, this.spotFactor));\n        });\n      });\n    }\n    pb.globalScope[funcNameIllumSpotLight](surfaceData, ...args);\n  }\n  function illumLight(scope: PBInsideFunctionScope, lightType: number | PBShaderExp, lm: LightModel, surfaceData: PBShaderExp, ...args: PBShaderExp[]) {\n    if (typeof lightType === 'number') {\n      if (lightType === LIGHT_TYPE_DIRECTIONAL) {\n        illumDirectionalLight(lm, surfaceData, ...args);\n      } else if (lightType === LIGHT_TYPE_POINT) {\n        illumPointLight(lm, surfaceData, ...args);\n      } else if (lightType === LIGHT_TYPE_SPOT) {\n        illumSpotLight(lm, surfaceData, ...args);\n      }\n    } else {\n      scope.$if(pb.equal(lightType, LIGHT_TYPE_DIRECTIONAL), function () {\n        illumDirectionalLight(lm, surfaceData, ...args);\n      }).$elseif(pb.equal(lightType, LIGHT_TYPE_POINT), function () {\n        illumPointLight(lm, surfaceData, ...args);\n      }).$elseif(pb.equal(lightType, LIGHT_TYPE_SPOT), function () {\n        illumSpotLight(lm, surfaceData, ...args);\n      });\n    }\n  }\n  function illumDirectionalShadowLight(lightType: number, lm: LightModel, surfaceData: PBShaderExp) {\n    if (!pb.getFunction(funcNameIllumDirectionalShadowLight)) {\n      pb.globalScope.$function(funcNameIllumDirectionalShadowLight, [pb.struct(surfaceData.getTypeName(), 'surfaceData')], function () {\n        this.$l.positionRange = this.global.light.lightParams[0];\n        this.$l.directionCutoff = this.global.light.lightParams[1];\n        this.$l.diffuseIntensity = this.global.light.lightParams[2];\n        this.$l.lightcolor = pb.mul(this.diffuseIntensity.xyz, this.diffuseIntensity.w);\n        this.$l.lightDir = pb.vec3();\n        this.$l.nl = pb.float();\n        this.$l.NdotL = pb.float();\n        if (lightType === LIGHT_TYPE_DIRECTIONAL) {\n          this.lightDir = this.directionCutoff.xyz;\n          this.nl = pb.dot(this.surfaceData.normal, this.lightDir);\n          this.NdotL = pb.clamp(pb.neg(this.nl), 0, 1);\n        } else {\n          this.lightDir = pb.sub(pb.queryGlobal(ShaderLib.USAGE_WORLD_POSITION).xyz, this.positionRange.xyz);\n          this.$if(pb.greaterThan(pb.length(this.lightDir), this.positionRange.w), function () {\n            this.$return();\n          });\n          this.lightDir = pb.normalize(this.lightDir);\n          this.nl = pb.dot(this.surfaceData.normal, this.lightDir);\n          this.NdotL = pb.clamp(pb.neg(this.nl), 0, 1);\n        }\n        this.shadowVertex = pb.vec4(\n          pb.dot(this.global.light.lightParams[7], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n          pb.dot(this.global.light.lightParams[8], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n          pb.dot(this.global.light.lightParams[9], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n          pb.dot(this.global.light.lightParams[10], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n        );\n        this.$l.shadow = ctx.shadowMapper.computeShadow(this, this.shadowVertex, this.NdotL);\n        this.$if(pb.greaterThan(this.NdotL, 0), function(){\n          this.$l.attenuation = pb.min(pb.mul(this.lightcolor, this.NdotL), pb.vec3(this.shadow));\n          illumLight(this, lightType, lm, this.surfaceData, this.positionRange, this.directionCutoff, this.lightDir, this.attenuation);\n        });\n      });\n    }\n    pb.globalScope[funcNameIllumDirectionalShadowLight](surfaceData);\n  }\n  function illumPointShadowLight(lm: LightModel, surfaceData: PBShaderExp) {\n    if (!pb.getFunction(funcNameIllumPointShadowLight)) {\n      pb.globalScope.$function(funcNameIllumPointShadowLight, [\n        pb.struct(surfaceData.getTypeName(), 'surfaceData')], function () {\n        this.$l.positionRange = this.global.light.lightParams[0];\n        this.$l.directionCutoff = this.global.light.lightParams[1];\n        this.$l.diffuseIntensity = this.global.light.lightParams[2];\n        this.$l.lightcolor = pb.mul(this.diffuseIntensity.xyz, this.diffuseIntensity.w);\n        this.$l.lightDir = pb.vec3();\n        this.lightDir = pb.sub(pb.queryGlobal(ShaderLib.USAGE_WORLD_POSITION).xyz, this.positionRange.xyz);\n        this.$if(pb.greaterThan(pb.length(this.lightDir), this.positionRange.w), function () {\n          this.$return();\n        });\n        this.lightDir = pb.normalize(this.lightDir);\n        this.$l.nl = pb.dot(this.surfaceData.normal, this.lightDir);\n        this.$l.NdotL = pb.clamp(pb.neg(this.nl), 0, 1);\n        this.shadowBound = pb.vec4(0, 0, 1, 1);\n        this.shadowVertex = pb.vec4(\n          pb.dot(this.global.light.lightParams[7], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n          pb.dot(this.global.light.lightParams[8], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n          pb.dot(this.global.light.lightParams[9], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n          pb.dot(this.global.light.lightParams[10], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n        );\n        this.$l.shadow = ctx.shadowMapper.computeShadow(this, this.shadowVertex, this.NdotL);\n        this.$if(pb.greaterThan(this.NdotL, 0), function(){\n          this.$l.attenuation = pb.min(pb.mul(this.lightcolor, this.NdotL), pb.vec3(this.shadow));\n          illumLight(this, LIGHT_TYPE_POINT, lm, this.surfaceData, this.positionRange, this.directionCutoff, this.lightDir, this.attenuation);\n        });\n      });\n    }\n    pb.globalScope[funcNameIllumPointShadowLight](surfaceData);\n  }\n  function illumCascadedShadowLight(lm: LightModel, surfaceData: PBShaderExp) {\n    if (!pb.getFunction(funcNameIllumCascadedShadowLight)) {\n      pb.globalScope.$function(funcNameIllumCascadedShadowLight, [pb.struct(surfaceData.getTypeName(), 'surfaceData')], function () {\n        this.$l.shadowCascades = this.global.light.lightIndices[0].y;\n        this.$l.positionRange = this.global.light.lightParams[0];\n        this.$l.directionCutoff = this.global.light.lightParams[1];\n        this.$l.diffuseIntensity = this.global.light.lightParams[2];\n        this.$l.lightcolor = pb.mul(this.diffuseIntensity.xyz, this.diffuseIntensity.w);\n        if (DEBUG_CASCADED_SHADOW_MAPS) {\n          this.$l.shadowDebugColor = pb.vec3(1, 0, 1);\n          this.$l.shadowDebugColors = pb.vec3[4]();\n          this.$l.shadowDebugColors[0] = pb.vec3(1, 0, 0);\n          this.$l.shadowDebugColors[1] = pb.vec3(0, 1, 0);\n          this.$l.shadowDebugColors[2] = pb.vec3(0, 0, 1);\n          this.$l.shadowDebugColors[3] = pb.vec3(1, 1, 0);\n        }\n        this.$l.lightDir = pb.vec3();\n        this.lightDir = this.directionCutoff.xyz;\n        this.$l.nl = pb.dot(this.surfaceData.normal, this.lightDir);\n        this.$l.NdotL = pb.clamp(pb.neg(this.nl), 0, 1);\n        this.shadowBound = pb.vec4(0, 0, 1, 1);\n        this.linearDepth = lib.nonLinearDepthToLinear(this.$builtins.fragCoord.z);\n        this.splitDistances = this.global.light.lightParams[3];\n        this.comparison = pb.vec4(pb.greaterThan(pb.vec4(this.linearDepth), this.splitDistances));\n        this.cascadeFlags = pb.vec4(\n          pb.float(pb.greaterThan(this.shadowCascades, 0)),\n          pb.float(pb.greaterThan(this.shadowCascades, 1)),\n          pb.float(pb.greaterThan(this.shadowCascades, 2)),\n          pb.float(pb.greaterThan(this.shadowCascades, 3)));\n        this.split = pb.int(pb.dot(this.comparison, this.cascadeFlags));\n        if (DEBUG_CASCADED_SHADOW_MAPS) {\n          this.shadowDebugColor = this.shadowDebugColors.at(this.split);\n        }\n        this.shadowVertex = pb.vec4(\n          pb.dot(this.global.light.lightParams.at(pb.add(pb.mul(this.split, 4), 7)), this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n          pb.dot(this.global.light.lightParams.at(pb.add(pb.mul(this.split, 4), 8)), this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n          pb.dot(this.global.light.lightParams.at(pb.add(pb.mul(this.split, 4), 9)), this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n          pb.dot(this.global.light.lightParams.at(pb.add(pb.mul(this.split, 4), 10)), this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n        );\n        this.$l.shadow = ctx.shadowMapper.computeShadowCSM(this, this.shadowVertex, this.NdotL, this.split);\n        this.$if(pb.greaterThan(this.NdotL, 0), function(){\n          this.$l.attenuation = pb.min(pb.mul(this.lightcolor, this.NdotL), pb.vec3(this.shadow));\n          if (DEBUG_CASCADED_SHADOW_MAPS) {\n            this.attenuation = pb.mul(this.attenuation, this.shadowDebugColor);\n          }\n          illumLight(this, LIGHT_TYPE_DIRECTIONAL, lm, this.surfaceData, this.positionRange, this.directionCutoff, this.lightDir, this.attenuation);\n        });\n      });\n    }\n    pb.globalScope[funcNameIllumCascadedShadowLight](surfaceData);\n  }\n  function illumUnshadowedLights(lm: LightModel, surfaceData: PBShaderExp) {\n    if (!pb.getFunction(funcNameIllumUnshadowedLights)) {\n      pb.globalScope.$function(funcNameIllumUnshadowedLights, [pb.struct(surfaceData.getTypeName(), 'surfaceData')], function () {\n        this.$for(pb.int('l'), 0, this.global.light.numLights, function () {\n          this.$l.lightIndex = this.global.light.lightIndices.at(this.l);\n          this.$l.lightType = this.$l.lightIndex.x;\n          this.$l.shadowCascades = this.$l.lightIndex.y;\n          this.$l.positionRange = this.global.light.lightParams.at(pb.mul(this.l, 23));\n          this.$l.directionCutoff = this.global.light.lightParams.at(pb.add(pb.mul(this.l, 23), 1));\n          this.$l.diffuseIntensity = this.global.light.lightParams.at(pb.add(pb.mul(this.l, 23), 2));\n          this.$l.lightcolor = pb.mul(this.diffuseIntensity.xyz, this.diffuseIntensity.w);\n          this.$l.lightDir = pb.vec3();\n          this.$l.nl = pb.float();\n          this.$l.NdotL = pb.float();\n          this.$if(pb.equal(this.lightType, LIGHT_TYPE_DIRECTIONAL), function () {\n            this.lightDir = this.directionCutoff.xyz;\n            this.nl = pb.dot(this.surfaceData.normal, this.lightDir);\n            this.NdotL = pb.clamp(pb.neg(this.nl), 0, 1);\n          }).$else(function () {\n            this.lightDir = pb.sub(pb.queryGlobal(ShaderLib.USAGE_WORLD_POSITION).xyz, this.positionRange.xyz);\n            this.$if(pb.greaterThan(pb.length(this.lightDir), this.positionRange.w), function () {\n              this.$continue();\n            });\n            this.lightDir = pb.normalize(this.lightDir);\n            this.nl = pb.dot(this.surfaceData.normal, this.lightDir);\n            this.NdotL = pb.clamp(pb.neg(this.nl), 0, 1);\n          });\n          this.$if(pb.greaterThan(this.NdotL, 0), function(){\n            illumLight(this, this.lightType, lm, this.surfaceData, this.positionRange, this.directionCutoff, this.lightDir, pb.mul(this.lightcolor, this.NdotL));\n          });\n        });\n      });\n    }\n    pb.globalScope[funcNameIllumUnshadowedLights](surfaceData);\n  }\n  if (!pb.getFunction(funcNameComputeLighting)) {\n    pb.globalScope.$function(funcNameComputeLighting, [], function () {\n      const worldPosition = pb.queryGlobal(ShaderLib.USAGE_WORLD_POSITION);\n      if (!worldPosition) {\n        throw new Error('ShaderLib.computeLightingWithBRDF(): query world position failed');\n      }\n      const worldNormal = pb.queryGlobal(ShaderLib.USAGE_WORLD_NORMAL);\n      const worldTangent = pb.queryGlobal(ShaderLib.USAGE_WORLD_TANGENT);\n      const worldBinormal = pb.queryGlobal(ShaderLib.USAGE_WORLD_BINORMAL);\n      this.$l.surfaceData = lm.getSurfaceData(this, env, worldPosition, worldNormal, worldTangent, worldBinormal);\n      if (env) {\n        lm.envBRDF(env, this, this.surfaceData);\n      }\n      if (ctx.shadowMapper) {\n        if (ctx.shadowMapper.numShadowCascades > 1) {\n          illumCascadedShadowLight(lm, this.surfaceData);\n        } else if (ctx.shadowMapper.shadowMap.isTextureCube()) {\n          illumPointShadowLight(lm, this.surfaceData);\n        } else {\n          illumDirectionalShadowLight(ctx.shadowMapper.light.lightType, lm, this.surfaceData);\n        }\n      } else {\n        illumUnshadowedLights(lm, this.surfaceData);\n      }\n      this.$l.result = lm.finalComposite(this, this.surfaceData);\n      // this.$l.result = pb.add(this.lightDiffuse, this.lightSpecular);\n      this.$return(pb.vec4(this.result, this.surfaceData.diffuse.a));\n    });\n  }\n  return pb.globalScope[funcNameComputeLighting]();\n}\n\nexport function forwardComputeLightingMultiPass(scope: PBInsideFunctionScope, lm: LightModel, ctx: DrawContext): PBShaderExp {\n  const env = ctx.environment;\n  const funcNameIllumPointLight = 'stdmat_illumPointLight';\n  const funcNameIllumDirectionalLight = 'stdmat_illumDirectionalLight';\n  const funcNameIllumSpotLight = 'stdmat_illumSpotLight';\n  const funcNameIllumAllights = 'stdmat_illumAllLights';\n  const funcNameComputeLighting = 'stdmat_computeLighting';\n  const pb = scope.$builder;\n  if (!scope || !(scope instanceof PBInsideFunctionScope)) {\n    throw new Error('forwardComputeLighting() failed: forwardComputeLighting() must be called inside a function');\n  }\n  if (!lm.supportLighting()) {\n    return lm.calculateAlbedo(scope);\n  }\n  const lib = new ShaderLib(pb);\n  function illumPointLight(lm: LightModel, surfaceData: PBShaderExp, ...args: PBShaderExp[]) {\n    if (!pb.getFunction(funcNameIllumPointLight)) {\n      pb.globalScope.$function(funcNameIllumPointLight, [\n        pb.struct(surfaceData.getTypeName(), 'surfaceData'),\n        pb.vec4('lightPositionRange'),\n        pb.vec4('lightDirectionCutoff'),\n        pb.vec3('lightDir'),\n        pb.vec3('attenuation')\n      ], function () {\n        this.$l.dist = pb.distance(this.lightPositionRange.xyz, pb.queryGlobal(ShaderLib.USAGE_WORLD_POSITION).xyz);\n        this.$l.falloff = pb.max(0, pb.sub(1, pb.div(this.dist, this.lightPositionRange.w)));\n        this.$l.falloff2 = pb.mul(this.falloff, this.falloff);\n        this.$if(pb.greaterThan(this.falloff2, 0), function () {\n          lm.directBRDF(this, this.surfaceData, this.lightDir, pb.mul(this.attenuation, this.falloff2));\n        });\n      });\n    }\n    pb.globalScope[funcNameIllumPointLight](surfaceData, ...args);\n  }\n  function illumDirectionalLight(lm: LightModel, surfaceData: PBShaderExp, ...args: PBShaderExp[]) {\n    if (!pb.getFunction(funcNameIllumDirectionalLight)) {\n      pb.globalScope.$function(funcNameIllumDirectionalLight, [\n        pb.struct(surfaceData.getTypeName(), 'surfaceData'),\n        pb.vec4('lightPositionRange'),\n        pb.vec4('lightDirectionCutoff'),\n        pb.vec3('lightDir'),\n        pb.vec3('attenuation')\n      ], function () {\n        lm.directBRDF(this, this.surfaceData, this.lightDir, this.attenuation);\n      });\n    }\n    pb.globalScope[funcNameIllumDirectionalLight](surfaceData, ...args);\n  }\n  function illumSpotLight(lm: LightModel, surfaceData: PBShaderExp, ...args: PBShaderExp[]) {\n    if (!pb.getFunction(funcNameIllumSpotLight)) {\n      pb.globalScope.$function(funcNameIllumSpotLight, [\n        pb.struct(surfaceData.getTypeName(), 'surfaceData'),\n        pb.vec4('lightPositionRange'),\n        pb.vec4('lightDirectionCutoff'),\n        pb.vec3('lightDir'),\n        pb.vec3('attenuation')\n      ], function () {\n        this.$l.spotFactor = pb.dot(this.lightDir, this.lightDirectionCutoff.xyz);\n        this.spotFactor = pb.smoothStep(this.lightDirectionCutoff.w, pb.mix(this.lightDirectionCutoff.w, 1, 0.5), this.spotFactor);\n        illumPointLight(lm, this.surfaceData, this.lightPositionRange, this.lightDirectionCutoff, this.lightDir, pb.mul(this.attenuation, this.spotFactor));\n      });\n    }\n    pb.globalScope[funcNameIllumSpotLight](surfaceData, ...args);\n  }\n  function illumLight(scope: PBInsideFunctionScope, lightType: number, lm: LightModel, surfaceData: PBShaderExp, ...args: PBShaderExp[]) {\n    if (lightType === LIGHT_TYPE_DIRECTIONAL) {\n      illumDirectionalLight(lm, surfaceData, ...args);\n    } else if (lightType === LIGHT_TYPE_POINT) {\n      illumPointLight(lm, surfaceData, ...args);\n    } else {\n      illumSpotLight(lm, surfaceData, ...args);\n    }\n  }\n  function illumAllLights(lm: LightModel, surfaceData: PBShaderExp) {\n    if (!pb.getFunction(funcNameIllumAllights)) {\n      pb.globalScope.$function(funcNameIllumAllights, [pb.struct(surfaceData.getTypeName(), 'surfaceData')], function () {\n        const lightType = (ctx.renderPass as ForwardMultiRenderPass).light.lightType;\n        this.$l.positionRange = this.global.light.positionAndRange;\n        this.$l.directionCutoff = this.global.light.directionAndCutoff;\n        this.$l.diffuseIntensity = this.global.light.diffuseAndIntensity;\n        this.$l.lightcolor = pb.mul(this.diffuseIntensity.xyz, this.diffuseIntensity.w);\n        this.$l.lightDir = pb.vec3();\n        this.$l.nl = pb.float();\n        this.$l.NdotL = pb.float();\n        if (lightType === LIGHT_TYPE_DIRECTIONAL) {\n          this.lightDir = this.directionCutoff.xyz;\n          this.nl = pb.dot(this.surfaceData.normal, this.lightDir);\n          this.NdotL = pb.clamp(pb.neg(this.nl), 0, 1);\n        } else {\n          this.lightDir = pb.sub(pb.queryGlobal(ShaderLib.USAGE_WORLD_POSITION).xyz, this.positionRange.xyz);\n          this.lightDir = pb.normalize(this.lightDir);\n          this.nl = pb.dot(this.surfaceData.normal, this.lightDir);\n          this.NdotL = pb.clamp(pb.neg(this.nl), 0, 1);\n        }\n        this.$l.attenuation = pb.mul(this.lightcolor, this.NdotL);\n        if (ctx.shadowMapper) {\n          this.shadowBound = pb.vec4(0, 0, 1, 1);\n          this.shadowVertex = pb.vec4();\n          if (ctx.shadowMapper.numShadowCascades > 1) {\n            this.linearDepth = lib.nonLinearDepthToLinear(this.$builtins.fragCoord.z);\n            this.splitDistances = this.global.light.splitDistances;\n            this.comparison = pb.vec4(pb.greaterThan(pb.vec4(this.linearDepth), this.splitDistances));\n            this.cascadeFlags = pb.vec4(\n              pb.float(pb.greaterThan(ctx.shadowMapper.numShadowCascades, 0)),\n              pb.float(pb.greaterThan(ctx.shadowMapper.numShadowCascades, 1)),\n              pb.float(pb.greaterThan(ctx.shadowMapper.numShadowCascades, 2)),\n              pb.float(pb.greaterThan(ctx.shadowMapper.numShadowCascades, 3)));\n            this.split = pb.int(pb.dot(this.comparison, this.cascadeFlags));\n            this.$for(pb.int('cascade'), 0, 4, function () {\n              this.$if(pb.equal(this.cascade, this.split), function () {\n                this.shadowVertex = pb.vec4(\n                  pb.dot(this.global.light.shadowMatrix.at(pb.mul(this.cascade, 4)), this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n                  pb.dot(this.global.light.shadowMatrix.at(pb.add(pb.mul(this.cascade, 4), 1)), this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n                  pb.dot(this.global.light.shadowMatrix.at(pb.add(pb.mul(this.cascade, 4), 2)), this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n                  pb.dot(this.global.light.shadowMatrix.at(pb.add(pb.mul(this.cascade, 4), 3)), this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n                );\n                this.$break();\n              });\n            });\n            this.$l.shadow = ctx.shadowMapper.computeShadowCSM(this, this.shadowVertex, this.NdotL, this.split);\n          } else {\n            this.shadowVertex = pb.vec4(\n              pb.dot(this.global.light.shadowMatrix[0], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n              pb.dot(this.global.light.shadowMatrix[1], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n              pb.dot(this.global.light.shadowMatrix[2], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n              pb.dot(this.global.light.shadowMatrix[3], this.$query(ShaderLib.USAGE_WORLD_POSITION)),\n            );\n            this.$l.shadow = ctx.shadowMapper.computeShadow(this, this.shadowVertex, this.NdotL);\n          }\n          this.attenuation = pb.min(this.attenuation, pb.vec3(this.shadow));\n        }\n        this.$if(pb.greaterThan(this.NdotL, 0), function () {\n          illumLight(this, lightType, lm, this.surfaceData, this.positionRange, this.directionCutoff, this.lightDir, this.attenuation);\n        });\n      });\n    }\n    pb.globalScope[funcNameIllumAllights](surfaceData);\n  }\n  if (!pb.getFunction(funcNameComputeLighting)) {\n    pb.globalScope.$function(funcNameComputeLighting, [], function () {\n      const worldPosition = pb.queryGlobal(ShaderLib.USAGE_WORLD_POSITION);\n      if (!worldPosition) {\n        throw new Error('ShaderLib.computeLightingWithBRDF(): query world position failed');\n      }\n      const worldNormal = pb.queryGlobal(ShaderLib.USAGE_WORLD_NORMAL);\n      const worldTangent = pb.queryGlobal(ShaderLib.USAGE_WORLD_TANGENT);\n      const worldBinormal = pb.queryGlobal(ShaderLib.USAGE_WORLD_BINORMAL);\n      this.$l.surfaceData = lm.getSurfaceData(this, env, worldPosition, worldNormal, worldTangent, worldBinormal);\n      illumAllLights(lm, this.surfaceData);\n      if (env) {\n        lm.envBRDF(env, this, this.surfaceData);\n      }\n      this.$l.result = lm.finalComposite(this, this.surfaceData);\n      // this.$l.result = pb.add(this.lightDiffuse, this.lightSpecular);\n      this.$return(pb.vec4(this.result, this.surfaceData.diffuse.a));\n    });\n  }\n  return pb.globalScope[funcNameComputeLighting]();\n}\n"],"names":[],"mappings":"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"}