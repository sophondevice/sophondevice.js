{"version":3,"file":"model.js","sources":["../../../../../libs/device/src/scene/asset/model.ts"],"sourcesContent":["import { Matrix4x4, Quaternion, Vector3, Vector4 } from \"@sophon/base\";\r\nimport type { Primitive } from \"../primitive\";\r\nimport type { Texture2D, TextureSampler } from \"../../device\";\r\nimport type { StandardMaterial } from \"../materiallib\";\r\nimport type { Interpolator } from \"../interpolator\";\r\nimport type { TypedArray } from \"../../misc\";\r\n\r\nexport class AssetModelObject {\r\n  name: string;\r\n  constructor(name: string) {\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nexport interface MaterialTextureInfo {\r\n  texture: Texture2D;\r\n  sampler: TextureSampler;\r\n  texCoord: number;\r\n  transform: Matrix4x4;\r\n}\r\n\r\nexport interface AssetMaterialCommon {\r\n  vertexColor?: boolean;\r\n  vertexNormal?: boolean;\r\n  useTangent?: boolean;\r\n  alphaMode?: 'blend' | 'mask';\r\n  alphaCutoff?: number;\r\n  doubleSided?: boolean;\r\n  normalMap?: MaterialTextureInfo;\r\n  bumpScale?: number;\r\n  emissiveMap?: MaterialTextureInfo;\r\n  emissiveColor?: Vector3;\r\n  emissiveStrength?: number;\r\n  occlusionMap?: MaterialTextureInfo;\r\n  occlusionStrength?: number;\r\n}\r\n\r\nexport interface AssetMaterial {\r\n  type: string;\r\n  common: AssetMaterialCommon;\r\n}\r\n\r\nexport interface AssetUnlitMaterial extends AssetMaterial {\r\n  diffuseMap?: MaterialTextureInfo;\r\n  diffuse?: Vector4;\r\n}\r\n\r\nexport interface AssetMaterialSheen {\r\n  sheenColorFactor?: Vector3;\r\n  sheenColorMap?: MaterialTextureInfo;\r\n  sheenRoughnessFactor?: number;\r\n  sheenRoughnessMap?: MaterialTextureInfo;\r\n}\r\n\r\nexport interface AssetMaterialClearcoat {\r\n  clearCoatFactor?: number;\r\n  clearCoatIntensityMap?: MaterialTextureInfo;\r\n  clearCoatRoughnessFactor?: number;\r\n  clearCoatRoughnessMap?: MaterialTextureInfo;\r\n  clearCoatNormalMap?: MaterialTextureInfo;\r\n}\r\n\r\nexport interface AssetPBRMaterialCommon extends AssetUnlitMaterial {\r\n  ior?: number;\r\n}\r\n\r\nexport interface AssetPBRMaterialMR extends AssetPBRMaterialCommon {\r\n  metallic?: number;\r\n  roughness?: number;\r\n  metallicMap?: MaterialTextureInfo;\r\n  metallicIndex?: number;\r\n  roughnessIndex?: number;\r\n  specularMap?: MaterialTextureInfo;\r\n  specularColorMap?: MaterialTextureInfo;\r\n  specularFactor?: Vector4;\r\n  sheen?: AssetMaterialSheen;\r\n  clearcoat?: AssetMaterialClearcoat;\r\n}\r\n\r\nexport interface AssetPBRMaterialSG extends AssetPBRMaterialCommon {\r\n  specular?: Vector3;\r\n  glossness?: number;\r\n  specularGlossnessMap?: MaterialTextureInfo;\r\n}\r\n\r\nexport interface AssetSubMeshData {\r\n  primitive: Primitive,\r\n  material: StandardMaterial,\r\n  rawPositions: Float32Array;\r\n  rawBlendIndices: TypedArray;\r\n  rawJointWeights: TypedArray;\r\n}\r\n\r\nexport interface AssetMeshData {\r\n  subMeshes: AssetSubMeshData[];\r\n}\r\n\r\nexport interface AssetAnimationTrack {\r\n  node: AssetHierarchyNode;\r\n  interpolator: Interpolator;\r\n}\r\n\r\nexport interface AssetAnimationData {\r\n  name: string;\r\n  tracks: AssetAnimationTrack[];\r\n  skeletons: AssetSkeleton[];\r\n  nodes: AssetHierarchyNode[];\r\n}\r\n\r\nexport interface AssetSkeletalAnimationTrack extends AssetAnimationTrack {\r\n  skeleton: AssetSkeleton;\r\n  keyFrames: { [t: number]: { translation: Vector3, rotation: Quaternion, scale: Vector3 }[] };\r\n}\r\n\r\nexport interface AssetRotationTrack extends AssetAnimationTrack {\r\n  keyFrames: { [t: number]: Quaternion[] };\r\n  nodes: number[];\r\n}\r\n\r\nexport interface AssetTranslationTrack extends AssetAnimationTrack {\r\n  keyFrames: { [t: number]: Vector3[] };\r\n  nodes: number[];\r\n}\r\n\r\nexport interface AssetScaleTrack extends AssetAnimationTrack {\r\n  keyFrames: { [t: number]: Vector3[] };\r\n  nodes: number[];\r\n}\r\n\r\nexport class AssetHierarchyNode extends AssetModelObject {\r\n  private _parent: AssetHierarchyNode;\r\n  private _position: Vector3;\r\n  private _rotation: Quaternion;\r\n  private _scaling: Vector3;\r\n  private _mesh: AssetMeshData;\r\n  private _skeleton: AssetSkeleton;\r\n  private _attachToSkeleton: AssetSkeleton;\r\n  private _attachIndex: number;\r\n  private _meshAttached: boolean;\r\n  private _matrix: Matrix4x4;\r\n  private _worldMatrix: Matrix4x4;\r\n  private _children: AssetHierarchyNode[];\r\n  constructor(name: string, parent?: AssetHierarchyNode) {\r\n    super(name);\r\n    this._parent = null;\r\n    this._position = Vector3.zero();\r\n    this._rotation = Quaternion.identity();\r\n    this._scaling = Vector3.one();\r\n    this._children = [];\r\n    this._mesh = null;\r\n    this._skeleton = null;\r\n    this._attachToSkeleton = null;\r\n    this._meshAttached = false;\r\n    this._attachIndex = -1;\r\n    this._matrix = null;\r\n    this._worldMatrix = null;\r\n    parent?.addChild(this);\r\n  }\r\n  get parent(): AssetHierarchyNode {\r\n    return this._parent;\r\n  }\r\n  get matrix(): Matrix4x4 {\r\n    return this._matrix;\r\n  }\r\n  get worldMatrix(): Matrix4x4 {\r\n    return this._worldMatrix;\r\n  }\r\n  get mesh(): AssetMeshData {\r\n    return this._mesh;\r\n  }\r\n  set mesh(data: AssetMeshData) {\r\n    this._mesh = data;\r\n    this.setMeshAttached();\r\n  }\r\n  get skeleton(): AssetSkeleton {\r\n    return this._skeleton;\r\n  }\r\n  set skeleton(skeleton: AssetSkeleton) {\r\n    this._skeleton = skeleton;\r\n  }\r\n  get position(): Vector3 {\r\n    return this._position;\r\n  }\r\n  set position(val: Vector3) {\r\n    this._position = val;\r\n  }\r\n  get rotation(): Quaternion {\r\n    return this._rotation;\r\n  }\r\n  set rotation(val: Quaternion) {\r\n    this._rotation = val;\r\n  }\r\n  get scaling(): Vector3 {\r\n    return this._scaling;\r\n  }\r\n  set scaling(val: Vector3) {\r\n    this._scaling = val;\r\n  }\r\n  get meshAttached(): boolean {\r\n    return this._meshAttached;\r\n  }\r\n  get children(): AssetHierarchyNode[] {\r\n    return this._children;\r\n  }\r\n  get skeletonAttached(): AssetSkeleton {\r\n    return this._attachToSkeleton;\r\n  }\r\n  get attachIndex(): number {\r\n    return this._attachIndex;\r\n  }\r\n  computeTransforms(parentTransform: Matrix4x4) {\r\n    this._matrix = Matrix4x4.scaling(this._scaling).rotateLeft(this._rotation).translateLeft(this._position);\r\n    this._worldMatrix = parentTransform ? Matrix4x4.multiply(parentTransform, this._matrix) : new Matrix4x4(this._matrix);\r\n    for (const child of this._children) {\r\n      child.computeTransforms(this._worldMatrix);\r\n    }\r\n  }\r\n  addChild(child: AssetHierarchyNode) {\r\n    if (!child || child.parent) {\r\n      throw new Error('AssetHierarchyNode.addChild(): invalid child node');\r\n    }\r\n    this._children.push(child);\r\n    child._parent = this;\r\n    if (child.meshAttached) {\r\n      this.setMeshAttached();\r\n    }\r\n  }\r\n  removeChild(child: AssetHierarchyNode) {\r\n    const index = this._children.indexOf(child);\r\n    if (index < 0) {\r\n      throw new Error('AssetHierarchyNode.removeChild(): invalid child node');\r\n    }\r\n    this._children[index]._parent = null;\r\n    this._children.splice(index, 1);\r\n  }\r\n  attachToSkeleton(skeleton: AssetSkeleton, index: number) {\r\n    if (this._attachToSkeleton && skeleton !== this._attachToSkeleton) {\r\n      throw new Error(`joint can not attached to multiple skeletons`);\r\n    }\r\n    this._attachToSkeleton = skeleton;\r\n    this._attachIndex = index;\r\n  }\r\n  private setMeshAttached() {\r\n    this._meshAttached = true;\r\n    this._parent?.setMeshAttached();\r\n  }\r\n}\r\n\r\nexport class AssetSkeleton extends AssetModelObject {\r\n  pivot: AssetHierarchyNode;\r\n  joints: AssetHierarchyNode[];\r\n  inverseBindMatrices: Matrix4x4[];\r\n  bindPoseMatrices: Matrix4x4[];\r\n  constructor(name: string) {\r\n    super(name);\r\n    this.name = name;\r\n    this.pivot = null;\r\n    this.joints = [];\r\n    this.inverseBindMatrices = [];\r\n    this.bindPoseMatrices = [];\r\n  }\r\n  addJoint(joint: AssetHierarchyNode, inverseBindMatrix: Matrix4x4) {\r\n    joint.attachToSkeleton(this, this.joints.length);\r\n    this.joints.push(joint);\r\n    this.inverseBindMatrices.push(inverseBindMatrix);\r\n    this.bindPoseMatrices.push(joint.worldMatrix);\r\n  }\r\n}\r\n\r\nexport class AssetScene extends AssetModelObject {\r\n  rootNodes: AssetHierarchyNode[];\r\n  constructor(name: string) {\r\n    super(name);\r\n    this.rootNodes = [];\r\n  }\r\n}\r\nexport class SharedModel {\r\n  private _name: string;\r\n  private _skeletons: AssetSkeleton[];\r\n  private _nodes: AssetHierarchyNode[];\r\n  private _animations: AssetAnimationData[];\r\n  private _scenes: AssetScene[];\r\n  private _activeScene: number;\r\n  constructor(name?: string) {\r\n    this._name = name || '';\r\n    this._skeletons = [];\r\n    this._nodes = [];\r\n    this._scenes = [];\r\n    this._animations = [];\r\n    this._activeScene = -1;\r\n  }\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n  set name(val: string) {\r\n    this._name = val;\r\n  }\r\n  get scenes(): AssetScene[] {\r\n    return this._scenes;\r\n  }\r\n  get animations(): AssetAnimationData[] {\r\n    return this._animations;\r\n  }\r\n  get skeletons(): AssetSkeleton[] {\r\n    return this._skeletons;\r\n  }\r\n  get nodes(): AssetHierarchyNode[] {\r\n    return this._nodes;\r\n  }\r\n  get activeScene(): number {\r\n    return this._activeScene;\r\n  }\r\n  set activeScene(val: number) {\r\n    this._activeScene = val;\r\n  }\r\n  addNode(parent: AssetHierarchyNode, index: number, name: string): AssetHierarchyNode {\r\n    const childNode = new AssetHierarchyNode(name, parent);\r\n    this._nodes[index] = childNode;\r\n    return childNode;\r\n  }\r\n  addSkeleton(skeleton: AssetSkeleton) {\r\n    this._skeletons.push(skeleton);\r\n  }\r\n  addAnimation(animation: AssetAnimationData) {\r\n    this._animations.push(animation);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}