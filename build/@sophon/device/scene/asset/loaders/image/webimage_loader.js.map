{"version":3,"file":"webimage_loader.js","sources":["../../../../../../../libs/device/src/scene/asset/loaders/image/webimage_loader.ts"],"sourcesContent":["import { BaseTexture, TextureCreationOptions } from '../../../../device/gpuobject';\nimport { AbstractTextureLoader } from '../loader';\nimport type { AssetManager } from '../../assetmanager';\n\nexport class WebImageLoader extends AbstractTextureLoader {\n  supportExtension(ext: string): boolean {\n    return ext === '.jpg' || ext === '.jpeg' || ext === '.png';\n  }\n  supportMIMEType(mimeType: string): boolean {\n    return mimeType === 'image/jpg' || mimeType === 'image/jpeg' || mimeType === 'image/png';\n  }\n  async load(assetManager: AssetManager, filename: string, mimeType: string, data: ArrayBuffer, srgb: boolean, noMipmap: boolean, texture?: BaseTexture): Promise<BaseTexture> {\n    return new Promise<BaseTexture>((resolve, reject) => {\n      if (!mimeType) {\n        reject('unknown image file type');\n      }\n      const src = URL.createObjectURL(new Blob([data], { type: mimeType }));\n      const img = document.createElement('img');\n      img.src = src;\n\n      img.onload = () => {\n        createImageBitmap(img, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none',\n        }).then(bm => {\n          const options: TextureCreationOptions = {\n            colorSpace: srgb ? 'srgb' : 'linear',\n            noMipmap: !!noMipmap,\n            texture: texture\n          };\n          const tex = assetManager.device.createTexture2DFromImage(bm, options);\n          if (tex) {\n            resolve(tex);\n          } else {\n            reject('create texture from image element failed');\n          }\n        });\n      };\n      img.onerror = err => {\n        reject(err);\n      };\n    });\n  }\n}\n\n"],"names":[],"mappings":";;;AAIM,MAAO,cAAe,SAAQ,qBAAqB,CAAA;AACvD,IAAA,gBAAgB,CAAC,GAAW,EAAA;QAC1B,OAAO,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,MAAM,CAAC;KAC5D;AACD,IAAA,eAAe,CAAC,QAAgB,EAAA;QAC9B,OAAO,QAAQ,KAAK,WAAW,IAAI,QAAQ,KAAK,YAAY,IAAI,QAAQ,KAAK,WAAW,CAAC;KAC1F;AACD,IAAA,MAAM,IAAI,CAAC,YAA0B,EAAE,QAAgB,EAAE,QAAgB,EAAE,IAAiB,EAAE,IAAa,EAAE,QAAiB,EAAE,OAAqB,EAAA;QACnJ,OAAO,IAAI,OAAO,CAAc,CAAC,OAAO,EAAE,MAAM,KAAI;YAClD,IAAI,CAAC,QAAQ,EAAE;gBACb,MAAM,CAAC,yBAAyB,CAAC,CAAC;AACnC,aAAA;YACD,MAAM,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;YACtE,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC1C,YAAA,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;AAEd,YAAA,GAAG,CAAC,MAAM,GAAG,MAAK;gBAChB,iBAAiB,CAAC,GAAG,EAAE;AACrB,oBAAA,gBAAgB,EAAE,MAAM;AACxB,oBAAA,oBAAoB,EAAE,MAAM;AAC7B,iBAAA,CAAC,CAAC,IAAI,CAAC,EAAE,IAAG;AACX,oBAAA,MAAM,OAAO,GAA2B;wBACtC,UAAU,EAAE,IAAI,GAAG,MAAM,GAAG,QAAQ;wBACpC,QAAQ,EAAE,CAAC,CAAC,QAAQ;AACpB,wBAAA,OAAO,EAAE,OAAO;qBACjB,CAAC;AACF,oBAAA,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,wBAAwB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;AACtE,oBAAA,IAAI,GAAG,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,CAAC;AACd,qBAAA;AAAM,yBAAA;wBACL,MAAM,CAAC,0CAA0C,CAAC,CAAC;AACpD,qBAAA;AACH,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC;AACF,YAAA,GAAG,CAAC,OAAO,GAAG,GAAG,IAAG;gBAClB,MAAM,CAAC,GAAG,CAAC,CAAC;AACd,aAAC,CAAC;AACJ,SAAC,CAAC,CAAC;KACJ;AACF;;;;"}