{"version":3,"file":"mesh.js","sources":["../../../../libs/device/src/scene/mesh.ts"],"sourcesContent":["import { Matrix4x4 } from '@sophon/base';\nimport { GraphNode } from './graph_node';\nimport { BoxFrameShape, BoxShape, IBoxCreationOptions, PlaneShape, SphereShape } from './shape';\nimport { LambertLightModel, StandardMaterial } from './materiallib';\nimport { RenderPass } from './renderers';\nimport type { XForm } from './xform';\nimport type { Primitive } from './primitive';\nimport type { SceneNode } from './scene_node';\nimport type { Scene } from './scene';\nimport type { Material } from './material';\nimport type { BatchDrawable, DrawContext } from './drawable';\nimport type { BoundingBox, BoundingVolume } from './bounding_volume';\nimport type { Device, Texture2D } from '../device';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class Mesh extends GraphNode implements BatchDrawable {\n  /** @internal */\n  private _primitive: Primitive;\n  /** @internal */\n  private _material: Material;\n  /** @internal */\n  protected _castShadow: boolean;\n  /** @internal */\n  protected _bboxChangeCallback: () => void;\n  /** @internal */\n  protected _animatedBoundingBox: BoundingBox;\n  /** @internal */\n  protected _boneMatrices: Texture2D;\n  /** @internal */\n  protected _invBindMatrix: Matrix4x4;\n  /** @internal */\n  protected _instanceHash: string;\n  /** @internal */\n  protected _batchable: boolean;\n  /** @internal */\n  protected _boundingBoxNode: Mesh;\n  constructor(scene: Scene, parent?: SceneNode) {\n    super(scene, parent);\n    this._primitive = null;\n    this._material = null;\n    this._castShadow = true;\n    this._animatedBoundingBox = null;\n    this._boneMatrices = null;\n    this._invBindMatrix = null;\n    this._instanceHash = null;\n    this._boundingBoxNode = null;\n    this._batchable = scene.device.getDeviceType() !== 'webgl';\n    this._bboxChangeCallback = this._onBoundingboxChange.bind(this);\n  }\n  getInstanceId(renderPass: RenderPass): string {\n    return this._instanceHash;\n  }\n  get castShadow(): boolean {\n    return this._castShadow;\n  }\n  set castShadow(b: boolean) {\n    this._castShadow = b;\n  }\n  get primitive(): Primitive {\n    return this._primitive;\n  }\n  set primitive(prim: Primitive) {\n    if (prim !== this._primitive) {\n      if (this._primitive) {\n        this._primitive.removeBoundingboxChangeCallback(this._bboxChangeCallback);\n      }\n      this._primitive = prim || null;\n      if (this._primitive) {\n        this._primitive.addBoundingboxChangeCallback(this._bboxChangeCallback);\n      }\n      this._instanceHash = (this._primitive && this._material) ? `${this.constructor.name}:${this._scene.id}:${this._primitive.id}:${this._material.id}` : null;\n      this.invalidateBoundingVolume();\n    }\n  }\n  get material(): Material {\n    return this._material;\n  }\n  set material(m: Material) {\n    if (this._material !== m) {\n      this._material = m;\n      this._instanceHash = (this._primitive && this._material) ? `${this.constructor.name}:${this._scene.id}:${this._primitive.id}:${this._material.id}` : null;\n    }\n  }\n  get drawBoundingBox(): boolean {\n    return !!this._boundingBoxNode;\n  }\n  set drawBoundingBox(val: boolean) {\n    if (!!this._boundingBoxNode !== !!val) {\n      if (!val) {\n        this._boundingBoxNode.remove();\n        this._boundingBoxNode = null;\n      } else {\n        this._boundingBoxNode = Mesh.unitBoxFrame(this._scene, this);\n        this._boundingBoxNode.scaling.assign(this.getBoundingVolume().toAABB().size.getArray());\n        this._boundingBoxNode.position.assign(this.getBoundingVolume().toAABB().minPoint.getArray());\n      }\n    }\n  }\n  isMesh(): boolean {\n    return true;\n  }\n  setAnimatedBoundingBox(bbox: BoundingBox) {\n    this._animatedBoundingBox = bbox;\n    this.invalidateBoundingVolume();\n  }\n  setBoneMatrices(matrices: Texture2D) {\n    this._boneMatrices = matrices;\n  }\n  setInvBindMatrix(matrix: Matrix4x4) {\n    this._invBindMatrix = matrix;\n  }\n  isBatchable(): this is BatchDrawable {\n    return this._batchable && !this._boneMatrices;\n  }\n  dispose() {\n    this._primitive = null;\n    this._material = null;\n    super.dispose();\n  }\n  // Drawable interface\n  isTransparency(): boolean {\n    return !!this.material?.isTransparent();\n  }\n  isUnlit(): boolean {\n    return !this.material?.supportLighting();\n  }\n  draw(ctx: DrawContext) {\n    this.material.draw(this.primitive, ctx);\n  }\n  getBoneMatrices(): Texture2D {\n    return this._boneMatrices;\n  }\n  getInvBindMatrix(): Matrix4x4 {\n    return this._invBindMatrix;\n  }\n  getXForm(): XForm {\n    // mesh transform should be ignored when skinned\n    return this;\n  }\n  /** @internal */\n  computeBoundingVolume(bv: BoundingVolume): BoundingVolume {\n    let bbox: BoundingVolume;\n    if (this._animatedBoundingBox) {\n      bbox = this._animatedBoundingBox;\n    } else {\n      const primitive = this.primitive;\n      bbox = primitive ? primitive.getBoundingVolume() : null;\n    }\n    if (bbox && this._boundingBoxNode) {\n      this._boundingBoxNode.scaling.assign(bbox.toAABB().size.getArray());\n      this._boundingBoxNode.position.assign(bbox.toAABB().minPoint.getArray());\n    }\n    return bbox;\n  }\n  /** @internal */\n  private _onBoundingboxChange() {\n    this.invalidateBoundingVolume();\n  }\n  private static _defaultMaterial: StandardMaterial = null;\n  private static _defaultSphere: Primitive = null;\n  private static _defaultBox: Primitive = null;\n  private static _defaultBoxFrame: Primitive = null;\n  private static _getDefaultMaterial(device: Device): StandardMaterial {\n    if (!this._defaultMaterial) {\n      this._defaultMaterial = new StandardMaterial(device);\n      this._defaultMaterial.lightModel = new LambertLightModel();\n    }\n    return this._defaultMaterial;\n  }\n  static unitSphere(scene: Scene, parent?: SceneNode) {\n    if (!this._defaultSphere) {\n      this._defaultSphere = new SphereShape(scene.device, { radius: 1 });\n    }\n    const mesh = new Mesh(scene, parent);\n    mesh.primitive = this._defaultSphere;\n    mesh.material = this._getDefaultMaterial(scene.device);\n    return mesh;\n  }\n  static unitBox(scene: Scene, parent?: SceneNode) {\n    if (!this._defaultBox) {\n      this._defaultBox = new BoxShape(scene.device, { size: 1 });\n    }\n    const mesh = new Mesh(scene, parent);\n    mesh.primitive = this._defaultBox;\n    mesh.material = this._getDefaultMaterial(scene.device);\n    return mesh;\n  }\n  static unitBoxFrame(scene: Scene, parent?: SceneNode) {\n    if (!this._defaultBoxFrame) {\n      this._defaultBoxFrame = new BoxFrameShape(scene.device, { size: 1 });\n    }\n    const mesh = new Mesh(scene, parent);\n    mesh.primitive = this._defaultBoxFrame;\n    mesh.material = this._getDefaultMaterial(scene.device);\n    return mesh;\n  }\n}\n\nexport class BoxMesh extends Mesh {\n  constructor(\n    scene: Scene,\n    options?: IBoxCreationOptions & { material?: Material },\n  ) {\n    super(scene);\n    this.primitive = new BoxShape(scene.device, options);\n    this.material = options.material;\n    if (!this.material) {\n      const stdMat = new StandardMaterial(scene.device);\n      stdMat.lightModel = new LambertLightModel();\n      this.material = stdMat;\n    }\n  }\n}\n\nexport class PlaneMesh extends Mesh {\n  constructor(\n    scene: Scene,\n    options?: {\n      size: number;\n      sizeX?: number;\n      sizeY?: number;\n      material?: Material;\n    },\n  ) {\n    super(scene);\n    this.primitive = new PlaneShape(scene.device, options);\n    this.material = options.material;\n    if (!this.material) {\n      const stdMat = new StandardMaterial(scene.device);\n      stdMat.lightModel = new LambertLightModel();\n      this.material = stdMat;\n    }\n  }\n}\n\nexport class SphereMesh extends Mesh {\n  constructor(\n    scene: Scene,\n    options?: {\n      radius?: number;\n      verticalDetail?: number;\n      horizonalDetail?: number;\n      material?: Material;\n    },\n  ) {\n    super(scene);\n    this.primitive = new SphereShape(scene.device, options);\n    this.material = options.material;\n    if (!this.material) {\n      const stdMat = new StandardMaterial(scene.device);\n      stdMat.lightModel = new LambertLightModel();\n      this.material = stdMat;\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAeM,MAAO,IAAK,SAAQ,SAAS,CAAA;AAEzB,IAAA,UAAU,CAAY;AAEtB,IAAA,SAAS,CAAW;AAElB,IAAA,WAAW,CAAU;AAErB,IAAA,mBAAmB,CAAa;AAEhC,IAAA,oBAAoB,CAAc;AAElC,IAAA,aAAa,CAAY;AAEzB,IAAA,cAAc,CAAY;AAE1B,IAAA,aAAa,CAAS;AAEtB,IAAA,UAAU,CAAU;AAEpB,IAAA,gBAAgB,CAAO;IACjC,WAAY,CAAA,KAAY,EAAE,MAAkB,EAAA;AAC1C,QAAA,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACrB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;AACjC,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC3B,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,KAAK,OAAO,CAAC;QAC3D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjE;AACD,IAAA,aAAa,CAAC,UAAsB,EAAA;QAClC,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;AACD,IAAA,IAAI,UAAU,GAAA;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IACD,IAAI,UAAU,CAAC,CAAU,EAAA;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;KACtB;AACD,IAAA,IAAI,SAAS,GAAA;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IACD,IAAI,SAAS,CAAC,IAAe,EAAA;AAC3B,QAAA,IAAI,IAAI,KAAK,IAAI,CAAC,UAAU,EAAE;YAC5B,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,UAAU,CAAC,+BAA+B,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAC3E,aAAA;AACD,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC;YAC/B,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,UAAU,CAAC,4BAA4B,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AACxE,aAAA;YACD,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,IAAI,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAA,CAAA,EAAI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA,CAAA,EAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAA,CAAA,EAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAA,CAAE,GAAG,IAAI,CAAC;YAC1J,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACjC,SAAA;KACF;AACD,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,CAAW,EAAA;AACtB,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;AACxB,YAAA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,IAAI,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAA,CAAA,EAAI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA,CAAA,EAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAA,CAAA,EAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAA,CAAE,GAAG,IAAI,CAAC;AAC3J,SAAA;KACF;AACD,IAAA,IAAI,eAAe,GAAA;AACjB,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;KAChC;IACD,IAAI,eAAe,CAAC,GAAY,EAAA;QAC9B,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,CAAC,CAAC,GAAG,EAAE;YACrC,IAAI,CAAC,GAAG,EAAE;AACR,gBAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;AAC/B,gBAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC9B,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC7D,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACxF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC9F,aAAA;AACF,SAAA;KACF;IACD,MAAM,GAAA;AACJ,QAAA,OAAO,IAAI,CAAC;KACb;AACD,IAAA,sBAAsB,CAAC,IAAiB,EAAA;AACtC,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;AACD,IAAA,eAAe,CAAC,QAAmB,EAAA;AACjC,QAAA,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;KAC/B;AACD,IAAA,gBAAgB,CAAC,MAAiB,EAAA;AAChC,QAAA,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;KAC9B;IACD,WAAW,GAAA;QACT,OAAO,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;KAC/C;IACD,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,KAAK,CAAC,OAAO,EAAE,CAAC;KACjB;IAED,cAAc,GAAA;QACZ,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,CAAC;KACzC;IACD,OAAO,GAAA;AACL,QAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,eAAe,EAAE,CAAC;KAC1C;AACD,IAAA,IAAI,CAAC,GAAgB,EAAA;QACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;KACzC;IACD,eAAe,GAAA;QACb,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IACD,gBAAgB,GAAA;QACd,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IACD,QAAQ,GAAA;AAEN,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,qBAAqB,CAAC,EAAkB,EAAA;AACtC,QAAA,IAAI,IAAoB,CAAC;QACzB,IAAI,IAAI,CAAC,oBAAoB,EAAE;AAC7B,YAAA,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;AAClC,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACjC,YAAA,IAAI,GAAG,SAAS,GAAG,SAAS,CAAC,iBAAiB,EAAE,GAAG,IAAI,CAAC;AACzD,SAAA;AACD,QAAA,IAAI,IAAI,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACjC,YAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AACpE,YAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC1E,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;IAEO,oBAAoB,GAAA;QAC1B,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;AACO,IAAA,OAAO,gBAAgB,GAAqB,IAAI,CAAC;AACjD,IAAA,OAAO,cAAc,GAAc,IAAI,CAAC;AACxC,IAAA,OAAO,WAAW,GAAc,IAAI,CAAC;AACrC,IAAA,OAAO,gBAAgB,GAAc,IAAI,CAAC;IAC1C,OAAO,mBAAmB,CAAC,MAAc,EAAA;AAC/C,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC;YACrD,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAC5D,SAAA;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;AACD,IAAA,OAAO,UAAU,CAAC,KAAY,EAAE,MAAkB,EAAA;AAChD,QAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AACxB,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;AACpE,SAAA;QACD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACvD,QAAA,OAAO,IAAI,CAAC;KACb;AACD,IAAA,OAAO,OAAO,CAAC,KAAY,EAAE,MAAkB,EAAA;AAC7C,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACrB,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5D,SAAA;QACD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACvD,QAAA,OAAO,IAAI,CAAC;KACb;AACD,IAAA,OAAO,YAAY,CAAC,KAAY,EAAE,MAAkB,EAAA;AAClD,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAC1B,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AACtE,SAAA;QACD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACvD,QAAA,OAAO,IAAI,CAAC;KACb;;AAGG,MAAO,OAAQ,SAAQ,IAAI,CAAA;IAC/B,WACE,CAAA,KAAY,EACZ,OAAuD,EAAA;QAEvD,KAAK,CAAC,KAAK,CAAC,CAAC;AACb,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACrD,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACjC,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,MAAM,MAAM,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAClD,YAAA,MAAM,CAAC,UAAU,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAC5C,YAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;AACxB,SAAA;KACF;AACF,CAAA;AAEK,MAAO,SAAU,SAAQ,IAAI,CAAA;IACjC,WACE,CAAA,KAAY,EACZ,OAKC,EAAA;QAED,KAAK,CAAC,KAAK,CAAC,CAAC;AACb,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACvD,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACjC,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,MAAM,MAAM,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAClD,YAAA,MAAM,CAAC,UAAU,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAC5C,YAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;AACxB,SAAA;KACF;AACF,CAAA;AAEK,MAAO,UAAW,SAAQ,IAAI,CAAA;IAClC,WACE,CAAA,KAAY,EACZ,OAKC,EAAA;QAED,KAAK,CAAC,KAAK,CAAC,CAAC;AACb,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACxD,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACjC,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,MAAM,MAAM,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAClD,YAAA,MAAM,CAAC,UAAU,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAC5C,YAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;AACxB,SAAA;KACF;AACF;;;;"}