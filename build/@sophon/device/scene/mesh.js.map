{"version":3,"file":"mesh.js","sources":["../../../../libs/device/src/scene/mesh.ts"],"sourcesContent":["import { Matrix4x4 } from '@sophon/base';\r\nimport { GraphNode } from './graph_node';\r\nimport { BoxFrameShape, BoxShape, IBoxCreationOptions, PlaneShape, SphereShape } from './shape';\r\nimport { LambertLightModel, StandardMaterial } from './materiallib';\r\nimport { RenderPass } from './renderers';\r\nimport type { XForm } from './xform';\r\nimport type { Primitive } from './primitive';\r\nimport type { SceneNode } from './scene_node';\r\nimport type { Scene } from './scene';\r\nimport type { Material } from './material';\r\nimport type { BatchDrawable, DrawContext } from './drawable';\r\nimport type { BoundingBox, BoundingVolume } from './bounding_volume';\r\nimport type { Device, Texture2D } from '../device';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport class Mesh extends GraphNode implements BatchDrawable {\r\n  /** @internal */\r\n  private _primitive: Primitive;\r\n  /** @internal */\r\n  private _material: Material;\r\n  /** @internal */\r\n  protected _castShadow: boolean;\r\n  /** @internal */\r\n  protected _bboxChangeCallback: () => void;\r\n  /** @internal */\r\n  protected _animatedBoundingBox: BoundingBox;\r\n  /** @internal */\r\n  protected _boneMatrices: Texture2D;\r\n  /** @internal */\r\n  protected _invBindMatrix: Matrix4x4;\r\n  /** @internal */\r\n  protected _instanceHash: string;\r\n  /** @internal */\r\n  protected _batchable: boolean;\r\n  /** @internal */\r\n  protected _boundingBoxNode: Mesh;\r\n  constructor(scene: Scene, parent?: SceneNode) {\r\n    super(scene, parent);\r\n    this._primitive = null;\r\n    this._material = null;\r\n    this._castShadow = true;\r\n    this._animatedBoundingBox = null;\r\n    this._boneMatrices = null;\r\n    this._invBindMatrix = null;\r\n    this._instanceHash = null;\r\n    this._boundingBoxNode = null;\r\n    this._batchable = scene.device.getDeviceType() !== 'webgl';\r\n    this._bboxChangeCallback = this._onBoundingboxChange.bind(this);\r\n  }\r\n  getInstanceId(renderPass: RenderPass): string {\r\n    return this._instanceHash;\r\n  }\r\n  get castShadow(): boolean {\r\n    return this._castShadow;\r\n  }\r\n  set castShadow(b: boolean) {\r\n    this._castShadow = b;\r\n  }\r\n  get primitive(): Primitive {\r\n    return this._primitive;\r\n  }\r\n  set primitive(prim: Primitive) {\r\n    if (prim !== this._primitive) {\r\n      if (this._primitive) {\r\n        this._primitive.removeBoundingboxChangeCallback(this._bboxChangeCallback);\r\n      }\r\n      this._primitive = prim || null;\r\n      if (this._primitive) {\r\n        this._primitive.addBoundingboxChangeCallback(this._bboxChangeCallback);\r\n      }\r\n      this._instanceHash = (this._primitive && this._material) ? `${this.constructor.name}:${this._scene.id}:${this._primitive.id}:${this._material.id}` : null;\r\n      this.invalidateBoundingVolume();\r\n    }\r\n  }\r\n  get material(): Material {\r\n    return this._material;\r\n  }\r\n  set material(m: Material) {\r\n    if (this._material !== m) {\r\n      this._material = m;\r\n      this._instanceHash = (this._primitive && this._material) ? `${this.constructor.name}:${this._scene.id}:${this._primitive.id}:${this._material.id}` : null;\r\n    }\r\n  }\r\n  get drawBoundingBox(): boolean {\r\n    return !!this._boundingBoxNode;\r\n  }\r\n  set drawBoundingBox(val: boolean) {\r\n    if (!!this._boundingBoxNode !== !!val) {\r\n      if (!val) {\r\n        this._boundingBoxNode.remove();\r\n        this._boundingBoxNode = null;\r\n      } else {\r\n        this._boundingBoxNode = Mesh.unitBoxFrame(this._scene, this);\r\n        this._boundingBoxNode.scaling.assign(this.getBoundingVolume().toAABB().size.getArray());\r\n        this._boundingBoxNode.position.assign(this.getBoundingVolume().toAABB().minPoint.getArray());\r\n      }\r\n    }\r\n  }\r\n  isMesh(): boolean {\r\n    return true;\r\n  }\r\n  setAnimatedBoundingBox(bbox: BoundingBox) {\r\n    this._animatedBoundingBox = bbox;\r\n    this.invalidateBoundingVolume();\r\n  }\r\n  setBoneMatrices(matrices: Texture2D) {\r\n    this._boneMatrices = matrices;\r\n  }\r\n  setInvBindMatrix(matrix: Matrix4x4) {\r\n    this._invBindMatrix = matrix;\r\n  }\r\n  isBatchable(): this is BatchDrawable {\r\n    return this._batchable && !this._boneMatrices;\r\n  }\r\n  dispose() {\r\n    this._primitive = null;\r\n    this._material = null;\r\n    super.dispose();\r\n  }\r\n  // Drawable interface\r\n  isTransparency(): boolean {\r\n    return !!this.material?.isTransparent();\r\n  }\r\n  isUnlit(): boolean {\r\n    return !this.material?.supportLighting();\r\n  }\r\n  draw(ctx: DrawContext) {\r\n    this.material.draw(this.primitive, ctx);\r\n  }\r\n  getBoneMatrices(): Texture2D {\r\n    return this._boneMatrices;\r\n  }\r\n  getInvBindMatrix(): Matrix4x4 {\r\n    return this._invBindMatrix;\r\n  }\r\n  getXForm(): XForm {\r\n    // mesh transform should be ignored when skinned\r\n    return this;\r\n  }\r\n  /** @internal */\r\n  computeBoundingVolume(bv: BoundingVolume): BoundingVolume {\r\n    let bbox: BoundingVolume;\r\n    if (this._animatedBoundingBox) {\r\n      bbox = this._animatedBoundingBox;\r\n    } else {\r\n      const primitive = this.primitive;\r\n      bbox = primitive ? primitive.getBoundingVolume() : null;\r\n    }\r\n    if (bbox && this._boundingBoxNode) {\r\n      this._boundingBoxNode.scaling.assign(bbox.toAABB().size.getArray());\r\n      this._boundingBoxNode.position.assign(bbox.toAABB().minPoint.getArray());\r\n    }\r\n    return bbox;\r\n  }\r\n  /** @internal */\r\n  private _onBoundingboxChange() {\r\n    this.invalidateBoundingVolume();\r\n  }\r\n  private static _defaultMaterial: StandardMaterial = null;\r\n  private static _defaultSphere: Primitive = null;\r\n  private static _defaultBox: Primitive = null;\r\n  private static _defaultBoxFrame: Primitive = null;\r\n  private static _getDefaultMaterial(device: Device): StandardMaterial {\r\n    if (!this._defaultMaterial) {\r\n      this._defaultMaterial = new StandardMaterial(device);\r\n      this._defaultMaterial.lightModel = new LambertLightModel();\r\n    }\r\n    return this._defaultMaterial;\r\n  }\r\n  static unitSphere(scene: Scene, parent?: SceneNode) {\r\n    if (!this._defaultSphere) {\r\n      this._defaultSphere = new SphereShape(scene.device, { radius: 1 });\r\n    }\r\n    const mesh = new Mesh(scene, parent);\r\n    mesh.primitive = this._defaultSphere;\r\n    mesh.material = this._getDefaultMaterial(scene.device);\r\n    return mesh;\r\n  }\r\n  static unitBox(scene: Scene, parent?: SceneNode) {\r\n    if (!this._defaultBox) {\r\n      this._defaultBox = new BoxShape(scene.device, { size: 1 });\r\n    }\r\n    const mesh = new Mesh(scene, parent);\r\n    mesh.primitive = this._defaultBox;\r\n    mesh.material = this._getDefaultMaterial(scene.device);\r\n    return mesh;\r\n  }\r\n  static unitBoxFrame(scene: Scene, parent?: SceneNode) {\r\n    if (!this._defaultBoxFrame) {\r\n      this._defaultBoxFrame = new BoxFrameShape(scene.device, { size: 1 });\r\n    }\r\n    const mesh = new Mesh(scene, parent);\r\n    mesh.primitive = this._defaultBoxFrame;\r\n    mesh.material = this._getDefaultMaterial(scene.device);\r\n    return mesh;\r\n  }\r\n}\r\n\r\nexport class BoxMesh extends Mesh {\r\n  constructor(\r\n    scene: Scene,\r\n    options?: IBoxCreationOptions & { material?: Material },\r\n  ) {\r\n    super(scene);\r\n    this.primitive = new BoxShape(scene.device, options);\r\n    this.material = options.material;\r\n    if (!this.material) {\r\n      const stdMat = new StandardMaterial(scene.device);\r\n      stdMat.lightModel = new LambertLightModel();\r\n      this.material = stdMat;\r\n    }\r\n  }\r\n}\r\n\r\nexport class PlaneMesh extends Mesh {\r\n  constructor(\r\n    scene: Scene,\r\n    options?: {\r\n      size: number;\r\n      sizeX?: number;\r\n      sizeY?: number;\r\n      material?: Material;\r\n    },\r\n  ) {\r\n    super(scene);\r\n    this.primitive = new PlaneShape(scene.device, options);\r\n    this.material = options.material;\r\n    if (!this.material) {\r\n      const stdMat = new StandardMaterial(scene.device);\r\n      stdMat.lightModel = new LambertLightModel();\r\n      this.material = stdMat;\r\n    }\r\n  }\r\n}\r\n\r\nexport class SphereMesh extends Mesh {\r\n  constructor(\r\n    scene: Scene,\r\n    options?: {\r\n      radius?: number;\r\n      verticalDetail?: number;\r\n      horizonalDetail?: number;\r\n      material?: Material;\r\n    },\r\n  ) {\r\n    super(scene);\r\n    this.primitive = new SphereShape(scene.device, options);\r\n    this.material = options.material;\r\n    if (!this.material) {\r\n      const stdMat = new StandardMaterial(scene.device);\r\n      stdMat.lightModel = new LambertLightModel();\r\n      this.material = stdMat;\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}