{"version":3,"file":"cull_visitor.js","sources":["../../../../../libs/device/src/scene/visitors/cull_visitor.ts"],"sourcesContent":["import { ClipState, AABB } from '@sophon/base';\nimport { GraphNode } from '../graph_node';\nimport { OctreeNode } from '../octree';\nimport { Mesh } from '../mesh';\nimport { Terrain } from '../terrain';\nimport { RenderQueue } from '../render_queue';\nimport { RENDER_PASS_TYPE_SHADOWMAP } from '../values';\nimport type { Visitor } from '../../misc';\nimport type { Camera } from '../camera';\nimport type { RenderPass } from '../renderers';\nimport type { Drawable } from '../drawable';\n\nexport class CullVisitor implements Visitor {\n  /** @internal */\n  private _camera: Camera;\n  /** @internal */\n  private _skipClipTest: boolean;\n  /** @internal */\n  private _renderQueue: RenderQueue;\n  /** @internal */\n  private _renderPass: RenderPass;\n  /** @internal */\n  private _postCullHook: (camera: Camera, drawable: Drawable, castShadow: boolean, clipState: ClipState, box: AABB) => boolean;\n  constructor(renderPass: RenderPass, camera?: Camera) {\n    this._camera = camera || null;\n    this._renderQueue = new RenderQueue(renderPass);\n    this._skipClipTest = false;\n    this._renderPass = renderPass;\n    this._postCullHook = null;\n  }\n  get camera() {\n    return this._camera;\n  }\n  set camera(camera: Camera) {\n    this._camera = camera || null;\n  }\n  get renderPass(): RenderPass {\n    return this._renderPass;\n  }\n  get renderQueue() {\n    return this._renderQueue;\n  }\n  get frustum() {\n    return this._camera?.frustum || null;\n  }\n  get postCullHook(): (camera: Camera, drawable: Drawable, castShadow: boolean, clipState: ClipState, box: AABB) => boolean {\n    return this._postCullHook;\n  }\n  set postCullHook(hook: (camera: Camera, drawable: Drawable, castShadow: boolean, clipState: ClipState, box: AABB) => boolean) {\n    this._postCullHook = hook;\n  }\n  push(camera: Camera, drawable: Drawable, renderOrder: number, castShadow: boolean, clipState: ClipState, box: AABB) {\n    if (!this._postCullHook || this._postCullHook(camera, drawable, castShadow, clipState, box)) {\n      this.renderQueue.push(camera, drawable, renderOrder);\n    }\n  }\n  visit(target: unknown): unknown {\n    if (target instanceof Mesh) {\n      return this.visitMesh(target);\n    } else if (target instanceof OctreeNode) {\n      return this.visitOctreeNode(target);\n    } else if (target instanceof Terrain) {\n      return this.visitTerrain(target);\n    }\n  }\n  visitTerrain(node: Terrain) {\n    if (node.computedShowState !== GraphNode.SHOW_HIDE && (node.castShadow || this._renderPass.getRenderPassType() !== RENDER_PASS_TYPE_SHADOWMAP)) {\n      const clipState = this.getClipState(node);\n      if (clipState !== ClipState.NOT_CLIPPED) {\n        if (node.cull(this)) {\n          this.push(this._camera, node, node.computedRenderOrder, node.castShadow, clipState, node.getWorldBoundingVolume()?.toAABB());\n        }\n      }\n    }\n  }\n  visitMesh(node: Mesh) {\n    if (node.computedShowState !== GraphNode.SHOW_HIDE && (node.castShadow || this._renderPass.getRenderPassType() !== RENDER_PASS_TYPE_SHADOWMAP)) {\n      const clipState = this.getClipState(node);\n      if (clipState !== ClipState.NOT_CLIPPED) {\n        this.push(this._camera, node, node.computedRenderOrder, node.castShadow, clipState, node.getWorldBoundingVolume()?.toAABB());\n      }\n    }\n  }\n  visitOctreeNode(node: OctreeNode) {\n    const clipState =\n      node.getLevel() > 0\n        ? node.getBoxLoosed().getClipStateWithFrustum(this.frustum)\n        : ClipState.CLIPPED;\n    if (clipState !== ClipState.NOT_CLIPPED) {\n      const saveSkipFlag = this._skipClipTest;\n      this._skipClipTest = clipState === ClipState.A_INSIDE_B;\n      const nodes = node.getNodes();\n      for (let i = 0; i < nodes.length; i++) {\n        this.visit(nodes[i]);\n      }\n      this._skipClipTest = saveSkipFlag;\n      return true;\n    }\n    return false;\n  }\n  /** @internal */\n  protected getClipState(node: GraphNode): ClipState {\n    let clipState: ClipState;\n    if (this._skipClipTest) {\n      clipState = ClipState.A_INSIDE_B;\n    } else if (node.computedClipMode === GraphNode.CLIP_DISABLED) {\n      clipState = ClipState.CLIPPED;\n    } else {\n      const bv = node.getWorldBoundingVolume();\n      clipState = bv ? bv.toAABB().getClipStateWithFrustum(this.frustum) : ClipState.CLIPPED;\n    }\n    return clipState;\n  }\n}\n"],"names":[],"mappings":"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"}