{"version":3,"file":"standard.js","sources":["../../../../../libs/device/src/scene/materiallib/standard.ts"],"sourcesContent":["import { Matrix4x4 } from '@sophon/base';\nimport { MAX_TEXCOORD_INDEX_COUNT } from '../../device/gpuobject';\nimport { BlendFunc } from '../../device/render_states';\nimport { Material } from '../material';\nimport { ShaderLib } from './shaderlib';\nimport { forwardComputeLighting } from '../renderers/forward.shaderlib';\nimport * as values from '../values';\nimport type { LightModel } from './lightmodel';\nimport type { DrawContext } from '../drawable';\nimport type { ShadowMapPass } from '../renderers';\nimport type { Device } from '../../device/device';\nimport type { BindGroup, GPUProgram } from '../../device/gpuobject';\nimport type { PBGlobalScope, ProgramBuilder } from '../../device/builder';\n\nexport class StandardMaterial<T extends LightModel = LightModel> extends Material {\n  private _vertexColor: boolean;\n  private _hasNormal: boolean;\n  private _useTangent: boolean;\n  private _alphaBlend: boolean;\n  private _alphaCutoff: number;\n  private _opacity: number;\n  private _texCoordTransforms: Map<number, Matrix4x4>;\n  private _texCoordTransformHash: string;\n  private _lightModel: T;\n  constructor(device: Device) {\n    super(device);\n    this._vertexColor = false;\n    this._useTangent = false;\n    this._hasNormal = true;\n    this._alphaBlend = false;\n    this._alphaCutoff = 0;\n    this._opacity = 1;\n    this._texCoordTransforms = null;\n    this._texCoordTransformHash = '';\n    this._lightModel = null;\n  }\n  get lightModel(): T {\n    return this._lightModel;\n  }\n  set lightModel(lm: T) {\n    this._lightModel = lm || null;\n  }\n  get vertexColor(): boolean {\n    return this._vertexColor;\n  }\n  set vertexColor(val: boolean) {\n    if (this._vertexColor !== !!val) {\n      this._vertexColor = !!val;\n      this.optionChanged(true);\n    }\n  }\n  get vertexTangent(): boolean {\n    return this._useTangent;\n  }\n  set vertexTangent(val: boolean) {\n    if (this._useTangent !== !!val) {\n      this._useTangent = !!val;\n      this.optionChanged(true);\n    }\n  }\n  get vertexNormal(): boolean {\n    return this._hasNormal;\n  }\n  set vertexNormal(val: boolean) {\n    if (this._hasNormal !== !!val) {\n      this._hasNormal = !!val;\n      this.optionChanged(true);\n    }\n  }\n  get alphaBlend(): boolean {\n    return this._alphaBlend;\n  }\n  set alphaBlend(val: boolean) {\n    if (this._alphaBlend !== !!val) {\n      this._alphaBlend = !!val;\n      const blending = this._alphaBlend || this._opacity < 1;\n      if (blending && (!this._renderStateSet.blendingState?.enabled)) {\n        this._renderStateSet.useBlendingState().enable(true).setBlendFunc(BlendFunc.ONE, BlendFunc.INV_SRC_ALPHA);\n      } else if (this._renderStateSet.blendingState?.enabled && !blending) {\n        this._renderStateSet.defaultBlendingState();\n      }\n      this.optionChanged(true);\n    }\n  }\n  get alphaCutoff(): number {\n    return this._alphaCutoff;\n  }\n  set alphaCutoff(val: number) {\n    if (this._alphaCutoff !== val) {\n      this.optionChanged(this._alphaCutoff === 0 || val === 0);\n      this._alphaCutoff = val;\n    }\n  }\n  get opacity(): number {\n    return this._opacity;\n  }\n  set opacity(val: number) {\n    val = val < 0 ? 0 : val > 1 ? 1 : val;\n    if (this._opacity !== val) {\n      this.optionChanged(this._opacity === 1 || val === 1);\n      this._opacity = val;\n      const blending = this._alphaBlend || this._opacity < 1;\n      if (blending && (!this._renderStateSet.blendingState?.enabled)) {\n        this._renderStateSet.useBlendingState().enable(true).setBlendFunc(BlendFunc.ONE, BlendFunc.INV_SRC_ALPHA);\n      } else if (this._renderStateSet.blendingState?.enabled && !blending) {\n        this._renderStateSet.defaultBlendingState();\n      }\n    }\n  }\n  getTexCoordTransform(index: number): Matrix4x4 {\n    return this._texCoordTransforms?.get(index) || null;\n  }\n  setTexCoordTransform(index: number, matrix: Matrix4x4) {\n    if (matrix) {\n      const replace = this._texCoordTransforms?.has(index);\n      if (!this._texCoordTransforms) {\n        this._texCoordTransforms = new Map();\n      }\n      this._texCoordTransforms.set(index, matrix);\n      if (!replace) {\n        this._texCoordTransformHash = [...this._texCoordTransforms.keys()].sort().join('');\n      }\n      this.optionChanged(!replace);\n    } else {\n      this.removeTexCoordTransform(index);\n    }\n  }\n  removeTexCoordTransform(index: number) {\n    if (this._texCoordTransforms?.has(index)) {\n      this._texCoordTransforms?.delete(index);\n      if (this._texCoordTransforms.size === 0) {\n        this._texCoordTransforms = null;\n      }\n      this._texCoordTransformHash = this._texCoordTransforms ? [...this._texCoordTransforms.keys()].sort().join('') : '';\n      this.optionChanged(true);\n    }\n  }\n  clearTexCoordTransforms() {\n    if (this._texCoordTransforms) {\n      this._texCoordTransforms = null;\n      this.optionChanged(true);\n      this._texCoordTransformHash = '';\n    }\n  }\n  isTransparent(): boolean {\n    return this._alphaBlend || this._opacity < 1;\n  }\n  supportLighting(): boolean {\n    return this._lightModel ? this._lightModel.supportLighting() : false;\n  }\n  applyUniforms(bindGroup: BindGroup, ctx: DrawContext, needUpdate: boolean): void {\n    super.applyUniforms(bindGroup, ctx, needUpdate);\n    this._lightModel?.applyUniformsIfOutdated(bindGroup, ctx);\n  }\n  protected _applyUniforms(bindGroup: BindGroup, ctx: DrawContext): void {\n    if (this._alphaCutoff > 0) {\n      bindGroup.setValue('alphaCutoff', this._alphaCutoff);\n    }\n    if (this._alphaBlend || this._opacity < 1) {\n      bindGroup.setValue('opacity', this._opacity);\n    }\n    this._texCoordTransforms?.forEach(((val, key) => {\n      bindGroup.setValue(`texCoordMatrix${key}`, val);\n    }));\n  }\n  protected _createHash(): string {\n    return `|${Number(!!this._vertexColor)}`\n      + `|${Number(!!this._useTangent)}`\n      + `|${Number(!!this._hasNormal)}`\n      + `|${Number(this._opacity < 1 || this._alphaBlend)}`\n      + `|${Number(this._alphaCutoff > 0)}`\n      + `|${this._lightModel?.getHash() || ''}`\n      + `|${this._texCoordTransformHash}`;\n  }\n  protected _createProgram(pb: ProgramBuilder, ctx: DrawContext, func: number): GPUProgram {\n    const that = this;\n    const lib = new ShaderLib(pb);\n    const useNormal = that._hasNormal && (func !== values.MATERIAL_FUNC_DEPTH_ONLY && (that._lightModel?.isNormalUsed()));\n    if (ctx.materialFunc === values.MATERIAL_FUNC_DEPTH_SHADOW && (ctx.renderPass as ShadowMapPass).light.shadow.depthClampEnabled) {\n      pb.emulateDepthClamp = true;\n    } else {\n      pb.emulateDepthClamp = false;\n    }\n    return pb.buildRenderProgram({\n      vertex(this: PBGlobalScope) {\n        Material.initShader(pb, ctx);\n        this.$inputs.pos = pb.vec3().attrib('position');\n        if (useNormal) {\n          this.$inputs.normal = pb.vec3().attrib('normal');\n        }\n        if (ctx.target.getBoneMatrices()) {\n          this.$inputs.blendIndices = pb.vec4().attrib('blendIndices');\n          this.$inputs.blendWeights = pb.vec4().attrib('blendWeights');\n        }\n        if (that._vertexColor) {\n          this.$inputs.vertexColor = pb.vec4().attrib('diffuse');\n        }\n        for (let i = 0; i < MAX_TEXCOORD_INDEX_COUNT; i++) {\n          if (that._lightModel?.isTexCoordSrcLocationUsed(i)) {\n            this.$inputs[`texcoord${i}`] = pb.vec2().attrib(`texCoord${i}` as any);\n          }\n        }\n        if (useNormal && that._useTangent) {\n          this.$inputs.tangent = pb.vec4().attrib('tangent');\n        }\n        that._lightModel?.setupUniforms(this, ctx);\n        this.$mainFunc(function () {\n          if (ctx.target.getBoneMatrices()) {\n            this.$l.skinningMatrix = lib.getSkinMatrix();\n            this.$l.pos = lib.transformSkinnedVertex(this.$l.skinningMatrix);\n            if (useNormal) {\n              this.$l.norm = lib.transformSkinnedNormal(this.$l.skinningMatrix);\n              if (that._useTangent) {\n                this.$l.tangent = lib.transformSkinnedTangent(this.$l.skinningMatrix);\n              }\n            }\n          } else {\n            this.$l.pos = this.$inputs.pos;\n            if (useNormal) {\n              this.$l.norm = this.$inputs.normal;\n              if (that._useTangent) {\n                this.$l.tangent = this.$inputs.tangent;\n              }\n            }\n          }\n          this.$outputs.worldPosition = lib.objectSpacePositionToWorld(this.$l.pos).tag(ShaderLib.USAGE_WORLD_POSITION);\n          if (useNormal) {\n            this.$outputs.worldNormal = pb.normalize(lib.objectSpaceVectorToWorld(this.$l.norm)).tag(ShaderLib.USAGE_WORLD_NORMAL);\n            if (that._useTangent) {\n              this.$outputs.worldTangent = pb.normalize(lib.objectSpaceVectorToWorld(this.$l.tangent.xyz)).tag(ShaderLib.USAGE_WORLD_TANGENT);\n              this.$outputs.worldBinormal = pb.normalize(pb.mul(pb.cross(this.$outputs.worldNormal, this.$outputs.worldTangent), this.$l.tangent.w)).tag(ShaderLib.USAGE_WORLD_BINORMAL);\n            }\n          }\n          this.$builtins.position = lib.ftransform(this.$l.pos);\n          if (that._vertexColor) {\n            this.$outputs.outVertexColor = this.$inputs.vertexColor.tag(ShaderLib.USAGE_VERTEX_COLOR);\n          }\n          for (let i = 0; i < MAX_TEXCOORD_INDEX_COUNT; i++) {\n            if (that._lightModel?.isTexCoordIndexUsed(i)) {\n              this.$outputs[`texcoord${i}`] = that._lightModel.calculateTexCoord(this, i);\n            }\n          }\n        });\n      },\n      fragment(this: PBGlobalScope) {\n        Material.initShader(pb, ctx);\n        if (func === values.MATERIAL_FUNC_NORMAL) {\n          const blend = that._alphaBlend || that._opacity < 1;\n          that._lightModel?.setupUniforms(this, ctx);\n          if (blend) {\n            this.opacity = pb.float().uniform(2);\n          }\n          if (that._alphaCutoff > 0) {\n            this.alphaCutoff = pb.float().uniform(2);\n          }\n          this.$outputs.outColor = pb.vec4();\n          this.$mainFunc(function () {\n            this.$l.litColor = that._lightModel ? forwardComputeLighting(this, that._lightModel, ctx) : pb.vec4(1);\n            if (!blend && that._alphaCutoff === 0) {\n              this.litColor.a = 1;\n            } else if (blend) {\n              this.litColor.a = pb.mul(this.litColor.a, this.opacity);\n            }\n            if (that._alphaCutoff > 0) {\n              this.$if(pb.lessThan(this.litColor.a, this.alphaCutoff), function () {\n                pb.discard();\n              });\n            }\n            if (blend) {\n              // pre-multiply alpha channel\n              this.litColor = pb.vec4(pb.mul(this.litColor.rgb, this.litColor.a), this.litColor.a);\n            }\n            this.$outputs.outColor = lib.encodeColorOutput(this.litColor);\n          });\n        } else if (func === values.MATERIAL_FUNC_DEPTH_ONLY) {\n          this.$outputs.outColor = pb.vec4();\n          this.$mainFunc(function () {\n            this.$outputs.outColor = pb.vec4(1);\n          });\n        } else if (func === values.MATERIAL_FUNC_DEPTH_SHADOW) {\n          this.$outputs.outColor = pb.vec4();\n          this.$mainFunc(function () {\n            this.$outputs.outColor = (ctx.renderPass as ShadowMapPass).light.shadow.computeShadowMapDepth(this);\n          });\n        } else {\n          throw new Error(`unknown material function: ${func}`);\n        }\n      }\n    });\n  }\n}\n\n"],"names":["values.MATERIAL_FUNC_DEPTH_ONLY","values.MATERIAL_FUNC_DEPTH_SHADOW","values.MATERIAL_FUNC_NORMAL"],"mappings":"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"}