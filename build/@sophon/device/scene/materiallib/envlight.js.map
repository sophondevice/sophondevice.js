{"version":3,"file":"envlight.js","sources":["../../../../../libs/device/src/scene/materiallib/envlight.ts"],"sourcesContent":["import { Vector4 } from \"@sophon/base\";\nimport type { BaseTexture, BindGroup, ProgramBuilder, TextureCube, TextureSampler } from \"../../device\";\n\nexport abstract class EnvironmentLighting {\n  abstract initShaderBindings(pb: ProgramBuilder): void;\n  abstract updateBindGroup(bg: BindGroup): void;\n  isIBL(): this is EnvIBL {\n    return false;\n  }\n  isConstant(): this is EnvConstantAmbient {\n    return false;\n  }\n}\n\nexport class EnvIBL extends EnvironmentLighting {\n  public static readonly USAGE_IBL_RADIANCE_MAP = 'usage_ibl_radiance_map';\n  public static readonly USAGE_IBL_RADIANCE_MAP_MAX_LOD = 'usage_ibl_radiance_map_maxlod';\n  public static readonly USAGE_IBL_IRRADIANCE_MAP = 'usage_ibl_irradiance_map';\n  private _radianceMap: TextureCube;\n  private _radianceMapSampler: TextureSampler;\n  private _irradianceMap: TextureCube;\n  private _irradianceMapSampler: TextureSampler;\n  constructor(radianceMap?: TextureCube, irradianceMap?: TextureCube) {\n    super();\n    this._radianceMap = radianceMap || null;\n    this._radianceMapSampler = radianceMap?.getDefaultSampler(false) || null;\n    this._irradianceMap = irradianceMap || null;\n    this._irradianceMapSampler = irradianceMap?.getDefaultSampler(false) || null;\n  }\n  get radianceMap(): TextureCube {\n    return this._radianceMap;\n  }\n  set radianceMap(tex: TextureCube) {\n    this._radianceMap = tex;\n    if (!this._radianceMapSampler && tex) {\n      this._radianceMapSampler = tex.getDefaultSampler(false) || null;\n    }\n  }\n  get irradianceMap(): TextureCube {\n    return this._irradianceMap;\n  }\n  set irradianceMap(tex: TextureCube) {\n    this._irradianceMap = tex;\n    if (!this._irradianceMapSampler && tex) {\n      this._irradianceMapSampler = tex.getDefaultSampler(false);\n    }\n  }\n  initShaderBindings(pb: ProgramBuilder): void {\n    pb.globalScope.iblRadianceMap = pb.texCube().uniform(0).tag(EnvIBL.USAGE_IBL_RADIANCE_MAP);\n    pb.globalScope.iblIrradianceMap = pb.texCube().uniform(0).tag(EnvIBL.USAGE_IBL_IRRADIANCE_MAP);\n    pb.globalScope.iblParams = pb.defineStruct(null, 'std140', pb.float('radianceMaxLod'))().uniform(0).tag({ radianceMaxLod: EnvIBL.USAGE_IBL_RADIANCE_MAP_MAX_LOD });\n  }\n  updateBindGroup(bg: BindGroup): void {\n    bg.setValue('iblParams', { radianceMaxLod: this._radianceMap ? this._radianceMap.mipLevelCount - 1 : 0 });\n    bg.setTexture('iblRadianceMap', this._radianceMap, this._radianceMapSampler);\n    bg.setTexture('iblIrradianceMap', this._irradianceMap, this._irradianceMapSampler);\n  }\n  isIBL(): this is EnvIBL {\n    return true;\n  }\n  private getMapSampler(tex: BaseTexture): TextureSampler {\n    return tex.getDefaultSampler(false);\n  }\n}\n\nexport class EnvConstantAmbient extends EnvironmentLighting {\n  public static readonly USAGE_CONSTANT_AMBIENT_LIGHTING = 'usage_env_constant_ambient';\n  public static readonly funcNameGetAmbient = 'lib_getConstantAmbient';\n  private _ambientColor: Vector4;\n  constructor(ambientColor?: Vector4) {\n    super();\n    this._ambientColor = ambientColor ? new Vector4(ambientColor) : new Vector4(0, 0, 0, 1);\n  }\n  get ambientColor(): Vector4 {\n    return this._ambientColor;\n  }\n  set ambientColor(ambientColor: Vector4) {\n    if (ambientColor) {\n      this._ambientColor.assign(ambientColor.getArray());\n    }\n  }\n  initShaderBindings(pb: ProgramBuilder): void {\n    pb.globalScope.envLight = pb.defineStruct(null, 'std140', pb.vec4('ambient'))().uniform(0).tag({ ambient: EnvConstantAmbient.USAGE_CONSTANT_AMBIENT_LIGHTING });\n  }\n  updateBindGroup(bg: BindGroup): void {\n    bg.setValue('envLight', { ambient: this._ambientColor });\n  }\n  isConstant(): this is EnvConstantAmbient {\n    return true;\n  }\n}\n"],"names":[],"mappings":"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"}