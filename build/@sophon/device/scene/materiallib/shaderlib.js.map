{"version":3,"file":"shaderlib.js","sources":["../../../../../libs/device/src/scene/materiallib/shaderlib.ts"],"sourcesContent":["import { VERTEX_ATTRIB_POSITION, VERTEX_ATTRIB_BLEND_INDICES, VERTEX_ATTRIB_BLEND_WEIGHT, VERTEX_ATTRIB_TANGENT, VERTEX_ATTRIB_NORMAL } from '../../device/gpuobject';\nimport { ProgramBuilder, PBInsideFunctionScope, PBPrimitiveType } from '../../device/builder';\nimport { PBShaderExp } from '../../device/builder/base';\n\nexport const MAX_BONE_MATRIX_UNIFORM = 36;\n\nexport class ShaderLib {\n  static readonly USAGE_VIEW_PROJ_MATRIX = 'ch_usage_viewProjMatrix';\n  static readonly USAGE_VIEW_MATRIX = 'ch_usage_viewMatrix';\n  static readonly USAGE_PROJECTION_MATRIX = 'ch_usage_projMatrix';\n  static readonly USAGE_WORLD_MATRIX = 'ch_usage_worldMatrix';\n  static readonly USAGE_BONE_MATRICIES = 'ch_usage_boneMatrices';\n  static readonly USAGE_BONE_TEXTURE_SIZE = 'ch_usage_boneTextureSize';\n  static readonly USAGE_INV_BIND_MATRIX = 'ch_usage_invBindMatrix';\n  static readonly USAGE_WORLD_VIEW_PROJ_MATRIX = 'ch_usage_worldViewProjMatrix';\n  static readonly USAGE_NORMAL_MAP = 'ch_usage_normalMap';\n  static readonly USAGE_NORMAL_SCALE = 'ch_usage_normalScale';\n  static readonly USAGE_VERTEX_COLOR = 'ch_usage_vertexColor';\n  static readonly USAGE_WORLD_POSITION = 'ch_usage_worldPosition';\n  static readonly USAGE_WORLD_NORMAL = 'ch_usage_worldNormal';\n  static readonly USAGE_WORLD_TANGENT = 'ch_usage_worldTangent';\n  static readonly USAGE_WORLD_BINORMAL = 'ch_usage_worldBinormal';\n  static readonly USAGE_ENV_LIGHT_STRENGTH = 'ch_usage_envLightStrength';\n  static readonly USAGE_CAMERA_POSITION = 'ch_usage_cameraPosition';\n  static readonly USAGE_CAMERA_PARAMS = 'ch_usage_cameraParams';\n  /** @internal */\n  private static readonly funcNameFTransform = 'lib_ftransform';\n  /** @internal */\n  private static readonly funcNameFTransformWorld = 'lib_ftransformWorld';\n  /** @internal */\n  private static readonly funcNameGetSkinningMatrix = 'lib_getSkinningMatrix';\n  /** @internal */\n  private static readonly funcNameTransformSkinnedVertex = 'lib_transformSkinnedVertex';\n  /** @internal */\n  private static readonly funcNameTransformSkinnedNormal = 'lib_transformSkinnedNormal';\n  /** @internal */\n  private static readonly funcNameTransformSkinnedTangent = 'lib_transformSkinnedlTangent';\n  /** @internal */\n  private static readonly funcNameObjectSpacePositionToWorld = 'lib_objPosToWorld';\n  /** @internal */\n  private static readonly funcNameWorldSpacePositionToClip = 'lib_worldPosToClip';\n  /** @internal */\n  private static readonly funcNameObjectSpaceVectorToWorld = 'lib_objVecToWorld';\n  /** @internal */\n  private static readonly funcNameCotangentFrame = 'lib_cotangentFrame';\n  /** @internal */\n  private static readonly funcNamePerturbNormal = 'lib_perturbNormal';\n  /** @internal */\n  private static readonly funcNameEvalPixelNormal = 'lib_evalPixelNormal';\n  /** @internal */\n  private static readonly funcNameEncodeNormalizedFloatToRGBA = 'lib_encodeNormalizedFloatToRGBA';\n  /** @internal */\n  private static readonly funcNameDecodeNormalizedFloatFromRGBA = 'lib_decodeNormalizedFloatFromRGBA';\n  /** @internal */\n  private static readonly funcNameEncode2HalfToRGBA = 'lib_encode2HalfToRGBA';\n  /** @internal */\n  private static readonly funcNameDecode2HalfFromRGBA = 'lib_decode2HalfFromRGBA';\n  /** @internal */\n  private static readonly funcNameEncodeColorOutput = 'lib_encodeColorOutput';\n  /** @internal */\n  private static readonly funcNameEncodeNormalSP = 'lib_encodeNormalSP';\n  /** @internal */\n  private static readonly funcNameDecodeNormalSP = 'lib_decodeNormalSP';\n  /** @internal */\n  private builder: ProgramBuilder;\n  constructor(builder: ProgramBuilder) {\n    this.builder = builder;\n  }\n  ftransform(inputPos?: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    const that = this;\n    if (!pb.getFunction(ShaderLib.funcNameFTransform)) {\n      pb.globalScope.$function(ShaderLib.funcNameFTransform, [pb.vec3('inputPos')], function () {\n        const viewProjMatrix = pb.queryGlobal(ShaderLib.USAGE_VIEW_PROJ_MATRIX);\n        const wvpMatrix = pb.queryGlobal(ShaderLib.USAGE_WORLD_VIEW_PROJ_MATRIX);\n        if (wvpMatrix) {\n          this.$l.pos = pb.mul(wvpMatrix, pb.vec4(this.inputPos, 1));\n        } else {\n          const worldMatrix = pb.queryGlobal(ShaderLib.USAGE_WORLD_MATRIX);\n          if (worldMatrix && viewProjMatrix) {\n            this.$l.pos = pb.mul(viewProjMatrix, that.objectSpacePositionToWorld(this.inputPos));\n          } else if (viewProjMatrix) {\n            this.$l.pos = pb.mul(viewProjMatrix, pb.vec4(this.inputPos, 1));\n          } else {\n            this.$l.pos = pb.vec4(this.inputPos, 1);\n          }\n        }\n        const cameraParams = pb.queryGlobal(ShaderLib.USAGE_CAMERA_PARAMS);\n        if (cameraParams) {\n          this.$if(pb.notEqual(cameraParams.z, 0), function () {\n            this.pos.y = pb.neg(this.pos.y);\n          });\n        }\n        this.$return(this.$l.pos);\n      });\n    }\n    const pos = inputPos || pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_POSITION);\n    if (!pos) {\n      throw new Error('ftransform() failed: no vertex position attribute');\n    }\n    return pb.globalScope[ShaderLib.funcNameFTransform](pos.xyz);\n  }\n  ftransformWorld(worldPos?: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    if (!pb.getFunction(ShaderLib.funcNameFTransformWorld)) {\n      pb.globalScope.$function(ShaderLib.funcNameFTransformWorld, [pb.vec3('inputPos')], function () {\n        const viewProjMatrix = pb.queryGlobal(ShaderLib.USAGE_VIEW_PROJ_MATRIX);\n        this.$l.pos = pb.mul(viewProjMatrix, pb.vec4(this.inputPos, 1));\n        const cameraParams = pb.queryGlobal(ShaderLib.USAGE_CAMERA_PARAMS);\n        if (cameraParams) {\n          this.$if(pb.notEqual(cameraParams.z, 0), function () {\n            this.pos.y = pb.neg(this.pos.y);\n          });\n        }\n        this.$return(this.$l.pos);\n      });\n    }\n    return pb.globalScope[ShaderLib.funcNameFTransformWorld](worldPos.xyz);\n  }\n  getSkinMatrix(): PBShaderExp {\n    const pb = this.builder;\n    const funcNameGetBoneMatrixFromTexture = 'lib_getBoneMatrixFromTexture';\n    if (!pb.getFunction(funcNameGetBoneMatrixFromTexture)) {\n      pb.globalScope.$function(funcNameGetBoneMatrixFromTexture, [pb.int('boneIndex')], function () {\n        const boneTexture = pb.queryGlobal(ShaderLib.USAGE_BONE_MATRICIES);\n        this.$l.w = pb.float(pb.queryGlobal(ShaderLib.USAGE_BONE_TEXTURE_SIZE));\n        this.$l.pixelIndex = pb.float(pb.mul(this.boneIndex, 4));\n        this.$l.xIndex = pb.mod(this.pixelIndex, this.w);\n        this.$l.yIndex = pb.floor(pb.div(this.pixelIndex, this.w));\n        this.$l.u1 = pb.div(pb.add(this.xIndex, 0.5), this.w);\n        this.$l.u2 = pb.div(pb.add(this.xIndex, 1.5), this.w);\n        this.$l.u3 = pb.div(pb.add(this.xIndex, 2.5), this.w);\n        this.$l.u4 = pb.div(pb.add(this.xIndex, 3.5), this.w);\n        this.$l.v = pb.div(pb.add(this.yIndex, 0.5), this.w);\n        if (pb.getDeviceType() !== 'webgl') {\n          this.$l.row1 = pb.textureSampleLevel(boneTexture, pb.vec2(this.u1, this.v), 0);\n          this.$l.row2 = pb.textureSampleLevel(boneTexture, pb.vec2(this.u2, this.v), 0);\n          this.$l.row3 = pb.textureSampleLevel(boneTexture, pb.vec2(this.u3, this.v), 0);\n          this.$l.row4 = pb.textureSampleLevel(boneTexture, pb.vec2(this.u4, this.v), 0);\n        } else {\n          this.$l.row1 = pb.textureSample(boneTexture, pb.vec2(this.u1, this.v));\n          this.$l.row2 = pb.textureSample(boneTexture, pb.vec2(this.u2, this.v));\n          this.$l.row3 = pb.textureSample(boneTexture, pb.vec2(this.u3, this.v));\n          this.$l.row4 = pb.textureSample(boneTexture, pb.vec2(this.u4, this.v));\n        }\n        this.$return(pb.mat4(this.row1, this.row2, this.row3, this.row4));\n      });\n    }\n    if (!pb.getFunction(ShaderLib.funcNameGetSkinningMatrix)) {\n      pb.globalScope.$function(ShaderLib.funcNameGetSkinningMatrix, [], function () {\n        const invBindMatrix = pb.queryGlobal(ShaderLib.USAGE_INV_BIND_MATRIX);\n        const blendIndices = pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_BLEND_INDICES);\n        const blendWeights = pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_BLEND_WEIGHT);\n        this.$l.m0 = pb.globalScope[funcNameGetBoneMatrixFromTexture](pb.int(blendIndices[0]));\n        this.$l.m1 = pb.globalScope[funcNameGetBoneMatrixFromTexture](pb.int(blendIndices[1]));\n        this.$l.m2 = pb.globalScope[funcNameGetBoneMatrixFromTexture](pb.int(blendIndices[2]));\n        this.$l.m3 = pb.globalScope[funcNameGetBoneMatrixFromTexture](pb.int(blendIndices[3]));\n        this.$l.m = pb.add(pb.mul(this.m0, blendWeights.x), pb.mul(this.m1, blendWeights.y), pb.mul(this.m2, blendWeights.z), pb.mul(this.m3, blendWeights.w));\n        this.$return(pb.mul(invBindMatrix, this.m));\n        /*\n        if (pb.getDeviceType() === 'webgl') {\n          this.$l.m0 = pb.mat4();\n          this.$l.m1 = pb.mat4();\n          this.$l.m2 = pb.mat4();\n          this.$l.m3 = pb.mat4();\n          this.$l.i0 = blendIndices.x;\n          this.$l.i1 = blendIndices.y;\n          this.$l.i2 = blendIndices.z;\n          this.$l.i3 = blendIndices.w;\n          this.$for(pb.int('i'), 0, MAX_BONE_MATRIX_UNIFORM, function () {\n            this.$if(pb.equal(this.i, pb.int(this.i0)), function () {\n              this.m0 = boneMatrices.at(this.i);\n            });\n            this.$if(pb.equal(this.i, pb.int(this.i1)), function () {\n              this.m1 = boneMatrices.at(this.i);\n            });\n            this.$if(pb.equal(this.i, pb.int(this.i2)), function () {\n              this.m2 = boneMatrices.at(this.i);\n            });\n            this.$if(pb.equal(this.i, pb.int(this.i3)), function () {\n              this.m3 = boneMatrices.at(this.i);\n            });\n          });\n          this.$return(pb.add(pb.mul(this.m0, blendWeights.x), pb.mul(this.m1, blendWeights.y), pb.mul(this.m2, blendWeights.z), pb.mul(this.m3, blendWeights.w)));\n        } else {\n          const m0 = boneMatrices.at(pb.int(blendIndices[0]));\n          const m1 = boneMatrices.at(pb.int(blendIndices[1]));\n          const m2 = boneMatrices.at(pb.int(blendIndices[2]));\n          const m3 = boneMatrices.at(pb.int(blendIndices[3]));\n          this.$return(pb.add(pb.mul(m0, blendWeights.x), pb.mul(m1, blendWeights.y), pb.mul(m2, blendWeights.z), pb.mul(m3, blendWeights.w)));\n        }\n        */\n      });\n    }\n    return pb.globalScope[ShaderLib.funcNameGetSkinningMatrix]();\n  }\n  transformSkinnedVertex(skinningMatrix: PBShaderExp, pos?: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    const boneMatrices = pb.queryGlobal(ShaderLib.USAGE_BONE_MATRICIES);\n    const blendIndices = pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_BLEND_INDICES);\n    const blendWeights = pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_BLEND_WEIGHT);\n    if (boneMatrices && blendIndices && blendWeights) {\n      if (!pb.getFunction(ShaderLib.funcNameTransformSkinnedVertex)) {\n        pb.globalScope.$function(ShaderLib.funcNameTransformSkinnedVertex, [pb.vec3('pos'), pb.mat4('skinningMatrix')], function () {\n          this.$l.skinnedVertex = pb.mul(this.skinningMatrix, pb.vec4(this.pos, 1));\n          this.$return(pb.div(this.$l.skinnedVertex.xyz, this.$l.skinnedVertex.w));\n        });\n      }\n      return pb.globalScope[ShaderLib.funcNameTransformSkinnedVertex](pos || pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_POSITION), skinningMatrix);\n    } else {\n      return pos;\n    }\n  }\n  transformSkinnedNormal(skinningMatrix: PBShaderExp, normal?: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    const boneMatrices = pb.queryGlobal(ShaderLib.USAGE_BONE_MATRICIES);\n    const blendIndices = pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_BLEND_INDICES);\n    const blendWeights = pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_BLEND_WEIGHT);\n    if (boneMatrices && blendIndices && blendWeights) {\n      if (!pb.getFunction(ShaderLib.funcNameTransformSkinnedNormal)) {\n        pb.globalScope.$function(ShaderLib.funcNameTransformSkinnedNormal, [pb.vec3('normal'), pb.mat4('skinningMatrix')], function () {\n          this.$return(pb.mul(this.skinningMatrix, pb.vec4(this.normal, 0)).xyz);\n        });\n      }\n      return pb.globalScope[ShaderLib.funcNameTransformSkinnedNormal](normal || pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_NORMAL), skinningMatrix);\n    } else {\n      return normal;\n    }\n  }\n  transformSkinnedTangent(skinningMatrix: PBShaderExp, tangent?: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    const boneMatrices = pb.queryGlobal(ShaderLib.USAGE_BONE_MATRICIES);\n    const blendIndices = pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_BLEND_INDICES);\n    const blendWeights = pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_BLEND_WEIGHT);\n    if (boneMatrices && blendIndices && blendWeights) {\n      if (!pb.getFunction(ShaderLib.funcNameTransformSkinnedTangent)) {\n        pb.globalScope.$function(ShaderLib.funcNameTransformSkinnedTangent, [pb.vec4('tangent'), pb.mat4('skinningMatrix')], function () {\n          this.$l.skinnedTangent = pb.mul(this.skinningMatrix, pb.vec4(this.tangent.xyz, 0)).xyz;\n          this.$return(pb.vec4(this.$l.skinnedTangent, this.tangent.w));\n        });\n      }\n      return pb.globalScope[ShaderLib.funcNameTransformSkinnedTangent](tangent || pb.globalScope.$getVertexAttrib(VERTEX_ATTRIB_TANGENT), skinningMatrix);\n    } else {\n      return tangent;\n    }\n  }\n  worldSpacePositionToClip(pos: PBShaderExp): PBShaderExp {\n    if (!pos || !pos.isVector() || (pos.numComponents() !== 3)) {\n      throw new Error('worldSpacePositionToClip() failed: pos parameter type must be vec3');\n    }\n    const pb = this.builder;\n    if (!pb.getFunction(ShaderLib.funcNameWorldSpacePositionToClip)) {\n      pb.globalScope.$function(ShaderLib.funcNameWorldSpacePositionToClip, [pb.vec3('pos')], function () {\n        const viewProjMatrix = pb.queryGlobal(ShaderLib.USAGE_VIEW_PROJ_MATRIX);\n        if (!viewProjMatrix) {\n          throw new Error('ftransform() failed: no viewprojection matrix uniform');\n        }\n        this.$l.p = pb.mul(viewProjMatrix, pb.vec4(this.pos, 1));\n        const cameraParams = pb.queryGlobal(ShaderLib.USAGE_CAMERA_PARAMS);\n        if (cameraParams) {\n          this.$if(pb.notEqual(cameraParams.z, 0), function () {\n            this.p.y = pb.neg(this.p.y);\n          });\n        }\n        this.$return(this.$l.p);\n      });\n    }\n    return pb.globalScope[ShaderLib.funcNameWorldSpacePositionToClip](pos);\n  }\n  objectSpacePositionToWorld(pos: PBShaderExp): PBShaderExp {\n    if (!pos || !pos.isVector() || (pos.numComponents() !== 3)) {\n      throw new Error('objectSpacePositionToWorld() failed: position parameter type must be vec3');\n    }\n    const pb = this.builder;\n    const scope = pb.currentScope();\n    if (!scope || !(scope instanceof PBInsideFunctionScope)) {\n      throw new Error('objectSpacePositionToWorld() failed: objectSpacePositionToWorld() must be called inside a function');\n    }\n    if (!pb.getFunction(ShaderLib.funcNameObjectSpacePositionToWorld)) {\n      pb.globalScope.$function(ShaderLib.funcNameObjectSpacePositionToWorld, [pb.vec3('pos')], function () {\n        const worldMatrix = pb.queryGlobal(ShaderLib.USAGE_WORLD_MATRIX);\n        this.$return(worldMatrix ? pb.mul(worldMatrix, pb.vec4(this.pos, 1)) : pb.vec4(this.pos, 1));\n      });\n    }\n    return scope[ShaderLib.funcNameObjectSpacePositionToWorld](pos);\n  }\n  objectSpaceVectorToWorld(vec: PBShaderExp): PBShaderExp {\n    if (!vec || !vec.isVector() || vec.numComponents() !== 3) {\n      throw new Error('objectSpaceVectorToWorld() failed: vector parameter type must be vec3');\n    }\n    const pb = this.builder;\n    const scope = pb.currentScope();\n    if (!scope || !(scope instanceof PBInsideFunctionScope)) {\n      throw new Error('objectSpaceVectorToWorld() failed: objectSpaceVectorToWorld() must be called inside a function');\n    }\n    if (!pb.getFunction(ShaderLib.funcNameObjectSpaceVectorToWorld)) {\n      pb.globalScope.$function(ShaderLib.funcNameObjectSpaceVectorToWorld, [pb.vec3('v')], function () {\n        const worldMatrix = pb.queryGlobal(ShaderLib.USAGE_WORLD_MATRIX);\n        this.$return(worldMatrix ? pb.mul(worldMatrix, pb.vec4(this.v, 0)).xyz : this.v);\n      });\n    }\n    return scope[ShaderLib.funcNameObjectSpaceVectorToWorld](vec);\n  }\n  nonLinearDepthToLinear(depth: PBShaderExp, nearFar?: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    nearFar = nearFar || pb.currentScope().$query(ShaderLib.USAGE_CAMERA_PARAMS);\n    return pb.div(pb.mul(nearFar.x, nearFar.y), pb.mix(nearFar.y, nearFar.x, depth));\n  }\n  nonLinearDepthToLinearNormalized(depth: PBShaderExp, nearFar?: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    nearFar = nearFar || pb.currentScope().$query(ShaderLib.USAGE_CAMERA_PARAMS);\n    return pb.div(nearFar.x, pb.mix(nearFar.y, nearFar.x, depth));\n  }\n  linearToNonLinear(depth: PBShaderExp, nearFar?: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    nearFar = nearFar || pb.currentScope().$query(ShaderLib.USAGE_CAMERA_PARAMS);\n    return pb.div(pb.sub(nearFar.y, pb.div(pb.mul(nearFar.x, nearFar.y), depth)), pb.sub(nearFar.y, nearFar.x));\n  }\n  encode2HalfToRGBA(a: PBShaderExp | number, b: PBShaderExp | number): PBShaderExp {\n    const pb = this.builder;\n    if (!pb.getFunction(ShaderLib.funcNameEncode2HalfToRGBA)) {\n      pb.globalScope.$function(ShaderLib.funcNameEncode2HalfToRGBA, [pb.float('a'), pb.float('b')], function () {\n        this.$l.t = pb.vec4(this.a, pb.fract(pb.mul(this.a, 255)), this.b, pb.fract(pb.mul(this.b, 255)));\n        this.$return(pb.vec4(pb.sub(this.t.x, pb.div(this.t.y, 255)), this.t.y, pb.sub(this.t.z, pb.div(this.t.w, 255)), this.t.w));\n      });\n    }\n    return pb.globalScope[ShaderLib.funcNameEncode2HalfToRGBA](a, b);\n  }\n  decode2HalfFromRGBA(value: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    if (!pb.getFunction(ShaderLib.funcNameDecode2HalfFromRGBA)) {\n      pb.globalScope.$function(ShaderLib.funcNameDecode2HalfFromRGBA, [pb.vec4('value')], function () {\n        this.$return(pb.vec2(pb.add(this.value.x, pb.div(this.value.y, 255)), pb.add(this.value.z, pb.div(this.value.w, 255))));\n      });\n    }\n    return pb.globalScope[ShaderLib.funcNameDecode2HalfFromRGBA](value);\n  }\n  encodeNormalizedFloatToRGBA(value: PBShaderExp | number): PBShaderExp {\n    const pb = this.builder;\n    if (!pb.getFunction(ShaderLib.funcNameEncodeNormalizedFloatToRGBA)) {\n      pb.globalScope.$function(ShaderLib.funcNameEncodeNormalizedFloatToRGBA, [pb.float('value')], function () {\n        this.$l.bitShift = pb.vec4(256 * 256 * 256, 256 * 256, 256, 1);\n        this.$l.bitMask = pb.vec4(0, 1 / 256, 1 / 256, 1 / 256);\n        this.$l.t = pb.fract(pb.mul(this.value, this.bitShift));\n        this.$return(pb.sub(this.t, pb.mul(this.t.xxyz, this.bitMask)));\n      });\n    }\n    return pb.globalScope[ShaderLib.funcNameEncodeNormalizedFloatToRGBA](value);\n  }\n  decodeNormalizedFloatFromRGBA(value: PBShaderExp): PBShaderExp {\n    const sb = this.builder;\n    if (!value || !value.$typeinfo.isPrimitiveType() || value.$typeinfo.primitiveType !== PBPrimitiveType.F32VEC4) {\n      throw new Error('decodeNormalizedFloatFromRGBA() failed: parameter type must be vec4');\n    }\n    const scope = sb.currentScope();\n    if (!scope || !(scope instanceof PBInsideFunctionScope)) {\n      throw new Error('decodeNormalizedFloatFromRGBA() failed: decodeNormalizedFloatFromRGBA() must be called inside a function');\n    }\n    if (!sb.getFunction(ShaderLib.funcNameDecodeNormalizedFloatFromRGBA)) {\n      sb.globalScope.$function(ShaderLib.funcNameDecodeNormalizedFloatFromRGBA, [sb.vec4('value')], function () {\n        this.$l.bitShift = sb.vec4(1 / (256 * 256 * 256), 1 / (256 * 256), 1 / 256, 1);\n        this.$return(sb.dot(this.value, this.bitShift));\n      });\n    }\n    return scope[ShaderLib.funcNameDecodeNormalizedFloatFromRGBA](value);\n  }\n  calcFaceNormal(pos: PBShaderExp) {\n    const funcNameCalcFaceNormal = 'lib_calcFaceNormal';\n    const pb = this.builder;\n    if (!pb.getFunction(funcNameCalcFaceNormal)) {\n      pb.globalScope.$function(funcNameCalcFaceNormal, [pb.vec3('pos')], function () {\n        this.$l.posDX = pb.dpdx(this.pos);\n        this.$l.posDY = pb.dpdy(this.pos);\n        this.$l.n = pb.normalize(pb.cross(this.posDX, this.posDY));\n        this.$if(pb.not(this.$builtins.frontFacing), function () {\n          this.n = pb.neg(this.n);\n        });\n        this.$return(this.n);\n      });\n    }\n    return pb.globalScope[funcNameCalcFaceNormal](pos);\n  }\n  evalNormal(worldNormal: PBShaderExp, normalMapTexCoord?: PBShaderExp, worldTangent?: PBShaderExp, worldBinormal?: PBShaderExp, worldPosition?: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    if (!worldNormal || !worldNormal.$typeinfo.isPrimitiveType() || worldNormal.$typeinfo.primitiveType !== PBPrimitiveType.F32VEC3) {\n      throw new Error('evalNormal() failed: worldNormal parameter must be vec3');\n    }\n    const scope = pb.currentScope();\n    if (!scope || !(scope instanceof PBInsideFunctionScope)) {\n      throw new Error('evalNormal() failed: evalNormal() must be called inside a function');\n    }\n    if (!pb.queryGlobal(ShaderLib.USAGE_NORMAL_MAP)) {\n      if (!pb.getFunction(ShaderLib.funcNameEvalPixelNormal)) {\n        pb.globalScope.$function(ShaderLib.funcNameEvalPixelNormal, [pb.vec3('worldNormal')], function () {\n          this.$l.n = pb.normalize(this.worldNormal);\n          this.$if(pb.not(this.$builtins.frontFacing), function () {\n            this.n = pb.neg(this.n);\n          });\n          this.$return(this.n);\n        });\n      }\n      return scope[ShaderLib.funcNameEvalPixelNormal](worldNormal);\n    }\n    if (!normalMapTexCoord || !normalMapTexCoord.isVector() || normalMapTexCoord.numComponents() !== 2) {\n      throw new Error('evalNormal() failed: normalMapTexCoord parameter must be type vec2');\n    }\n    if (!pb.getFunction(ShaderLib.funcNameCotangentFrame)) {\n      if (worldTangent) {\n        pb.globalScope.$function(ShaderLib.funcNameCotangentFrame, [pb.vec3('normal'), pb.vec3('tangent'), pb.vec3('binormal')], function () {\n          this.$return(pb.mat3(pb.normalize(this.tangent), pb.normalize(this.binormal), pb.normalize(this.normal)));\n        });\n      } else {\n        if (!worldPosition || !worldPosition.$typeinfo.isPrimitiveType() || worldPosition.$typeinfo.primitiveType !== PBPrimitiveType.F32VEC3) {\n          throw new Error('evalNormal() failed: worldPosition parameter type must be vec3');\n        }\n        pb.globalScope.$function(ShaderLib.funcNameCotangentFrame, [pb.vec3('normal'), pb.vec3('p'), pb.vec2('uv')], function () {\n          this.$l.n = pb.normalize(this.normal);\n          this.$l.dp1 = pb.dpdx(this.p);\n          this.$l.dp2 = pb.dpdy(this.p);\n          this.$l.duv1 = pb.dpdx(this.uv);\n          this.$l.duv2 = pb.dpdy(this.uv);\n          this.$l.dp2perp = pb.cross(this.dp2, this.n);\n          this.$l.dp1perp = pb.cross(this.n, this.dp1);\n          this.$l.tangent = pb.add(pb.mul(this.dp2perp, this.duv1.x), pb.mul(this.dp1perp, this.duv2.x));\n          this.$l.bitangent = pb.add(pb.mul(this.dp2perp, this.duv1.y), pb.mul(this.dp1perp, this.duv2.y));\n          this.$l.invmax = pb.inverseSqrt(pb.max(pb.dot(this.tangent, this.tangent), pb.dot(this.bitangent, this.bitangent)));\n          this.$return(\n            pb.mat3(pb.mul(this.tangent, this.invmax), pb.mul(this.bitangent, this.invmax), this.n),\n          );\n        });\n      }\n      pb.globalScope.$function(\n        ShaderLib.funcNamePerturbNormal,\n        [pb.mat3('cotangentFrame'), pb.vec2('uv'), pb.float('scale')],\n        function () {\n          this.$l.color = pb.sub(pb.mul(pb.textureSample(pb.queryGlobal(ShaderLib.USAGE_NORMAL_MAP), this.uv).xyz, 2), pb.vec3(1, 1, 1));\n          this.color = pb.mul(this.color, pb.vec3(this.scale, this.scale, 1));\n          this.$return(pb.normalize(pb.mul(this.cotangentFrame, this.color)));\n        },\n      );\n    }\n    if (!pb.getFunction(ShaderLib.funcNameEvalPixelNormal)) {\n      if (worldTangent) {\n        pb.globalScope.$function(ShaderLib.funcNameEvalPixelNormal, [pb.vec3('normal'), pb.vec3('tangent'), pb.vec3('binormal'), pb.vec2('uv')], function () {\n          this.$l.TBN = pb.globalScope[ShaderLib.funcNameCotangentFrame](this.normal, this.tangent, this.binormal);\n          this.$l.n = pb.globalScope[ShaderLib.funcNamePerturbNormal](this.TBN, this.uv, pb.queryGlobal(ShaderLib.USAGE_NORMAL_SCALE) || 1);\n          this.$if(pb.not(this.$builtins.frontFacing), function () {\n            this.n = pb.neg(this.n);\n          });\n          this.$return(this.n);\n        });\n      } else {\n        pb.globalScope.$function(ShaderLib.funcNameEvalPixelNormal, [pb.vec3('normal'), pb.vec3('pos'), pb.vec2('uv')], function () {\n          this.$l.TBN = pb.globalScope[ShaderLib.funcNameCotangentFrame](this.normal, this.pos, this.uv);\n          this.$l.n = pb.globalScope[ShaderLib.funcNamePerturbNormal](this.TBN, this.uv, pb.queryGlobal(ShaderLib.USAGE_NORMAL_SCALE) || 1);\n          this.$if(pb.not(this.$builtins.frontFacing), function () {\n            this.n = pb.neg(this.n);\n          });\n          this.$return(this.n);\n        });\n      }\n    }\n    return worldTangent\n      ? pb.globalScope[ShaderLib.funcNameEvalPixelNormal](worldNormal, worldTangent, worldBinormal, normalMapTexCoord)\n      : pb.globalScope[ShaderLib.funcNameEvalPixelNormal](worldNormal, worldPosition, normalMapTexCoord);\n  }\n  encodeColorOutput(outputColor: PBShaderExp): PBShaderExp {\n    const pb = this.builder;\n    if (!pb.getFunction(ShaderLib.funcNameEncodeColorOutput)) {\n      pb.globalScope.$function(ShaderLib.funcNameEncodeColorOutput, [pb.vec4('outputColor')], function () {\n        const params = pb.queryGlobal(ShaderLib.USAGE_CAMERA_PARAMS);\n        this.$if(pb.notEqual(params.w, 0), function () {\n          this.$return(pb.vec4(pb.pow(this.outputColor.xyz, pb.vec3(1 / 2.2)), this.outputColor.w));\n        }).$else(function () {\n          this.$return(this.outputColor);\n        });\n      });\n    }\n    return pb.globalScope[ShaderLib.funcNameEncodeColorOutput](outputColor);\n  }\n  //  encode normal with Stereographic Projection\n  //  half4 encode(half3 n, float3 view)\n  //  {\n  //    half scale = 1.7777;\n  //    half2 enc = n.xy / (n.z + 1);\n  //    enc /= scale;\n  //    enc = enc * 0.5 + 0.5;\n  //    return half4(enc, 0, 0);\n  // }\n  encodeNormal_SP(normal: PBShaderExp): PBShaderExp {\n    const scale = 1.7777;\n    const pb = this.builder;\n    if (!pb.getFunction(ShaderLib.funcNameEncodeNormalSP)) {\n      pb.globalScope.$function(ShaderLib.funcNameEncodeNormalSP, [pb.vec3('normal')], function () {\n        this.$l.enc = pb.div(this.normal.xy, pb.add(this.normal.z, 1));\n        this.$l.enc = pb.div(this.$l.enc, scale);\n        this.$l.enc = pb.add(pb.mul(this.$l.enc, 0.5), pb.vec2(0.5));\n        this.$return(this.$l.enc);\n      });\n    }\n    return pb.globalScope[ShaderLib.funcNameEncodeNormalSP](normal);\n  }\n  //  decode normal which was encoded with Stereographic Projection\n  //  half3 decode (half4 enc, float3 view)\n  //  {\n  //    half scale = 1.7777;\n  //    half3 nn =\n  //      enc.xyz*half3(2*scale,2*scale,0) +\n  //      half3(-scale,-scale,1);\n  //    half g = 2.0 / dot(nn.xyz,nn.xyz);\n  //    half3 n;\n  //    n.xy = g*nn.xy;\n  //    n.z = g-1;\n  //    return n;\n  //  }\n  decodeNormal_SP(enc: PBShaderExp): PBShaderExp {\n    const scale = 1.7777;\n    const pb = this.builder;\n    if (!pb.getFunction(ShaderLib.funcNameDecodeNormalSP)) {\n      pb.globalScope.$function(ShaderLib.funcNameDecodeNormalSP, [pb.vec2('enc')], function () {\n        this.$l.nn = pb.add(pb.mul(pb.vec3(this.enc.xy, 0), pb.vec3(2 * scale, 2 * scale, 0)), pb.vec3(-scale, -scale, 1));\n        this.$l.g = pb.div(2, pb.dot(this.$l.nn, this.$l.nn));\n        this.$return(pb.vec3(pb.mul(this.$l.nn.xy, this.$l.g), pb.sub(this.$l.g, 1)));\n      });\n    }\n    return pb.globalScope[ShaderLib.funcNameDecodeNormalSP](enc);\n  }\n  // get pseudo random value in range [0, 1)\n  pseudoRandom(fragCoord: PBShaderExp): PBShaderExp {\n    const funcNamePseudoRandom = 'lib_pseudoRandom';\n    const pb = this.builder;\n    if (!pb.getFunction(funcNamePseudoRandom)) {\n      pb.globalScope.$function(funcNamePseudoRandom, [pb.vec2('c')], function () {\n        this.$l.p3 = pb.fract(pb.mul(this.c.xyx, 0.1031));\n        this.$l.p3 = pb.add(this.$l.p3, pb.dot(this.p3, pb.add(this.p3.yzx, pb.vec3(19.19))));\n        this.$return(pb.fract(pb.mul(pb.add(this.$l.p3.x, this.$l.p3.y), this.$l.p3.z)));\n      });\n    }\n    return pb.globalScope[funcNamePseudoRandom](fragCoord);\n  }\n}\n\n"],"names":[],"mappings":"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"}