{"version":3,"file":"Rectangle.js","sources":["../../../../../libs/dom/src/maxrects-packer/geom/Rectangle.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface IRectangle {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  [propName: string]: any;\n}\n\nexport class Rectangle implements IRectangle {\n  /**\n   * Oversized tag on rectangle which is bigger than packer itself.\n   *\n   * @type {boolean}\n   * @memberof Rectangle\n   */\n  public oversized = false;\n\n  /**\n   * Creates an instance of Rectangle.\n   *\n   * @param {number} [width=0]\n   * @param {number} [height=0]\n   * @param {number} [x=0]\n   * @param {number} [y=0]\n   * @param {boolean} [rot=false]\n   * @param {boolean} [allowRotation=false]\n   * @memberof Rectangle\n   */\n  constructor(\n    width = 0,\n    height = 0,\n    x = 0,\n    y = 0,\n    rot = false,\n    allowRotation: boolean | undefined = undefined,\n  ) {\n    this._width = width;\n    this._height = height;\n    this._x = x;\n    this._y = y;\n    this._data = {};\n    this._rot = rot;\n    this._allowRotation = allowRotation;\n  }\n\n  /**\n   * Test if two given rectangle collide each other\n   *\n   * @static\n   * @param {IRectangle} first\n   * @param {IRectangle} second\n   * @returns\n   * @memberof Rectangle\n   */\n  public static Collide(first: IRectangle, second: IRectangle) {\n    return first.collide(second);\n  }\n\n  /**\n   * Test if the first rectangle contains the second one\n   *\n   * @static\n   * @param {IRectangle} first\n   * @param {IRectangle} second\n   * @returns\n   * @memberof Rectangle\n   */\n  public static Contain(first: IRectangle, second: IRectangle) {\n    return first.contain(second);\n  }\n\n  /**\n   * Get the area (w * h) of the rectangle\n   *\n   * @returns {number}\n   * @memberof Rectangle\n   */\n  public area(): number {\n    return this.width * this.height;\n  }\n\n  /**\n   * Test if the given rectangle collide with this rectangle.\n   *\n   * @param {IRectangle} rect\n   * @returns {boolean}\n   * @memberof Rectangle\n   */\n  public collide(rect: IRectangle): boolean {\n    return (\n      rect.x < this.x + this.width &&\n      rect.x + rect.width > this.x &&\n      rect.y < this.y + this.height &&\n      rect.y + rect.height > this.y\n    );\n  }\n\n  /**\n   * Test if this rectangle contains the given rectangle.\n   *\n   * @param {IRectangle} rect\n   * @returns {boolean}\n   * @memberof Rectangle\n   */\n  public contain(rect: IRectangle): boolean {\n    return (\n      rect.x >= this.x &&\n      rect.y >= this.y &&\n      rect.x + rect.width <= this.x + this.width &&\n      rect.y + rect.height <= this.y + this.height\n    );\n  }\n\n  protected _width: number;\n  get width(): number {\n    return this._width;\n  }\n  set width(value: number) {\n    if (value === this._width) return;\n    this._width = value;\n    this._dirty++;\n  }\n\n  protected _height: number;\n  get height(): number {\n    return this._height;\n  }\n  set height(value: number) {\n    if (value === this._height) return;\n    this._height = value;\n    this._dirty++;\n  }\n\n  protected _x: number;\n  get x(): number {\n    return this._x;\n  }\n  set x(value: number) {\n    if (value === this._x) return;\n    this._x = value;\n    this._dirty++;\n  }\n\n  protected _y: number;\n  get y(): number {\n    return this._y;\n  }\n  set y(value: number) {\n    if (value === this._y) return;\n    this._y = value;\n    this._dirty++;\n  }\n\n  protected _rot = false;\n\n  /**\n   * If the rectangle is rotated\n   *\n   * @type {boolean}\n   * @memberof Rectangle\n   */\n  get rot(): boolean {\n    return this._rot;\n  }\n\n  /**\n   * Set the rotate tag of the rectangle.\n   *\n   * note: after `rot` is set, `width/height` of this rectangle is swaped.\n   *\n   * @memberof Rectangle\n   */\n  set rot(value: boolean) {\n    if (this._allowRotation === false) return;\n\n    if (this._rot !== value) {\n      const tmp = this.width;\n      this.width = this.height;\n      this.height = tmp;\n      this._rot = value;\n      this._dirty++;\n    }\n  }\n\n  protected _allowRotation: boolean | undefined = undefined;\n\n  /**\n   * If the rectangle allow rotation\n   *\n   * @type {boolean}\n   * @memberof Rectangle\n   */\n  get allowRotation(): boolean | undefined {\n    return this._allowRotation;\n  }\n\n  /**\n   * Set the allowRotation tag of the rectangle.\n   *\n   * @memberof Rectangle\n   */\n  set allowRotation(value: boolean | undefined) {\n    if (this._allowRotation !== value) {\n      this._allowRotation = value;\n      this._dirty++;\n    }\n  }\n\n  protected _data: any;\n  get data(): any {\n    return this._data;\n  }\n  set data(value: any) {\n    if (value === null || value === this._data) return;\n    this._data = value;\n    // extract allowRotation settings\n    if (typeof value === 'object' && Object.prototype.hasOwnProperty.call(value, 'allowRotation')) {\n      this._allowRotation = value.allowRotation;\n    }\n    this._dirty++;\n  }\n\n  protected _dirty = 0;\n  get dirty(): boolean {\n    return this._dirty > 0;\n  }\n  public setDirty(value = true): void {\n    this._dirty = value ? this._dirty + 1 : 0;\n  }\n}\n"],"names":[],"mappings":"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"}