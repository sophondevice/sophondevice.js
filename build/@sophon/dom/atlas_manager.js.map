{"version":3,"file":"atlas_manager.js","sources":["../../../libs/dom/src/atlas_manager.ts"],"sourcesContent":["import { MaxRectsPacker } from './maxrects-packer';\r\nimport type { GUIRenderer } from './renderer';\r\nimport type { BaseTexture, Texture2D } from '@sophon/device';\r\n\r\nexport interface IAtlasInfo {\r\n  atlasIndex: number;\r\n  width: number;\r\n  height: number;\r\n  uMin: number;\r\n  vMin: number;\r\n  uMax: number;\r\n  vMax: number;\r\n}\r\n\r\nexport class AtlasManager {\r\n  /** @internal */\r\n  protected static readonly ATLAS_WIDTH = 1024;\r\n  /** @internal */\r\n  protected static readonly ATLAS_HEIGHT = 1024;\r\n  /** @internal */\r\n  protected _renderer: GUIRenderer;\r\n  /** @internal */\r\n  protected _packer: MaxRectsPacker;\r\n  /** @internal */\r\n  protected _cachePadding: number;\r\n  /** @internal */\r\n  protected _cacheWidth: number;\r\n  /** @internal */\r\n  protected _cacheHeight: number;\r\n  /** @internal */\r\n  protected _linearSpace: boolean;\r\n  /** @internal */\r\n  protected _atlasList: Texture2D[];\r\n  /** @internal */\r\n  protected _atlasInfoMap: { [hash: string]: IAtlasInfo };\r\n  /** @internal */\r\n  protected _atlasRestoreHandler: (tex: BaseTexture) => Promise<void>;\r\n  constructor(\r\n    renderer: GUIRenderer,\r\n    cacheWidth?: number,\r\n    cacheHeight?: number,\r\n    cachePadding?: number,\r\n    linearSpace?: boolean,\r\n  ) {\r\n    this._renderer = renderer;\r\n    this._cacheWidth =\r\n      typeof cacheWidth === 'number'\r\n        ? cacheWidth || AtlasManager.ATLAS_WIDTH\r\n        : AtlasManager.ATLAS_WIDTH;\r\n    this._cacheHeight =\r\n      typeof cacheHeight === 'number'\r\n        ? cacheHeight || AtlasManager.ATLAS_HEIGHT\r\n        : AtlasManager.ATLAS_HEIGHT;\r\n    this._cachePadding = typeof cachePadding === 'number' ? cachePadding : 0;\r\n    this._linearSpace = Boolean(linearSpace);\r\n    this._packer = new MaxRectsPacker(this._cacheWidth, this._cacheHeight, this._cachePadding, {\r\n      smart: true,\r\n      pot: false,\r\n      square: false,\r\n      allowRotation: false,\r\n      border: 1,\r\n      tag: false,\r\n    });\r\n    this._atlasList = [];\r\n    this._atlasInfoMap = {};\r\n    this._atlasRestoreHandler = null;\r\n  }\r\n  get atlasTextureRestoreHandler(): (tex: BaseTexture) => Promise<void> {\r\n    return this._atlasRestoreHandler;\r\n  }\r\n  set atlasTextureRestoreHandler(f: (tex: BaseTexture) => Promise<void>) {\r\n    this._atlasRestoreHandler = f;\r\n  }\r\n  getAtlasTexture(index: number): Texture2D {\r\n    return this._atlasList[index];\r\n  }\r\n  getAtlasInfo(key: string): IAtlasInfo {\r\n    return this._atlasInfoMap[key] || null;\r\n  }\r\n  isEmpty(): boolean {\r\n    return this._atlasList.length === 0;\r\n  }\r\n  clear() {\r\n    this._packer = new MaxRectsPacker(this._cacheWidth, this._cacheHeight, this._cachePadding, {\r\n      smart: true,\r\n      pot: false,\r\n      square: false,\r\n      allowRotation: false,\r\n      border: 1,\r\n      tag: false,\r\n    });\r\n    for (const tex of this._atlasList) {\r\n      const t = tex;\r\n      this._renderer.disposeTexture(t);\r\n    }\r\n    this._atlasList = [];\r\n    this._atlasInfoMap = {};\r\n  }\r\n  pushCanvas(\r\n    key: string,\r\n    ctx: CanvasRenderingContext2D,\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n  ) {\r\n    /*\r\n    const imgdata = ctx.getImageData(x, y, w, h);\r\n    return this.pushBitmap(key, imgdata);\r\n    */\r\n    const rc = this._packer.add(w, h, null);\r\n    if (rc) {\r\n      this._updateAtlasTextureCanvas(\r\n        this._packer.bins.length - 1,\r\n        ctx,\r\n        rc.x,\r\n        rc.y,\r\n        rc.width,\r\n        rc.height,\r\n        x,\r\n        y,\r\n      );\r\n      const info: IAtlasInfo = {\r\n        atlasIndex: this._packer.bins.length - 1,\r\n        uMin: rc.x / (this._cacheWidth + this._cachePadding),\r\n        vMin: rc.y / (this._cacheHeight + this._cachePadding),\r\n        uMax: (rc.x + rc.width) / (this._cacheWidth + this._cachePadding),\r\n        vMax: (rc.y + rc.height) / (this._cacheHeight + this._cachePadding),\r\n        width: rc.width,\r\n        height: rc.height,\r\n      };\r\n      this._atlasInfoMap[key] = info;\r\n      return info;\r\n    }\r\n  }\r\n  pushBitmap(key: string, bitmap: ImageData): IAtlasInfo {\r\n    const rc = this._packer.add(bitmap.width, bitmap.height, null);\r\n    if (rc) {\r\n      this._updateAtlasTexture(\r\n        this._packer.bins.length - 1,\r\n        bitmap,\r\n        rc.x,\r\n        rc.y,\r\n      );\r\n      const info: IAtlasInfo = {\r\n        atlasIndex: this._packer.bins.length - 1,\r\n        uMin: rc.x / (this._cacheWidth + this._cachePadding),\r\n        vMin: rc.y / (this._cacheHeight + this._cachePadding),\r\n        uMax: (rc.x + rc.width) / (this._cacheWidth + this._cachePadding),\r\n        vMax: (rc.y + rc.height) / (this._cacheHeight + this._cachePadding),\r\n        width: rc.width,\r\n        height: rc.height,\r\n      };\r\n      this._atlasInfoMap[key] = info;\r\n      return info;\r\n    }\r\n    return null;\r\n  }\r\n  /** @internal */\r\n  protected _createAtlasTexture(): Texture2D {\r\n    const zeroColor = { r: 0, g: 0, b: 0, a: 0 };\r\n    const tex = this._renderer.createTexture(this._cacheWidth + this._cachePadding, this._cacheHeight + this._cachePadding, zeroColor, this._linearSpace);\r\n    tex.restoreHandler = async tex => {\r\n      this._renderer.clearTexture(tex as Texture2D, zeroColor);\r\n      this._atlasRestoreHandler && await this._atlasRestoreHandler(tex as BaseTexture);\r\n    };\r\n    return tex;\r\n  }\r\n  /** @internal */\r\n  private _updateAtlasTextureCanvas(\r\n    atlasIndex: number,\r\n    bitmap: CanvasRenderingContext2D,\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n    xOffset: number,\r\n    yOffset: number,\r\n  ) {\r\n    let textureAtlas: Texture2D = null;\r\n    if (atlasIndex === this._atlasList.length) {\r\n      textureAtlas = this._createAtlasTexture();\r\n      this._atlasList.push(textureAtlas);\r\n    } else {\r\n      textureAtlas = this._atlasList[atlasIndex];\r\n    }\r\n    this._renderer.updateTextureWithCanvas(textureAtlas, bitmap, xOffset, yOffset, w, h, x, y);\r\n  }\r\n  /** @internal */\r\n  private _updateAtlasTexture(\r\n    atlasIndex: number,\r\n    bitmap: ImageData,\r\n    x: number,\r\n    y: number,\r\n  ) {\r\n    let textureAtlas: Texture2D = null;\r\n    if (atlasIndex === this._atlasList.length) {\r\n      textureAtlas = this._createAtlasTexture();\r\n      this._atlasList.push(textureAtlas);\r\n    } else {\r\n      textureAtlas = this._atlasList[atlasIndex];\r\n    }\r\n    this._renderer.updateTextureWithImage(textureAtlas, bitmap, x, y);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}