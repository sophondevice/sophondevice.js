{"version":3,"file":"enums.js","sources":["../../../../libs/dom/src/typeflex/enums.ts"],"sourcesContent":["export const YGAlignCount = 8;\n\nexport enum YGAlign {\n  Auto,\n  FlexStart,\n  Center,\n  FlexEnd,\n  Stretch,\n  Baseline,\n  SpaceBetween,\n  SpaceAround,\n}\n\nexport function YGAlignToString(value: YGAlign): string {\n  switch (value) {\n  case YGAlign.Auto:\n    return 'auto';\n  case YGAlign.FlexStart:\n    return 'flex-start';\n  case YGAlign.Center:\n    return 'center';\n  case YGAlign.FlexEnd:\n    return 'flex-end';\n  case YGAlign.Stretch:\n    return 'stretch';\n  case YGAlign.Baseline:\n    return 'baseline';\n  case YGAlign.SpaceBetween:\n    return 'space-between';\n  case YGAlign.SpaceAround:\n    return 'space-around';\n  }\n\n  return 'unknown';\n}\n\nexport const YGDimensionCount = 2;\n\nexport enum YGDimension {\n  Width,\n  Height,\n}\n\nexport function YGDimensionToString(value: YGDimension): string {\n  switch (value) {\n  case YGDimension.Width:\n    return 'width';\n  case YGDimension.Height:\n    return 'height';\n  }\n\n  return 'unknown';\n}\n\nexport enum YGDirection {\n  Inherit,\n  LTR,\n  RTL,\n}\n\nexport function YGDirectionToString(value: YGDirection): string {\n  switch (value) {\n  case YGDirection.Inherit:\n    return 'inherit';\n  case YGDirection.LTR:\n    return 'ltr';\n  case YGDirection.RTL:\n    return 'rtl';\n  }\n\n  return 'unknown';\n}\n\nexport const YGDisplayCount = 2;\n\nexport enum YGDisplay {\n  Flex,\n  None,\n}\n\nexport function YGDisplayToString(value: YGDisplay): string {\n  switch (value) {\n  case YGDisplay.Flex:\n    return 'flex';\n  case YGDisplay.None:\n    return 'none';\n  }\n\n  return 'unknown';\n}\n\nexport const YGEdgeCount = 9;\n\nexport enum YGEdge {\n  Left,\n  Top,\n  Right,\n  Bottom,\n  Start,\n  End,\n  Horizontal,\n  Vertical,\n  All,\n}\n\nexport function YGEdgeToString(value: YGEdge): string {\n  switch (value) {\n  case YGEdge.Left:\n    return 'left';\n  case YGEdge.Top:\n    return 'top';\n  case YGEdge.Right:\n    return 'right';\n  case YGEdge.Bottom:\n    return 'bottom';\n  case YGEdge.Start:\n    return 'start';\n  case YGEdge.End:\n    return 'end';\n  case YGEdge.Horizontal:\n    return 'horizontal';\n  case YGEdge.Vertical:\n    return 'vertical';\n  case YGEdge.All:\n    return 'all';\n  }\n\n  return 'unknown';\n}\n\nexport const YGExperimentalFeatureCount = 1;\n\nexport enum YGExperimentalFeature {\n  WebFlexBasis,\n}\n\nexport function YGExperimentalFeatureToString(value: YGExperimentalFeature): string {\n  switch (value) {\n  case YGExperimentalFeature.WebFlexBasis:\n    return 'web-flex-basis';\n  }\n\n  return 'unknown';\n}\n\nexport const YGFlexDirectionCount = 4;\n\nexport enum YGFlexDirection {\n  Column,\n  ColumnReverse,\n  Row,\n  RowReverse,\n}\n\nexport function YGFlexDirectionToString(value: YGFlexDirection): string {\n  switch (value) {\n  case YGFlexDirection.Column:\n    return 'column';\n  case YGFlexDirection.ColumnReverse:\n    return 'column-reverse';\n  case YGFlexDirection.Row:\n    return 'row';\n  case YGFlexDirection.RowReverse:\n    return 'row-reverse';\n  }\n\n  return 'unknown';\n}\n\nexport const YGJustifyCount = 6;\n\nexport enum YGJustify {\n  FlexStart,\n  Center,\n  FlexEnd,\n  SpaceBetween,\n  SpaceAround,\n  SpaceEvenly,\n}\n\nexport function YGJustifyToString(value: YGJustify): string {\n  switch (value) {\n  case YGJustify.FlexStart:\n    return 'flex-start';\n  case YGJustify.Center:\n    return 'center';\n  case YGJustify.FlexEnd:\n    return 'flex-end';\n  case YGJustify.SpaceBetween:\n    return 'space-between';\n  case YGJustify.SpaceAround:\n    return 'space-around';\n  case YGJustify.SpaceEvenly:\n    return 'space-evenly';\n  }\n\n  return 'unknown';\n}\n\nexport const YGLogLevelCount = 6;\n\nexport enum YGLogLevel {\n  Error,\n  Warn,\n  Info,\n  Debug,\n  Verbose,\n  Fatal,\n}\n\nexport function YGLogLevelToString(value: YGLogLevel): string {\n  switch (value) {\n  case YGLogLevel.Error:\n    return 'error';\n  case YGLogLevel.Warn:\n    return 'warn';\n  case YGLogLevel.Info:\n    return 'info';\n  case YGLogLevel.Debug:\n    return 'debug';\n  case YGLogLevel.Verbose:\n    return 'verbose';\n  case YGLogLevel.Fatal:\n    return 'fatal';\n  }\n\n  return 'unknown';\n}\n\nexport const YGMeasureModeCount = 3;\n\nexport enum YGMeasureMode {\n  Undefined,\n  Exactly,\n  AtMost,\n}\n\nexport function YGMeasureModeToString(value: YGMeasureMode): string {\n  switch (value) {\n  case YGMeasureMode.Undefined:\n    return 'undefined';\n  case YGMeasureMode.Exactly:\n    return 'exactly';\n  case YGMeasureMode.AtMost:\n    return 'at-most';\n  }\n\n  return 'unknown';\n}\n\nexport const YGNodeTypeCount = 2;\n\nexport enum YGNodeType {\n  Default,\n  Text,\n}\n\nexport function YGNodeTypeToString(value: YGNodeType): string {\n  switch (value) {\n  case YGNodeType.Default:\n    return 'default';\n  case YGNodeType.Text:\n    return 'text';\n  }\n\n  return 'unknown';\n}\n\nexport const YGOverflowCount = 3;\n\nexport enum YGOverflow {\n  Visible,\n  Hidden,\n  Scroll,\n}\n\nexport function YGOverflowToString(value: YGOverflow): string {\n  switch (value) {\n  case YGOverflow.Visible:\n    return 'visible';\n  case YGOverflow.Hidden:\n    return 'hidden';\n  case YGOverflow.Scroll:\n    return 'scroll';\n  }\n\n  return 'unknown';\n}\n\nexport const YGPositionTypeCount = 2;\n\nexport enum YGPositionType {\n  Relative,\n  Absolute,\n}\n\nexport function YGPositionTypeToString(value: YGPositionType): string {\n  switch (value) {\n  case YGPositionType.Relative:\n    return 'relative';\n  case YGPositionType.Absolute:\n    return 'absolute';\n  }\n\n  return 'unknown';\n}\n\nexport const YGPrintOptionsCount = 3;\n\nexport enum YGPrintOptions {\n  Layout = 1,\n  Style = 2,\n  Children = 4,\n}\n\nexport function YGPrintOptionsToString(value: YGPrintOptions): string {\n  switch (value) {\n  case YGPrintOptions.Layout:\n    return 'layout';\n  case YGPrintOptions.Style:\n    return 'style';\n  case YGPrintOptions.Children:\n    return 'children';\n  }\n\n  return 'unknown';\n}\n\nexport const YGUnitCount = 4;\n\nexport enum YGUnit {\n  Undefined,\n  Point,\n  Percent,\n  Auto,\n}\n\nexport function YGUnitToString(value: YGUnit): string {\n  switch (value) {\n  case YGUnit.Undefined:\n    return 'undefined';\n  case YGUnit.Point:\n    return 'point';\n  case YGUnit.Percent:\n    return 'percent';\n  case YGUnit.Auto:\n    return 'auto';\n  }\n\n  return 'unknown';\n}\n\nexport const YGWrapCount = 3;\n\nexport enum YGWrap {\n  NoWrap,\n  Wrap,\n  WrapReverse,\n}\n\nexport function YGWrapToString(value: YGWrap): string {\n  switch (value) {\n  case YGWrap.NoWrap:\n    return 'no-wrap';\n  case YGWrap.Wrap:\n    return 'wrap';\n  case YGWrap.WrapReverse:\n    return 'wrap-reverse';\n  }\n\n  return 'unknown';\n}\n"],"names":[],"mappings":"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"}