{"version":3,"file":"enums.js","sources":["../../../../libs/dom/src/typeflex/enums.ts"],"sourcesContent":["export const YGAlignCount = 8;\r\n\r\nexport enum YGAlign {\r\n  Auto,\r\n  FlexStart,\r\n  Center,\r\n  FlexEnd,\r\n  Stretch,\r\n  Baseline,\r\n  SpaceBetween,\r\n  SpaceAround,\r\n}\r\n\r\nexport function YGAlignToString(value: YGAlign): string {\r\n  switch (value) {\r\n  case YGAlign.Auto:\r\n    return 'auto';\r\n  case YGAlign.FlexStart:\r\n    return 'flex-start';\r\n  case YGAlign.Center:\r\n    return 'center';\r\n  case YGAlign.FlexEnd:\r\n    return 'flex-end';\r\n  case YGAlign.Stretch:\r\n    return 'stretch';\r\n  case YGAlign.Baseline:\r\n    return 'baseline';\r\n  case YGAlign.SpaceBetween:\r\n    return 'space-between';\r\n  case YGAlign.SpaceAround:\r\n    return 'space-around';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGDimensionCount = 2;\r\n\r\nexport enum YGDimension {\r\n  Width,\r\n  Height,\r\n}\r\n\r\nexport function YGDimensionToString(value: YGDimension): string {\r\n  switch (value) {\r\n  case YGDimension.Width:\r\n    return 'width';\r\n  case YGDimension.Height:\r\n    return 'height';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport enum YGDirection {\r\n  Inherit,\r\n  LTR,\r\n  RTL,\r\n}\r\n\r\nexport function YGDirectionToString(value: YGDirection): string {\r\n  switch (value) {\r\n  case YGDirection.Inherit:\r\n    return 'inherit';\r\n  case YGDirection.LTR:\r\n    return 'ltr';\r\n  case YGDirection.RTL:\r\n    return 'rtl';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGDisplayCount = 2;\r\n\r\nexport enum YGDisplay {\r\n  Flex,\r\n  None,\r\n}\r\n\r\nexport function YGDisplayToString(value: YGDisplay): string {\r\n  switch (value) {\r\n  case YGDisplay.Flex:\r\n    return 'flex';\r\n  case YGDisplay.None:\r\n    return 'none';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGEdgeCount = 9;\r\n\r\nexport enum YGEdge {\r\n  Left,\r\n  Top,\r\n  Right,\r\n  Bottom,\r\n  Start,\r\n  End,\r\n  Horizontal,\r\n  Vertical,\r\n  All,\r\n}\r\n\r\nexport function YGEdgeToString(value: YGEdge): string {\r\n  switch (value) {\r\n  case YGEdge.Left:\r\n    return 'left';\r\n  case YGEdge.Top:\r\n    return 'top';\r\n  case YGEdge.Right:\r\n    return 'right';\r\n  case YGEdge.Bottom:\r\n    return 'bottom';\r\n  case YGEdge.Start:\r\n    return 'start';\r\n  case YGEdge.End:\r\n    return 'end';\r\n  case YGEdge.Horizontal:\r\n    return 'horizontal';\r\n  case YGEdge.Vertical:\r\n    return 'vertical';\r\n  case YGEdge.All:\r\n    return 'all';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGExperimentalFeatureCount = 1;\r\n\r\nexport enum YGExperimentalFeature {\r\n  WebFlexBasis,\r\n}\r\n\r\nexport function YGExperimentalFeatureToString(value: YGExperimentalFeature): string {\r\n  switch (value) {\r\n  case YGExperimentalFeature.WebFlexBasis:\r\n    return 'web-flex-basis';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGFlexDirectionCount = 4;\r\n\r\nexport enum YGFlexDirection {\r\n  Column,\r\n  ColumnReverse,\r\n  Row,\r\n  RowReverse,\r\n}\r\n\r\nexport function YGFlexDirectionToString(value: YGFlexDirection): string {\r\n  switch (value) {\r\n  case YGFlexDirection.Column:\r\n    return 'column';\r\n  case YGFlexDirection.ColumnReverse:\r\n    return 'column-reverse';\r\n  case YGFlexDirection.Row:\r\n    return 'row';\r\n  case YGFlexDirection.RowReverse:\r\n    return 'row-reverse';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGJustifyCount = 6;\r\n\r\nexport enum YGJustify {\r\n  FlexStart,\r\n  Center,\r\n  FlexEnd,\r\n  SpaceBetween,\r\n  SpaceAround,\r\n  SpaceEvenly,\r\n}\r\n\r\nexport function YGJustifyToString(value: YGJustify): string {\r\n  switch (value) {\r\n  case YGJustify.FlexStart:\r\n    return 'flex-start';\r\n  case YGJustify.Center:\r\n    return 'center';\r\n  case YGJustify.FlexEnd:\r\n    return 'flex-end';\r\n  case YGJustify.SpaceBetween:\r\n    return 'space-between';\r\n  case YGJustify.SpaceAround:\r\n    return 'space-around';\r\n  case YGJustify.SpaceEvenly:\r\n    return 'space-evenly';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGLogLevelCount = 6;\r\n\r\nexport enum YGLogLevel {\r\n  Error,\r\n  Warn,\r\n  Info,\r\n  Debug,\r\n  Verbose,\r\n  Fatal,\r\n}\r\n\r\nexport function YGLogLevelToString(value: YGLogLevel): string {\r\n  switch (value) {\r\n  case YGLogLevel.Error:\r\n    return 'error';\r\n  case YGLogLevel.Warn:\r\n    return 'warn';\r\n  case YGLogLevel.Info:\r\n    return 'info';\r\n  case YGLogLevel.Debug:\r\n    return 'debug';\r\n  case YGLogLevel.Verbose:\r\n    return 'verbose';\r\n  case YGLogLevel.Fatal:\r\n    return 'fatal';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGMeasureModeCount = 3;\r\n\r\nexport enum YGMeasureMode {\r\n  Undefined,\r\n  Exactly,\r\n  AtMost,\r\n}\r\n\r\nexport function YGMeasureModeToString(value: YGMeasureMode): string {\r\n  switch (value) {\r\n  case YGMeasureMode.Undefined:\r\n    return 'undefined';\r\n  case YGMeasureMode.Exactly:\r\n    return 'exactly';\r\n  case YGMeasureMode.AtMost:\r\n    return 'at-most';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGNodeTypeCount = 2;\r\n\r\nexport enum YGNodeType {\r\n  Default,\r\n  Text,\r\n}\r\n\r\nexport function YGNodeTypeToString(value: YGNodeType): string {\r\n  switch (value) {\r\n  case YGNodeType.Default:\r\n    return 'default';\r\n  case YGNodeType.Text:\r\n    return 'text';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGOverflowCount = 3;\r\n\r\nexport enum YGOverflow {\r\n  Visible,\r\n  Hidden,\r\n  Scroll,\r\n}\r\n\r\nexport function YGOverflowToString(value: YGOverflow): string {\r\n  switch (value) {\r\n  case YGOverflow.Visible:\r\n    return 'visible';\r\n  case YGOverflow.Hidden:\r\n    return 'hidden';\r\n  case YGOverflow.Scroll:\r\n    return 'scroll';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGPositionTypeCount = 2;\r\n\r\nexport enum YGPositionType {\r\n  Relative,\r\n  Absolute,\r\n}\r\n\r\nexport function YGPositionTypeToString(value: YGPositionType): string {\r\n  switch (value) {\r\n  case YGPositionType.Relative:\r\n    return 'relative';\r\n  case YGPositionType.Absolute:\r\n    return 'absolute';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGPrintOptionsCount = 3;\r\n\r\nexport enum YGPrintOptions {\r\n  Layout = 1,\r\n  Style = 2,\r\n  Children = 4,\r\n}\r\n\r\nexport function YGPrintOptionsToString(value: YGPrintOptions): string {\r\n  switch (value) {\r\n  case YGPrintOptions.Layout:\r\n    return 'layout';\r\n  case YGPrintOptions.Style:\r\n    return 'style';\r\n  case YGPrintOptions.Children:\r\n    return 'children';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGUnitCount = 4;\r\n\r\nexport enum YGUnit {\r\n  Undefined,\r\n  Point,\r\n  Percent,\r\n  Auto,\r\n}\r\n\r\nexport function YGUnitToString(value: YGUnit): string {\r\n  switch (value) {\r\n  case YGUnit.Undefined:\r\n    return 'undefined';\r\n  case YGUnit.Point:\r\n    return 'point';\r\n  case YGUnit.Percent:\r\n    return 'percent';\r\n  case YGUnit.Auto:\r\n    return 'auto';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\nexport const YGWrapCount = 3;\r\n\r\nexport enum YGWrap {\r\n  NoWrap,\r\n  Wrap,\r\n  WrapReverse,\r\n}\r\n\r\nexport function YGWrapToString(value: YGWrap): string {\r\n  switch (value) {\r\n  case YGWrap.NoWrap:\r\n    return 'no-wrap';\r\n  case YGWrap.Wrap:\r\n    return 'wrap';\r\n  case YGWrap.WrapReverse:\r\n    return 'wrap-reverse';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n"],"names":[],"mappings":"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"}