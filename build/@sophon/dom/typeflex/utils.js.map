{"version":3,"file":"utils.js","sources":["../../../../libs/dom/src/typeflex/utils.ts"],"sourcesContent":["import {YGUnit, YGFlexDirection, YGDirection} from './enums';\r\n\r\nimport {YGFloatOptional} from './ygfloatoptional';\r\n\r\nimport {YGFloatIsUndefined, YGUndefined} from './yoga';\r\n\r\nimport {YGNode} from './ygnode';\r\nimport {YGValue} from './ygvalue';\r\n\r\nexport class YGCollectFlexItemsRowValues {\r\n  public itemsOnLine = 0;\r\n  public sizeConsumedOnCurrentLine = 0;\r\n  public totalFlexGrowFactors = 0;\r\n  public totalFlexShrinkScaledFactors = 0;\r\n  public endOfLineIndex = 0;\r\n  public relativeChildren: Array<YGNode> = [];\r\n  public remainingFreeSpace = 0;\r\n  public mainDim = 0;\r\n  public crossDim = 0;\r\n}\r\n\r\nexport function YGValueEqual(a: YGValue, b: YGValue): boolean {\r\n  if (a.unit != b.unit) {\r\n    return false;\r\n  }\r\n\r\n  if (a.unit == YGUnit.Undefined || (YGFloatIsUndefined(a.value) && YGFloatIsUndefined(b.value))) {\r\n    return true;\r\n  }\r\n\r\n  return Math.abs(a.value - b.value) < 0.0001;\r\n}\r\n\r\nexport function YGFloatsEqual(a: number, b: number): boolean {\r\n  if (!YGFloatIsUndefined(a) && !YGFloatIsUndefined(b)) {\r\n    return Math.abs(a - b) < 0.0001;\r\n  }\r\n  return YGFloatIsUndefined(a) && YGFloatIsUndefined(b);\r\n}\r\n\r\nexport function YGFloatMax(a: number, b: number): number {\r\n  if (!YGFloatIsUndefined(a) && !YGFloatIsUndefined(b)) {\r\n    return Math.max(a, b);\r\n  }\r\n  return YGFloatIsUndefined(a) ? b : a;\r\n}\r\n\r\nexport function YGFloatOptionalMax(op1: YGFloatOptional, op2: YGFloatOptional): YGFloatOptional {\r\n  if (!op1.isUndefined() && !op2.isUndefined()) {\r\n    return op1.getValue() > op2.getValue() ? op1 : op2;\r\n  }\r\n\r\n  return op1.isUndefined() ? op2 : op1;\r\n}\r\n\r\nexport function YGFloatMin(a: number, b: number): number {\r\n  if (!YGFloatIsUndefined(a) && !YGFloatIsUndefined(b)) {\r\n    return Math.min(a, b);\r\n  }\r\n  return YGFloatIsUndefined(a) ? b : a;\r\n}\r\n\r\nexport function YGFloatArrayEqual(val1: Array<number>, val2: Array<number>) {\r\n  let areEqual = true;\r\n  for (let i = 0; i < val1.length && areEqual; ++i) {\r\n    areEqual = YGFloatsEqual(val1[i], val2[i]);\r\n  }\r\n  return areEqual;\r\n}\r\n\r\nexport function YGValueArrayEqual(val1: Array<YGValue>, val2: Array<YGValue>) {\r\n  let areEqual = true;\r\n  for (let i = 0; i < val1.length && areEqual; ++i) {\r\n    areEqual = YGValueEqual(val1[i], val2[i]);\r\n  }\r\n  return areEqual;\r\n}\r\n\r\nexport function YGFloatSanitize(val: number): number {\r\n  return YGFloatIsUndefined(val) ? 0 : val;\r\n}\r\n\r\nexport function YGUnwrapFloatOptional(op: YGFloatOptional): number {\r\n  return op.isUndefined() ? YGUndefined : op.getValue();\r\n}\r\n\r\nexport function YGFlexDirectionCross(\r\n  flexDirection: YGFlexDirection,\r\n  direction: YGDirection,\r\n): YGFlexDirection {\r\n  return YGFlexDirectionIsColumn(flexDirection)\r\n    ? YGResolveFlexDirection(YGFlexDirection.Row, direction)\r\n    : YGFlexDirection.Column;\r\n}\r\n\r\nexport function YGFlexDirectionIsRow(flexDirection: YGFlexDirection): boolean {\r\n  return flexDirection == YGFlexDirection.Row || flexDirection == YGFlexDirection.RowReverse;\r\n}\r\n\r\nexport function YGResolveValue(value: YGValue, ownerSize: number): YGFloatOptional {\r\n  switch (value.unit) {\r\n  case YGUnit.Undefined:\r\n  case YGUnit.Auto:\r\n    return new YGFloatOptional();\r\n  case YGUnit.Point:\r\n    return new YGFloatOptional(value.value);\r\n  case YGUnit.Percent:\r\n    return new YGFloatOptional(value.value * ownerSize * 0.01);\r\n  }\r\n  return new YGFloatOptional();\r\n}\r\n\r\nexport function YGFlexDirectionIsColumn(flexDirection: YGFlexDirection): boolean {\r\n  return flexDirection == YGFlexDirection.Column || flexDirection == YGFlexDirection.ColumnReverse;\r\n}\r\n\r\nexport function YGResolveFlexDirection(\r\n  flexDirection: YGFlexDirection,\r\n  direction: YGDirection,\r\n): YGFlexDirection {\r\n  if (direction == YGDirection.RTL) {\r\n    if (flexDirection == YGFlexDirection.Row) {\r\n      return YGFlexDirection.RowReverse;\r\n    } else if (flexDirection == YGFlexDirection.RowReverse) {\r\n      return YGFlexDirection.Row;\r\n    }\r\n  }\r\n  return flexDirection;\r\n}\r\n\r\nexport function YGResolveValueMargin(value: YGValue, ownerSize: number): YGFloatOptional {\r\n  return value.unit == YGUnit.Auto ? new YGFloatOptional(0) : YGResolveValue(value, ownerSize);\r\n}\r\n\r\nexport function cloneYGValueArray(array: Array<YGValue>): Array<YGValue> {\r\n  const ret = new Array(array.length);\r\n  for (let i = 0; i < array.length; i++) {\r\n    ret[i] = array[i].clone();\r\n  }\r\n  return ret;\r\n}\r\n"],"names":[],"mappings":"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"}