{"version":3,"file":"nodelist.js","sources":["../../../libs/dom/src/nodelist.ts"],"sourcesContent":["import {NodeType} from './values';\nimport type {RNode} from './node';\n\ninterface IndexIterator extends Iterator<[number, RNode]> {\n  lastIndex: number;\n}\n\ninterface IndexKeyIterator extends Iterator<number> {\n  lastIndex: number;\n}\n\ninterface IndexValueIterator extends Iterator<RNode> {\n  lastIndex: number;\n}\n\nclass ElementIndexer {\n  static readonly MODE_ALL = 0;\n  static readonly MODE_NON_INTERNAL = 1;\n  static readonly MODE_ELEMENT_NON_INTERNAL = 2;\n  protected _parent: RNode;\n  protected _currentIndex: number;\n  protected _currentNode: RNode;\n  protected _length: number;\n  protected _mode: number;\n  protected _domTag: number;\n  constructor(parent: RNode, mode: number) {\n    this._parent = parent;\n    this._currentIndex = -1;\n    this._currentNode = null;\n    this._length = -1;\n    this._mode = mode;\n    this._domTag = parent.gui.domTag;\n  }\n  get length(): number {\n    return this._getLength();\n  }\n  item(index: number): RNode {\n    return this._at(index);\n  }\n  entries(): Iterable<[number, RNode]> {\n    return this._getEntriesIterator();\n  }\n  keys(): Iterable<number> {\n    return this._getKeysIterator();\n  }\n  values(): Iterable<RNode> {\n    return this._getValuesIterator();\n  }\n  forEach(\n    callback: (currentValue: RNode, currentIndex?: number, listObj?: unknown) => void,\n    thisArg?: unknown,\n  ) {\n    for (const entry of this.entries()) {\n      callback && callback.call(thisArg, entry[1], entry[0], this);\n    }\n  }\n  indexOf(node: RNode): number {\n    for (let i = 0; i < this.length; i++) {\n      if (this.item(i) === node) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  private _at(index: number): RNode {\n    if (index < 0 || index >= this.length) {\n      return null;\n    }\n    if (this._currentIndex < 0 || this._currentIndex >= this.length) {\n      this._reset(index);\n    } else {\n      while (index < this._currentIndex) {\n        this._previous();\n      }\n      while (index > this._currentIndex) {\n        this._next();\n      }\n    }\n    return this._currentNode;\n  }\n  private _reset(index: number) {\n    this._length = -1;\n    this._currentIndex = 0;\n    switch (this._mode) {\n    case ElementIndexer.MODE_ALL:\n      this._currentNode = this._parent._getLayout().firstChild()?.element || null;\n      break;\n    case ElementIndexer.MODE_NON_INTERNAL:\n      this._currentNode = this._getFirstNonInternalNode();\n      break;\n    case ElementIndexer.MODE_ELEMENT_NON_INTERNAL:\n      this._currentNode = this._getFirstNonInternalElement();\n      break;\n    default:\n      break;\n    }\n    while (this._currentIndex < index && this._currentNode) {\n      this._next();\n    }\n  }\n  private _getFirstNonInternalNode(): RNode {\n    for (let child = this._parent._getLayout().firstChild(); child; child = child.nextSibling()) {\n      if (!child.element._isInternal()) {\n        return child.element;\n      }\n    }\n    return null;\n  }\n  private _getFirstNonInternalElement(): RNode {\n    for (let child = this._parent._getLayout().firstChild(); child; child = child.nextSibling()) {\n      if (!child.element._isInternal() && child.element.nodeType === NodeType.ELEMENT_NODE) {\n        return child.element;\n      }\n    }\n    return null;\n  }\n  private _getLengthAll(): number {\n    return this._parent._getLayout().getNumChildren();\n  }\n  private _getLengthNonInternalNode(): number {\n    let length = 0;\n    for (let child = this._parent._getLayout().firstChild(); child; child = child.nextSibling()) {\n      if (!child.element._isInternal()) {\n        length++;\n      }\n    }\n    return length;\n  }\n  private _getLengthNonInternalElement(): number {\n    let length = 0;\n    for (let child = this._parent._getLayout().firstChild(); child; child = child.nextSibling()) {\n      if (!child.element._isInternal() && child.element.nodeType === NodeType.ELEMENT_NODE) {\n        length++;\n      }\n    }\n    return length;\n  }\n  private _getLength(): number {\n    if (this._domTag !== this._parent.gui.domTag) {\n      this._domTag = this._parent.gui.domTag;\n      this._reset(this._currentIndex);\n    }\n    if (this._length < 0) {\n      switch (this._mode) {\n      case ElementIndexer.MODE_ALL:\n        this._length = this._getLengthAll();\n        break;\n      case ElementIndexer.MODE_NON_INTERNAL:\n        this._length = this._getLengthNonInternalNode();\n        break;\n      case ElementIndexer.MODE_ELEMENT_NON_INTERNAL:\n        this._length = this._getLengthNonInternalElement();\n        break;\n      }\n    }\n    return this._length;\n  }\n  private _getKeysIterator() {\n    const that = this;\n    return {\n      [Symbol.iterator](): IndexKeyIterator {\n        return {\n          lastIndex: -1,\n          next(): IteratorResult<number> {\n            this.lastIndex++;\n            if (that._domTag !== that._parent.gui.domTag) {\n              that._domTag = that._parent.gui.domTag;\n              that._reset(this.lastIndex);\n            }\n            if (this.lastIndex >= that.length) {\n              this.lastIndex = -1;\n              return {\n                done: true,\n                value: null,\n              };\n            } else {\n              return {\n                done: false,\n                value: this.lastIndex,\n              };\n            }\n          },\n        };\n      },\n    };\n  }\n  private _getEntriesIterator() {\n    const that = this;\n    return {\n      [Symbol.iterator](): IndexIterator {\n        return {\n          lastIndex: -1,\n          next(): IteratorResult<[number, RNode]> {\n            this.lastIndex++;\n            if (that._domTag !== that._parent.gui.domTag || that._currentIndex !== this.lastIndex) {\n              that._domTag = that._parent.gui.domTag;\n              that._reset(this.lastIndex);\n            }\n            if (!that._currentNode) {\n              this.lastIndex = -1;\n              return {\n                done: true,\n                value: null,\n              };\n            } else {\n              const ret: IteratorResult<[number, RNode]> = {\n                done: false,\n                value: [that._currentIndex, that._currentNode],\n              };\n              that._next();\n              return ret;\n            }\n          },\n        };\n      },\n    };\n  }\n  private _getValuesIterator() {\n    const that = this;\n    return {\n      [Symbol.iterator](): IndexValueIterator {\n        return {\n          lastIndex: -1,\n          next(): IteratorResult<RNode> {\n            this.lastIndex++;\n            if (that._domTag !== that._parent.gui.domTag || that._currentIndex !== this.lastIndex) {\n              that._domTag = that._parent.gui.domTag;\n              that._reset(this.lastIndex);\n            }\n            if (!that._currentNode) {\n              this.lastIndex = -1;\n              return {\n                done: true,\n                value: null,\n              };\n            } else {\n              const ret: IteratorResult<RNode> = {\n                done: false,\n                value: that._currentNode,\n              };\n              that._next();\n              return ret;\n            }\n          },\n        };\n      },\n    };\n  }\n  private _next(): void {\n    if (this._currentNode) {\n      switch (this._mode) {\n      case ElementIndexer.MODE_ALL: {\n        this._currentNode = this._currentNode._getLayout().nextSibling()?.element || null;\n        break;\n      }\n      case ElementIndexer.MODE_NON_INTERNAL: {\n        do {\n          this._currentNode = this._currentNode._getLayout().nextSibling()?.element || null;\n        } while (this._currentNode?._isInternal());\n        break;\n      }\n      case ElementIndexer.MODE_ELEMENT_NON_INTERNAL: {\n        do {\n          this._currentNode = this._currentNode._getLayout().nextSibling()?.element || null;\n        } while (\n          this._currentNode &&\n            (this._currentNode._isInternal() ||\n              this._currentNode.nodeType !== NodeType.ELEMENT_NODE)\n        );\n        break;\n      }\n      }\n      this._currentIndex++;\n    }\n  }\n  private _previous(): void {\n    if (this._currentNode) {\n      switch (this._mode) {\n      case ElementIndexer.MODE_ALL: {\n        this._currentNode = this._currentNode._getLayout().previousSibling()?.element || null;\n        break;\n      }\n      case ElementIndexer.MODE_NON_INTERNAL: {\n        do {\n          this._currentNode = this._currentNode._getLayout().previousSibling()?.element || null;\n        } while (this._currentNode?._isInternal());\n        break;\n      }\n      case ElementIndexer.MODE_ELEMENT_NON_INTERNAL: {\n        do {\n          this._currentNode = this._currentNode._getLayout().previousSibling()?.element || null;\n        } while (\n          this._currentNode &&\n            (this._currentNode._isInternal() ||\n              this._currentNode.nodeType !== NodeType.ELEMENT_NODE)\n        );\n        break;\n      }\n      }\n      this._currentIndex--;\n    }\n  }\n}\n\nexport interface RNodeList {\n  length: number;\n  item(index: number): RNode;\n  entries(): Iterable<[number, RNode]>;\n  keys(): Iterable<number>;\n  values(): Iterable<RNode>;\n  indexOf(node: RNode): number;\n  forEach(\n    callback: (currentValue: RNode, currentIndex?: number, listObj?: RNodeList) => void,\n    thisArg?: unknown,\n  ): void;\n  [index: number]: RNode;\n}\n\n/** @internal */\nexport interface RStaticNodeList extends RNodeList {}\n\n/** @internal */\nexport class RStaticNodeList {\n  private _nodelist: RNode[];\n  constructor(nodelist: RNode[]) {\n    this._nodelist = nodelist;\n    return new Proxy(this, {\n      get: function (target, name) {\n        if (typeof name === 'string' && /^\\d+$/.test(name)) {\n          return target._nodelist[parseInt(name)] || undefined;\n        } else {\n          return target[name];\n        }\n      },\n      set: function () {\n        return false;\n      },\n    });\n  }\n  get length(): number {\n    return this._nodelist.length;\n  }\n  item(index: number): RNode {\n    return this._nodelist[index] || null;\n  }\n  entries(): Iterable<[number, RNode]> {\n    const that = this;\n    return {\n      [Symbol.iterator](): IndexIterator {\n        return {\n          lastIndex: -1,\n          next(): IteratorResult<[number, RNode]> {\n            this.lastIndex++;\n            if (this.lastIndex >= that.length) {\n              this.lastIndex = -1;\n              return {\n                done: true,\n                value: null,\n              };\n            } else {\n              return {\n                done: false,\n                value: [this.lastIndex, that.item(this.lastIndex)],\n              };\n            }\n          },\n        };\n      },\n    };\n  }\n  keys(): Iterable<number> {\n    const that = this;\n    return {\n      [Symbol.iterator](): IndexKeyIterator {\n        return {\n          lastIndex: -1,\n          next(): IteratorResult<number> {\n            this.lastIndex++;\n            if (this.lastIndex >= that.length) {\n              this.lastIndex = -1;\n              return {\n                done: true,\n                value: null,\n              };\n            } else {\n              return {\n                done: false,\n                value: this.lastIndex,\n              };\n            }\n          },\n        };\n      },\n    };\n  }\n  values(): Iterable<RNode> {\n    const that = this;\n    return {\n      [Symbol.iterator](): IndexValueIterator {\n        return {\n          lastIndex: -1,\n          next(): IteratorResult<RNode> {\n            this.lastIndex++;\n            if (this.lastIndex >= that.length) {\n              this.lastIndex = -1;\n              return {\n                done: true,\n                value: null,\n              };\n            } else {\n              return {\n                done: false,\n                value: that.item(this.lastIndex),\n              };\n            }\n          },\n        };\n      },\n    };\n  }\n  indexOf(node: RNode): number {\n    return this._nodelist.indexOf(node);\n  }\n  forEach(\n    callback: (currentValue: RNode, currentIndex?: number, listObj?: RNodeList) => void,\n    thisArg?: unknown,\n  ): void {\n    const that = this;\n    if (callback) {\n      for (let i = 0; i < this._nodelist.length; i++) {\n        callback.call(thisArg, that._nodelist[i], i, that);\n      }\n    }\n  }\n}\n\n/** @internal */\nexport interface RLiveNodeList extends RNodeList {}\n\n/** @internal */\nexport class RLiveNodeList {\n  static readonly MODE_ALL = ElementIndexer.MODE_ALL;\n  static readonly MODE_NON_INTERNAL = ElementIndexer.MODE_NON_INTERNAL;\n  static readonly MODE_ELEMENT_NON_INTERNAL = ElementIndexer.MODE_ELEMENT_NON_INTERNAL;\n  private _indexer: ElementIndexer;\n  constructor(parent: RNode, mode: number) {\n    this._indexer = new ElementIndexer(parent, mode);\n    const proxy = new Proxy(this, {\n      get: function (target, name) {\n        if (typeof name === 'string' && /^\\d+$/.test(name)) {\n          return target._indexer.item(parseInt(name)) || undefined;\n        } else {\n          return target._indexer[name];\n        }\n      },\n      set: function (target, name, value) {\n        if (typeof name === 'string' && /^\\d+$/.test(name)) {\n          return false;\n        } else {\n          target._indexer[name] = value;\n          return true;\n        }\n      },\n    });\n    return proxy;\n  }\n}\n"],"names":[],"mappings":"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"}