{"version":3,"file":"document.js","sources":["../../../libs/dom/src/document.ts"],"sourcesContent":["import {RNode} from './node';\r\nimport {RNodeList, RStaticNodeList} from './nodelist';\r\nimport type {RElement} from './element';\r\nimport type { RText } from './components/text';\r\nimport type {GUI} from './gui';\r\nimport type {IStyleSheet} from './style';\r\n\r\nexport class RDocument extends RNode {\r\n  /** @internal */\r\n  private _textContent: string;\r\n  constructor(uiscene: GUI) {\r\n    super(uiscene);\r\n    this._textContent = '';\r\n  }\r\n  get nodeType(): number {\r\n    return RNode.DOCUMENT_NODE;\r\n  }\r\n  get nodeName(): string {\r\n    return '#document';\r\n  }\r\n  get head(): RElement {\r\n    return this.querySelector('head');\r\n  }\r\n  get body(): RElement {\r\n    return this.querySelector('body');\r\n  }\r\n  get baseURI(): string {\r\n    return this._uiscene.baseURI;\r\n  }\r\n  set baseURI(val: string) {\r\n    this._uiscene.baseURI = val;\r\n  }\r\n  get textContent(): string {\r\n    return this._textContent;\r\n  }\r\n  set textContent(val: string) {\r\n    this._textContent = val;\r\n  }\r\n  get documentElement(): RElement {\r\n    return this.firstElementChild || null;\r\n  }\r\n  get children(): RNodeList {\r\n    return this._childrenElements;\r\n  }\r\n  get childElementCount(): number {\r\n    return this._childrenElements.length;\r\n  }\r\n  get firstElementChild(): RElement {\r\n    return this._getFirstChild(true) as RElement;\r\n  }\r\n  get lastElementChild(): RElement {\r\n    return this._getLastChild(true) as RElement;\r\n  }\r\n  appendChild(child: RNode): RNode {\r\n    if (child.nodeType !== RNode.ELEMENT_NODE) {\r\n      throw new Error('Failed to execute appendChild: only element can be inserted into document');\r\n    } else if (this.childElementCount > 0) {\r\n      throw new Error(\r\n        'Failed to execute appendChild: only one element can be inserted into document',\r\n      );\r\n    }\r\n    return super.appendChild(child);\r\n  }\r\n  insertBefore(newElement: RNode, referenceElement: RNode) {\r\n    if (!newElement || newElement.nodeType !== RNode.ELEMENT_NODE) {\r\n      throw new Error('Failed to execute insertBefore: only element can be inserted into document');\r\n    } else if (referenceElement || this.childElementCount > 0) {\r\n      throw new Error(\r\n        'Failed to execute insertBefore: only one element can be inserted into document',\r\n      );\r\n    }\r\n    return super.appendChild(newElement);\r\n  }\r\n  append(...nodes: (RNode | string)[]): void {\r\n    this._append(...nodes);\r\n  }\r\n  prepend(...nodes: (RNode | string)[]): void {\r\n    this._prepend(...nodes);\r\n  }\r\n  querySelectorAll(selectors: string): RNodeList {\r\n    return new RStaticNodeList(this._uiscene._querySelectorAll(this, selectors, true, false));\r\n  }\r\n  querySelector<T extends RElement>(selectors: string): T {\r\n    return this._uiscene._querySelectorOne<T>(this, selectors, true, false);\r\n  }\r\n  getElementsByTagName(tagname: string): RNodeList {\r\n    const results: RElement[] = [];\r\n    for (let child = this.firstElementChild; child; child = child.nextElementSibling) {\r\n      this._uiscene._getElementsByTagName(child, tagname, results);\r\n    }\r\n    return new RStaticNodeList(results);\r\n  }\r\n  getElementsByClassName(classnames: string): RNodeList {\r\n    const results: RElement[] = [];\r\n    classnames = classnames || '';\r\n    const classNameList = classnames.split(/\\s+/).filter((val) => !!val);\r\n    if (classNameList.length > 0) {\r\n      for (let child = this.firstElementChild; child; child = child.nextElementSibling) {\r\n        this._uiscene._getElementsByClassName(child, classNameList, results);\r\n      }\r\n    }\r\n    return new RStaticNodeList(results);\r\n  }\r\n  getElementById(id: string): RElement {\r\n    return this._uiscene._getElementById(this, id);\r\n  }\r\n  createElement<T extends RElement = RElement>(tagname: string): T {\r\n    return this._uiscene.createElement<T>(tagname);\r\n  }\r\n  createTextNode(): RText {\r\n    return this._uiscene.createTextNode();\r\n  }\r\n  /** @internal */\r\n  _getDefaultStyleSheet(): IStyleSheet {\r\n    return {\r\n      position: 'absolute',\r\n      flexDirection: 'column',\r\n      left: '0px',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      overflow: 'auto',\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}