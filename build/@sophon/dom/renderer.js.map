{"version":3,"file":"renderer.js","sources":["../../../libs/dom/src/renderer.ts"],"sourcesContent":["import { Matrix4x4, Vector3, Vector4, REventTarget } from '@sophon/base';\nimport { \n  BindGroup,\n  RenderStateSet,\n  BlendFunc,\n  FaceMode,\n  ProgramBuilder,\n  Device,\n  Texture2D,\n  GPUProgram,\n  PrimitiveType,\n  TextureFormat,\n  makeVertexBufferType,\n  TextureSampler,\n  TextureFilter,\n  Primitive\n} from '@sophon/device';\nimport { RMouseEvent, RDragEvent, RKeyEvent } from './events';\nimport type { RColor } from './types';\nimport type { GUI } from './gui';\nimport type { RNode } from './node';\n\nexport class GUIRenderer extends REventTarget {\n  /** @internal */\n  private static readonly VAO_BUFFER_SIZE = 8192;\n  /** @internal */\n  private _device: Device;\n  /** @internal */\n  private _primitiveBuffer: Primitive[];\n  /** @internal */\n  private _activeBuffer: number;\n  /** @internal */\n  private _drawPosition: number;\n  /** @internal */\n  private _drawCount: number;\n  /** @internal */\n  private _currentTexture: Texture2D;\n  /** @internal */\n  private _program: GPUProgram;\n  /** @internal */\n  private _textureSampler: TextureSampler;\n  /** @internal */\n  private _programTexture: GPUProgram;\n  /** @internal */\n  private _bindGroup: BindGroup;\n  /** @internal */\n  private _bindGroupTexture: BindGroup;\n  /** @internal */\n  private _renderStateSet: RenderStateSet;\n  /** @internal */\n  private _vertexCache: Float32Array;\n  /** @internal */\n  private _projectionMatrix: Matrix4x4;\n  /** @internal */\n  private _flipMatrix: Matrix4x4;\n  /** @internal */\n  private _savedViewports: number[][];\n  /** @internal */\n  private _savedScissors: number[][];\n  constructor(device: Device) {\n    super();\n    this._device = device;\n    this._projectionMatrix = Matrix4x4.ortho(0, this._device.getDrawingBufferWidth(), 0, this._device.getDrawingBufferHeight(), 1, 100);\n    this._flipMatrix = Matrix4x4.translation(new Vector3(0, this._device.getDrawingBufferHeight(), 0)).scaleRight(new Vector3(1, -1, 1));\n    this._program = this.createProgram(false);\n    this._programTexture = this.createProgram(true);\n    this._bindGroup = this._device.createBindGroup(this._program.bindGroupLayouts[0]);\n    this._bindGroupTexture = this._device.createBindGroup(this._programTexture.bindGroupLayouts[0]);\n    this._textureSampler = this._device.createSampler({\n      magFilter: TextureFilter.Nearest,\n      minFilter: TextureFilter.Nearest,\n      mipFilter: TextureFilter.None\n    });\n    this._renderStateSet = this.createStateSet();\n    this._primitiveBuffer = [new Primitive(device), new Primitive(device)];\n    this._activeBuffer = 0;\n    this._savedViewports = [];\n    this._savedScissors = [];\n    const indexArray = new Uint32Array(Array.from({ length: GUIRenderer.VAO_BUFFER_SIZE * 6 }));\n    for (let i = 0; i < GUIRenderer.VAO_BUFFER_SIZE; i++) {\n      const base = i * 4;\n      indexArray[i * 6 + 0] = base + 0;\n      indexArray[i * 6 + 1] = base + 1;\n      indexArray[i * 6 + 2] = base + 2;\n      indexArray[i * 6 + 3] = base + 0;\n      indexArray[i * 6 + 4] = base + 2;\n      indexArray[i * 6 + 5] = base + 3;\n    }\n    for (let i = 0; i < 2; i++) {\n      const indexbuffer = this._device.createIndexBuffer(indexArray, { managed: true });\n      this._primitiveBuffer[i].setIndexBuffer(indexbuffer);\n      this._primitiveBuffer[i].primitiveType = PrimitiveType.TriangleList;\n      const buffer = this._device.createStructuredBuffer(makeVertexBufferType(GUIRenderer.VAO_BUFFER_SIZE * 4, 'position_f32x3', 'diffuse_f32x4', 'tex0_f32x2'), { usage: 'vertex', dynamic: true });\n      this._primitiveBuffer[i].setVertexBuffer(buffer);\n    }\n    this._drawPosition = 0;\n    this._drawCount = 0;\n    this._currentTexture = null;\n    this._vertexCache = new Float32Array(9 * 4 * GUIRenderer.VAO_BUFFER_SIZE);\n  }\n  get device() {\n    return this._device;\n  }\n  dispose() {\n    this._primitiveBuffer = null;\n    this._vertexCache = null;\n    this._device = null;\n  }\n  getCanvas(): HTMLCanvasElement {\n    return this._device.getCanvas();\n  }\n  getDrawingBufferWidth(): number {\n    return this._device.deviceToScreen(this._device.getDrawingBufferWidth());\n  }\n  getDrawingBufferHeight(): number {\n    return this._device.deviceToScreen(this._device.getDrawingBufferHeight());\n  }\n  screenToDevice(val: number): number {\n    return this._device.screenToDevice(val);\n  }\n  deviceToScreen(val: number): number {\n    return this._device.deviceToScreen(val);\n  }\n  supportColorComposition(): boolean {\n    return true;\n  }\n  createTexture(width: number, height: number, color: RColor, linear: boolean): Texture2D {\n    const tex = this._device.createTexture2D(TextureFormat.RGBA8UNORM, width, height, { colorSpace: linear ? 'linear' : 'srgb', noMipmap: true });\n    if (color) {\n      this.clearTexture(tex, color);\n    }\n    return tex;\n  }\n  clearTexture(tex: Texture2D, color: RColor) {\n    const pixels = new Uint8Array(tex.width * tex.height * 4);\n    const r = Math.round(color.r * 255);\n    const g = Math.round(color.g * 255);\n    const b = Math.round(color.b * 255);\n    const a = Math.round(color.a * 255);\n    for (let i = 0; i < tex.width * tex.height; i++) {\n      pixels[i * 4 + 0] = r;\n      pixels[i * 4 + 1] = g;\n      pixels[i * 4 + 2] = b;\n      pixels[i * 4 + 3] = a;\n    }\n    tex.update(pixels, 0, 0, tex.width, tex.height);\n  }\n  updateTextureWithImage(texture: Texture2D, bitmap: ImageData, x: number, y: number): void {\n    const originValues = new Uint8Array(bitmap.data.buffer);\n    console.assert(texture.format === TextureFormat.RGBA8UNORM);\n    texture.update(originValues, x, y, bitmap.width, bitmap.height);\n  }\n  updateTextureWithCanvas(texture: Texture2D, ctx: CanvasRenderingContext2D, cvsOffsetX: number, cvsOffsetY: number, w: number, h: number, x: number, y: number): void {\n    texture.updateFromElement(ctx.canvas, x, y, cvsOffsetX, cvsOffsetY, w, h);\n  }\n  getTextureWidth(texture: Texture2D): number {\n    return texture.width;\n  }\n  getTextureHeight(texture: Texture2D): number {\n    return texture.height;\n  }\n  disposeTexture(texture: Texture2D): void {\n    texture?.dispose();\n  }\n  setCursorStyle(style: string): void {\n    this.getCanvas().style.cursor = style;\n  }\n  getCursorStyle(): string {\n    return this.getCanvas().style.cursor;\n  }\n  drawQuads(data: Float32Array, texture: Texture2D) {\n    let tex = texture || null;\n    if (tex?.disposed) {\n      tex = null;\n    }\n    if (tex !== this._currentTexture || this._drawPosition + this._drawCount === GUIRenderer.VAO_BUFFER_SIZE) {\n      this.flush();\n      this._currentTexture = tex;\n    }\n    let updatePosition = this._drawPosition + this._drawCount;\n    let count = data.length / 36;\n    let pos = 0;\n    while (updatePosition < GUIRenderer.VAO_BUFFER_SIZE && count > 0) {\n      const drawCount = Math.min(count, GUIRenderer.VAO_BUFFER_SIZE - updatePosition);\n      const subdata = pos === 0 && drawCount === count ? data : data.subarray(pos, pos + drawCount * 36);\n      this._vertexCache.set(subdata, updatePosition * 36);\n      this._drawCount += drawCount;\n      pos += drawCount * 36;\n      updatePosition += drawCount;\n      count -= drawCount;\n      if (updatePosition === GUIRenderer.VAO_BUFFER_SIZE) {\n        this.flush();\n        updatePosition = this._drawPosition + this._drawCount;\n      }\n    }\n  }\n  flush() {\n    if (this._drawCount > 0) {\n      const buffer = this._primitiveBuffer[this._activeBuffer];\n      buffer.getVertexBuffer('position').bufferSubData(this._drawPosition * 36 * this._vertexCache.BYTES_PER_ELEMENT, this._vertexCache, this._drawPosition * 36, this._drawCount * 36);\n      if (this._currentTexture) {\n        this._device.setProgram(this._programTexture);\n        this._bindGroupTexture.setTexture('tex', this._currentTexture, this._textureSampler);\n        this._device.setBindGroup(0, this._bindGroupTexture);\n      } else {\n        this._device.setProgram(this._program);\n        this._device.setBindGroup(0, this._bindGroup);\n      }\n      this._device.setBindGroup(1, null);\n      this._device.setBindGroup(2, null);\n      this._device.setBindGroup(3, null);\n      this._device.setRenderStates(this._renderStateSet);\n      buffer.indexStart = this._drawPosition * 6;\n      buffer.indexCount = this._drawCount * 6;\n      buffer.draw();\n      if (this._drawPosition + this._drawCount === GUIRenderer.VAO_BUFFER_SIZE) {\n        this._activeBuffer = 1 - this._activeBuffer;\n        this._drawPosition = 0;\n      } else {\n        this._drawPosition += this._drawCount;\n      }\n      this._drawCount = 0;\n    }\n  }\n  pushViewport(x: number, y: number, w: number, h: number) {\n    this._savedViewports.push(this._device.getViewport());\n    this._device.setViewport(x, y, w, h);\n  }\n  popViewport() {\n    const saved = this._savedViewports.pop();\n    this._device.setViewport(saved[0], saved[1], saved[2], saved[3]);\n  }\n  pushScissor(x: number, y: number, w: number, h: number) {\n    this._savedScissors.push(this._device.getScissor());\n    this._device.setScissor(x, y, w, h);\n  }\n  popScissor() {\n    const saved = this._savedScissors.pop();\n    this._device.setScissor(saved[0], saved[1], saved[2], saved[3]);\n  }\n  beginRender() {\n    this._device.setViewport();\n    this._device.setScissor();\n    this._projectionMatrix.ortho(0, this.getDrawingBufferWidth(), 0, this.getDrawingBufferHeight(), 1, 100);\n    this._flipMatrix = Matrix4x4.translation(new Vector3(0, this.getDrawingBufferHeight(), 0)).scaleRight(new Vector3(1, -1, 1));\n    const mvpMatrix = Matrix4x4.multiply(this._projectionMatrix, this._flipMatrix);\n    this._bindGroup.setValue('transform', { mvpMatrix });\n    this._bindGroupTexture.setValue('transform', { mvpMatrix });\n    this._device.clearFrameBuffer(new Vector4(0, 0, 0, 1), 1, 0);\n  }\n  endRender() {\n    this.flush();\n  }\n  beginCustomDraw(node: RNode) {\n    this.flush();\n    const vp = this._device.getViewport();\n    const height = vp[3];\n    const rect = node.getClientRect();\n    const pos = node.toAbsolute({ x: 0, y: 0 });\n    const posClient = { x: pos.x + rect.x, y: pos.y + rect.y };\n    let x = posClient.x;\n    let y = height - posClient.y - rect.height;\n    const w = rect.width;\n    const h = rect.height;\n    this.pushViewport(x, y, w, h);\n    const cliprect = node.getClippedRect() || rect;\n    if (cliprect) {\n      x = cliprect.x + pos.x;\n      y = height - cliprect.y - pos.y - cliprect.height;\n    }\n    this.pushScissor(x, y, cliprect.width, cliprect.height);\n  }\n  endCustomDraw(node: RNode) {\n    this.popScissor();\n    this.popViewport();\n  }\n  /** @internal */\n  private createStateSet(): RenderStateSet {\n    const rs = this._device.createRenderStateSet();\n    rs.useBlendingState().enable(true).setBlendFunc(BlendFunc.ONE, BlendFunc.INV_SRC_ALPHA);\n    rs.useDepthState().enableTest(false).enableWrite(false);\n    rs.useRasterizerState().setCullMode(FaceMode.NONE);\n    return rs;\n  }\n  /** @internal */\n  private createProgram(diffuseMap: boolean): GPUProgram {\n    const pb = new ProgramBuilder(this._device);\n    const structUniform = pb.defineStruct('UIMaterialUniforms', 'std140', pb.mat4('mvpMatrix'));\n    return pb.buildRenderProgram({\n      label: 'UI',\n      vertex() {\n        this.$inputs.pos = pb.vec3().attrib('position');\n        this.$inputs.diffuse = pb.vec4().attrib('diffuse');\n        this.$outputs.outDiffuse = pb.vec4();\n        if (diffuseMap) {\n          this.$inputs.uv = pb.vec2().attrib('texCoord0');\n          this.$outputs.outUV = pb.vec2();\n        }\n        this.transform = structUniform().uniform(0);\n        this.$mainFunc(function () {\n          this.$builtins.position = pb.mul(this.transform.mvpMatrix, pb.vec4(this.$inputs.pos, 1));\n          this.$outputs.outDiffuse = this.$inputs.diffuse;\n          if (diffuseMap) {\n            this.$outputs.outUV = this.$inputs.uv;\n          }\n        });\n      },\n      fragment() {\n        this.$outputs.outColor = pb.vec4();\n        if (diffuseMap) {\n          this.tex = pb.tex2D().uniform(0);\n        }\n        this.$mainFunc(function () {\n          if (diffuseMap) {\n            this.$l.color = pb.mul(pb.textureSample(this.tex, this.$inputs.outUV), this.$inputs.outDiffuse);\n          } else {\n            this.$l.color = this.$inputs.outDiffuse;\n          }\n          this.$outputs.outColor = (pb.vec4(pb.pow(pb.mul(this.color.xyz, this.color.w), pb.vec3(1 / 2.2)), this.color.w));\n        });\n      }\n    })\n  }\n}\n\nfunction _createMouseEvent(type: string, src: PointerEvent | WheelEvent): RMouseEvent {\n  return new RMouseEvent(\n    type,\n    src.offsetX,\n    src.offsetY,\n    0,\n    0,\n    src.button,\n    src.buttons,\n    (src as WheelEvent).deltaX ?? 0,\n    (src as WheelEvent).deltaY ?? 0,\n    src.ctrlKey,\n    src.shiftKey,\n    src.altKey,\n    src.metaKey,\n  );\n}\nfunction _createDragEvent(type: string, src: DragEvent): RDragEvent {\n  return new RDragEvent(\n    type,\n    src.offsetX,\n    src.offsetY,\n    0,\n    0,\n    src.button,\n    src.buttons,\n    src.ctrlKey,\n    src.shiftKey,\n    src.altKey,\n    src.metaKey,\n    src.dataTransfer,\n  );\n}\nfunction _createKeyEvent(type: string, src: KeyboardEvent): RKeyEvent {\n  return new RKeyEvent(\n    type,\n    src.code,\n    src.key,\n    src.repeat,\n    src.ctrlKey,\n    src.shiftKey,\n    src.altKey,\n    src.metaKey,\n  );\n}\n\nexport function injectGUIEvents(gui: GUI, renderer: GUIRenderer): void {\n  type PointerEventName = 'pointerdown' | 'pointerup' | 'pointermove' | 'wheel';\n  type DragEventName = 'dragenter' | 'dragover' | 'drop';\n  const canvas = renderer.getCanvas();\n  const mouseEventNames: PointerEventName[] = ['pointerdown', 'pointerup', 'pointermove', 'wheel'];\n  const dragEventNames: DragEventName[] = ['dragenter', 'dragover', 'drop'];\n  const rendererMouseEventNames = [\n    RMouseEvent.NAME_RENDERER_MOUSEDOWN,\n    RMouseEvent.NAME_RENDERER_MOUSEUP,\n    RMouseEvent.NAME_RENDERER_MOUSEMOVE,\n    RMouseEvent.NAME_RENDERER_MOUSEWHEEL,\n  ];\n  const rendererDragEventNames = [\n    RMouseEvent.NAME_RENDERER_DRAGENTER,\n    RMouseEvent.NAME_RENDERER_DRAGOVER,\n    RMouseEvent.NAME_RENDERER_DRAGDROP,\n  ];\n  let captureId: number = null;\n  for (let i = 0; i < mouseEventNames.length; i++) {\n    canvas.addEventListener(mouseEventNames[i], (evt: PointerEvent | WheelEvent) => {\n      if (mouseEventNames[i] === 'pointerdown' && evt.button === 0) {\n        captureId = (evt as PointerEvent).pointerId;\n        canvas.setPointerCapture(captureId);\n      } else if (mouseEventNames[i] === 'pointerup' && (evt as PointerEvent).pointerId === captureId) {\n        canvas.releasePointerCapture(captureId);\n        captureId = null;\n      }\n      gui.dispatchEvent(_createMouseEvent(rendererMouseEventNames[i], evt));\n    });\n  }\n  for (let i = 0; i < dragEventNames.length; i++) {\n    canvas.addEventListener(dragEventNames[i], (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      gui.dispatchEvent(_createDragEvent(rendererDragEventNames[i], evt));\n    });\n  }\n  type KeyEventName = 'keydown' | 'keyup' | 'keypress';\n  const keyEventNames: KeyEventName[] = ['keydown', 'keyup', 'keypress'];\n  const rendererKeyEventNames = [\n    RKeyEvent.NAME_RENDERER_KEYDOWN,\n    RKeyEvent.NAME_RENDERER_KEYUP,\n    RKeyEvent.NAME_RENDERER_KEYPRESS,\n  ];\n  for (let i = 0; i < keyEventNames.length; i++) {\n    canvas.addEventListener(keyEventNames[i], (evt: KeyboardEvent) => {\n      gui.dispatchEvent(_createKeyEvent(rendererKeyEventNames[i], evt));\n    });\n  }\n}\n"],"names":[],"mappings":"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"}