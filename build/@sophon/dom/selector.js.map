{"version":3,"file":"selector.js","sources":["../../../libs/dom/src/selector.ts"],"sourcesContent":["import { List, ListIterator } from '@sophon/base';\r\nimport { RNode } from './node';\r\nimport type { RElement } from './element';\r\n\r\nconst rIdentifier = /^([^\\s.*[\\]|()$^+#><~!=:]+)/;\r\nconst rOp = /^\\s*(=|~=|\\|=|\\^=|\\$=|\\*=)?\\s*/;\r\nconst rCombine = /^\\s*([>|~|+]?)\\s*/;\r\nconst rLiteral = /^\"(.*)\"|'(.*)'/;\r\nconst rCloseBracket = /^\\s*\\]/;\r\nconst rWS = /^\\s*$/;\r\n\r\nconst enum Combine {\r\n  NONE,\r\n  DESCEND,\r\n  CHILD,\r\n  SIBLING,\r\n  ADJACENT,\r\n}\r\n\r\nconst enum Op {\r\n  ANY,\r\n  EQUAL,\r\n  CONTAINS,\r\n  START,\r\n  END,\r\n}\r\n\r\nconst enum Filter {\r\n  NONE,\r\n  TAGNAME,\r\n  CLASS,\r\n  ID,\r\n  COMBINE,\r\n  ATTRIBUTE,\r\n  PSEUDO_CLASS,\r\n  PSEUDO_ELEMENT,\r\n}\r\n\r\ninterface FilterInfo {\r\n  type: Filter;\r\n  name?: string; // tag|class|id|pseudo\r\n  combineType?: Combine;\r\n  attribOp?: Op;\r\n  attribKey?: string;\r\n  attribValue?: string;\r\n  numIds?: number;\r\n  numClasses?: number;\r\n  numTypes?: number;\r\n}\r\n\r\ninterface IPseudoElementCallback {\r\n  (node: RNode, pseudoType: string): void;\r\n}\r\n\r\nexport class Rule {\r\n  /** @internal */\r\n  filters: List<FilterInfo>;\r\n  /** @internal */\r\n  targets: Set<RNode>;\r\n  /** @internal */\r\n  specificity: number;\r\n  constructor() {\r\n    this.filters = new List<FilterInfo>();\r\n    this.targets = new Set();\r\n    this.specificity = 0;\r\n  }\r\n  resolve(\r\n    roots: RNode[],\r\n    up: boolean,\r\n    allowInternal: boolean,\r\n    pseudoElementCallback?: IPseudoElementCallback,\r\n  ) {\r\n    const allElements: Set<RNode> = new Set();\r\n    roots.forEach((root) => {\r\n      this._traverseElement(root, allowInternal, (el) => {\r\n        allElements.add(el);\r\n      });\r\n      if (up) {\r\n        let p = root.parentNode;\r\n        while (p) {\r\n          if (allowInternal || p.nodeType === RNode.ELEMENT_NODE) {\r\n            allElements.add(p as RElement);\r\n          }\r\n          p = p.parentNode;\r\n        }\r\n      }\r\n    });\r\n    this.targets = new Set(allElements);\r\n    for (const it = this.filters.begin(); it.valid(); it.next()) {\r\n      let tmp: Set<RNode> = new Set();\r\n      if (it.data.type != Filter.COMBINE) {\r\n        this.targets.forEach((el) => {\r\n          this._walkWithFilter(it, el, tmp, allowInternal, allElements, pseudoElementCallback);\r\n        });\r\n        const t = this.targets;\r\n        this.targets = tmp;\r\n        tmp = t;\r\n        tmp.clear();\r\n      }\r\n    }\r\n  }\r\n  /** @internal */\r\n  private _traverseElement(\r\n    element: RNode,\r\n    allowInternal: boolean,\r\n    cb: (element: RNode) => void,\r\n  ): void {\r\n    if (allowInternal || !element._isInternal()) {\r\n      if (allowInternal || element.nodeType === RNode.ELEMENT_NODE) {\r\n        cb(element as RElement);\r\n      }\r\n      const children = element._getChildren();\r\n      children.forEach((child) => this._traverseElement(child, allowInternal, cb));\r\n    }\r\n  }\r\n  /** @internal */\r\n  private _check(filter: FilterInfo, element: RNode): boolean {\r\n    switch (filter.type) {\r\n    case Filter.TAGNAME:\r\n      return (\r\n        element.nodeType === RNode.ELEMENT_NODE && (element as RElement).tagName === filter.name\r\n      );\r\n    case Filter.CLASS:\r\n      return (\r\n        element.nodeType === RNode.ELEMENT_NODE &&\r\n          (element as RElement).classList.contains(filter.name)\r\n      );\r\n    case Filter.ID:\r\n      return element.nodeType === RNode.ELEMENT_NODE && (element as RElement).id === filter.name;\r\n    case Filter.ATTRIBUTE: {\r\n      if (element.nodeType === RNode.ELEMENT_NODE) {\r\n        const val = (element as RElement).getAttribute(filter.attribKey);\r\n        switch (filter.attribOp) {\r\n        case Op.ANY:\r\n          return val !== undefined;\r\n        case Op.CONTAINS:\r\n          return typeof val === 'string' && val.indexOf(filter.attribValue) >= 0;\r\n        case Op.EQUAL:\r\n          return val === filter.attribValue;\r\n        case Op.START:\r\n          return typeof val === 'string' && val.indexOf(filter.attribValue) === 0;\r\n        case Op.END:\r\n          return (\r\n            typeof val === 'string' &&\r\n                val.length >= filter.attribValue.length &&\r\n                val.substr(-filter.attribValue.length) === filter.attribValue\r\n          );\r\n        default:\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    case Filter.PSEUDO_CLASS: {\r\n      switch (filter.name) {\r\n      case 'hover':\r\n        return element._isHover();\r\n      case 'active':\r\n        return element._isActive();\r\n      case 'disabled':\r\n        return false;\r\n      case 'empty':\r\n        return element.childNodes.length === 0;\r\n      case 'enabled':\r\n        return true;\r\n      case 'first-child':\r\n        return !element.previousSibling;\r\n      case 'last-child':\r\n        return !element.nextSibling;\r\n      case 'only-child':\r\n        return !element.previousSibling && !element.nextSibling;\r\n      case 'focus':\r\n        return element.gui.getFocus() === element;\r\n      case 'focus-within':\r\n        return !!element.gui.getFocus()?._isSucceedingOf(element);\r\n      default:\r\n        return false;\r\n      }\r\n    }\r\n    case Filter.NONE:\r\n      return true;\r\n    default:\r\n      return false;\r\n    }\r\n  }\r\n  /** @internal */\r\n  private _walkWithFilter(\r\n    filter: ListIterator<FilterInfo>,\r\n    last: RNode,\r\n    targets: Set<RNode>,\r\n    allowInternal: boolean,\r\n    elementSet?: Set<RNode>,\r\n    pseudoElementCallback?: IPseudoElementCallback,\r\n  ) {\r\n    const prevIt = filter.getPrev();\r\n    const lastFilter = prevIt.valid() ? prevIt.data : null;\r\n    switch (filter.data.type) {\r\n    case Filter.NONE:\r\n    case Filter.TAGNAME:\r\n    case Filter.CLASS:\r\n    case Filter.ID:\r\n    case Filter.PSEUDO_CLASS:\r\n    case Filter.ATTRIBUTE: {\r\n      if (lastFilter === null || lastFilter.type !== Filter.COMBINE) {\r\n        if (this._check(filter.data, last)) {\r\n          targets.add(last);\r\n        }\r\n      } else if (lastFilter) {\r\n        switch (lastFilter.combineType) {\r\n        case Combine.CHILD: {\r\n          last._getChildren().forEach((child) => {\r\n            if (\r\n              child.nodeType === RNode.ELEMENT_NODE &&\r\n                  elementSet.has(child) &&\r\n                  this._check(filter.data, child as RElement)\r\n            ) {\r\n              targets.add(child as RElement);\r\n            }\r\n          });\r\n          break;\r\n        }\r\n        case Combine.DESCEND: {\r\n          last._getChildren().forEach((child) => {\r\n            if (child.nodeType === RNode.ELEMENT_NODE) {\r\n              this._traverseElement(child as RElement, allowInternal, (el) => {\r\n                if (elementSet.has(el) && this._check(filter.data, el)) {\r\n                  targets.add(el);\r\n                }\r\n              });\r\n            }\r\n          });\r\n          break;\r\n        }\r\n        case Combine.SIBLING: {\r\n          let next = last.nextSibling;\r\n          while (next) {\r\n            if (\r\n              next.nodeType === RNode.ELEMENT_NODE &&\r\n                  elementSet.has(next) &&\r\n                  this._check(filter.data, next as RElement)\r\n            ) {\r\n              targets.add(next as RElement);\r\n            }\r\n            next = next.nextSibling;\r\n          }\r\n          break;\r\n        }\r\n        case Combine.ADJACENT: {\r\n          const next = last.nextSibling;\r\n          if (\r\n            next &&\r\n                next.nodeType === RNode.ELEMENT_NODE &&\r\n                elementSet.has(next) &&\r\n                this._check(filter.data, next as RElement)\r\n          ) {\r\n            targets.add(next as RElement);\r\n          }\r\n          break;\r\n        }\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case Filter.PSEUDO_ELEMENT: {\r\n      if (\r\n        pseudoElementCallback &&\r\n          lastFilter &&\r\n          lastFilter.type !== Filter.COMBINE &&\r\n          !filter.getNext().valid()\r\n      ) {\r\n        pseudoElementCallback(last, filter.data.name);\r\n      }\r\n      break;\r\n    }\r\n    }\r\n  }\r\n}\r\n\r\nexport class RSelector {\r\n  /** @internal */\r\n  protected _rules: Rule[];\r\n  constructor(s: string) {\r\n    this._rules = s ? this._createRules(s) : [];\r\n    if (this._rules.some((rule) => !this._validateRule(rule))) {\r\n      this._rules = [];\r\n    }\r\n  }\r\n  resolve(root: RNode, excludeRoot: boolean, allowInternal): RNode[] {\r\n    if (this._rules.length === 0) {\r\n      return [];\r\n    }\r\n    const matched: Set<RNode> = new Set();\r\n    this._rules.forEach((rule) => {\r\n      rule.resolve([root], false, allowInternal);\r\n      rule.targets.forEach((t) => {\r\n        matched.add(t);\r\n      });\r\n    });\r\n    if (excludeRoot) {\r\n      matched.delete(root);\r\n    }\r\n    return Array.from(matched);\r\n  }\r\n  multiResolve(roots: RNode[], allowInternal): RNode[] {\r\n    if (this._rules.length === 0) {\r\n      return [];\r\n    }\r\n    const matched: Set<RNode> = new Set();\r\n    this._rules.forEach((rule) => {\r\n      rule.resolve(roots, true, allowInternal);\r\n      rule.targets.forEach((t) => {\r\n        matched.add(t);\r\n      });\r\n    });\r\n    return Array.from(matched);\r\n  }\r\n  rules(): Rule[] {\r\n    return this._rules;\r\n  }\r\n  /** @internal */\r\n  private _validateRule(rule: Rule): boolean {\r\n    for (const it = rule.filters.begin(); it.valid(); it.next()) {\r\n      const prev = it.getPrev();\r\n      if (it.data.type === Filter.COMBINE && prev.valid() && prev.data.type === Filter.COMBINE) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /** @internal */\r\n  private _createRules(s: string): Rule[] {\r\n    return s\r\n      .trim()\r\n      .split(',')\r\n      .map((val) => val.trim())\r\n      .filter((val) => val !== '')\r\n      .map((val) => this._createRule(val))\r\n      .filter((val) => !!val)\r\n      .sort((a, b) => a.specificity - b.specificity);\r\n  }\r\n  /** @internal */\r\n  private _createRule(s: string): Rule {\r\n    const rule = new Rule();\r\n    let numIds = 0;\r\n    let numClasses = 0;\r\n    let numTypes = 0;\r\n    for (;;) {\r\n      const filter = this._createFilter(s);\r\n      if (filter === null) {\r\n        return null;\r\n      } else if (filter[0] === null) {\r\n        break;\r\n      } else {\r\n        rule.filters.append(filter[0]);\r\n        s = filter[1];\r\n        numIds += filter[0].numIds;\r\n        numClasses += filter[0].numClasses;\r\n        numTypes += filter[0].numTypes;\r\n      }\r\n    }\r\n    const base = 100;\r\n    rule.specificity = numIds * base * base + numClasses * base + numTypes;\r\n    return rule;\r\n  }\r\n  /** @internal */\r\n  private _createFilter(s: string): [FilterInfo, string] {\r\n    if (rWS.exec(s)) {\r\n      return [null, ''];\r\n    }\r\n    const info = {numIds: 0, numClasses: 0, numTypes: 0} as FilterInfo;\r\n    let combine = rCombine.exec(s);\r\n    if (combine && combine[0] === '') {\r\n      combine = null;\r\n    }\r\n    if (!combine) {\r\n      info.combineType = Combine.NONE;\r\n      s = s.trim();\r\n      switch (s[0]) {\r\n      case '*': {\r\n        info.type = Filter.NONE;\r\n        s = s.substr(1);\r\n        break;\r\n      }\r\n      case '.': {\r\n        info.numClasses++;\r\n        info.type = Filter.CLASS;\r\n        s = s.substr(1);\r\n        const match = rIdentifier.exec(s);\r\n        if (!match) {\r\n          return null;\r\n        }\r\n        info.name = match[1];\r\n        s = s.substr(match[0].length);\r\n        break;\r\n      }\r\n      case '#': {\r\n        info.numIds++;\r\n        info.type = Filter.ID;\r\n        s = s.substr(1);\r\n        const match = rIdentifier.exec(s);\r\n        if (!match) {\r\n          return null;\r\n        }\r\n        info.name = match[1];\r\n        s = s.substr(match[0].length);\r\n        break;\r\n      }\r\n      case ':': {\r\n        info.numClasses++;\r\n        if (s[1] !== ':') {\r\n          info.type = Filter.PSEUDO_CLASS;\r\n          s = s.substr(1);\r\n          const match = rIdentifier.exec(s);\r\n          if (!match) {\r\n            return null;\r\n          }\r\n          info.name = match[1];\r\n          s = s.substr(match[0].length);\r\n        } else {\r\n          info.type = Filter.PSEUDO_ELEMENT;\r\n          s = s.substr(2);\r\n          const match = rIdentifier.exec(s);\r\n          if (!match) {\r\n            return null;\r\n          }\r\n          info.name = match[1];\r\n          s = s.substr(match[0].length);\r\n        }\r\n        break;\r\n      }\r\n      case '[': {\r\n        info.numClasses++;\r\n        info.type = Filter.ATTRIBUTE;\r\n        s = s.substr(1);\r\n        const matchKey = rIdentifier.exec(s);\r\n        if (!matchKey) {\r\n          return null;\r\n        }\r\n        info.attribKey = matchKey[1];\r\n        s = s.substr(matchKey[0].length);\r\n        const matchOp = rOp.exec(s);\r\n        if (!matchOp) {\r\n          return null;\r\n        }\r\n        switch (matchOp[1]) {\r\n        case '=':\r\n          info.attribOp = Op.EQUAL;\r\n          break;\r\n        case '~=':\r\n        case '*=':\r\n          info.attribOp = Op.CONTAINS;\r\n          break;\r\n        case '|=':\r\n        case '^=':\r\n          info.attribOp = Op.START;\r\n          break;\r\n        case '$=':\r\n          info.attribOp = Op.END;\r\n          break;\r\n        default:\r\n          info.attribOp = Op.ANY;\r\n          break;\r\n        }\r\n        s = s.substr(matchOp[0].length);\r\n        if (info.attribOp !== Op.ANY) {\r\n          const matchValue = (s[0] === \"'\" || s[0] === '\"' ? rLiteral : rIdentifier).exec(s);\r\n          if (!matchValue) {\r\n            return null;\r\n          }\r\n          info.attribValue = matchValue[1] || matchValue[2];\r\n          s = s.substr(matchValue[0].length);\r\n        }\r\n        const matchCloseBracket = rCloseBracket.exec(s);\r\n        if (!matchCloseBracket) {\r\n          return null;\r\n        }\r\n        s = s.substr(matchCloseBracket[0].length);\r\n        break;\r\n      }\r\n      default: {\r\n        info.numTypes++;\r\n        info.type = Filter.TAGNAME;\r\n        const match = rIdentifier.exec(s);\r\n        if (!match) {\r\n          return null;\r\n        }\r\n        info.name = match[1];\r\n        s = s.substr(match[0].length);\r\n        break;\r\n      }\r\n      }\r\n    } else {\r\n      s = s.substr(combine[0].length);\r\n      info.type = Filter.COMBINE;\r\n      if (combine[1] === '') {\r\n        info.combineType = Combine.DESCEND;\r\n      } else if (combine[1] === '>') {\r\n        info.combineType = Combine.CHILD;\r\n      } else if (combine[1] === '~') {\r\n        info.combineType = Combine.SIBLING;\r\n      } /* if (combine[1] === '+') */ else {\r\n        info.combineType = Combine.ADJACENT;\r\n      }\r\n    }\r\n    return [info, s];\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}