{"version":3,"file":"text.js","sources":["../../../../libs/dom/src/components/text.ts"],"sourcesContent":["import { REvent } from '@sophon/base';\r\nimport { RRectPrimitive } from '../primitive';\r\nimport { RNode } from '../node';\r\nimport { RTextEvent, RAttributeChangeEvent } from '../events';\r\nimport type { GUI } from '../gui';\r\nimport type { IStyleSheet } from '../style';\r\nimport type { UIRect } from '../layout';\r\n\r\nexport class RText extends RNode {\r\n  /** @internal */\r\n  private _actualContent: string;\r\n  /** @internal */\r\n  private _textContent: string;\r\n  /** @internal */\r\n  private _autoWrap: boolean;\r\n  /** @internal */\r\n  private _charMargin: number;\r\n  /** @internal */\r\n  private _lineHeight: number;\r\n  /** @internal */\r\n  private _inlineStyle: string;\r\n  constructor(uiscene: GUI) {\r\n    super(uiscene);\r\n    this._actualContent = '';\r\n    this._textContent = '';\r\n    this._autoWrap = false;\r\n    this._charMargin = 0;\r\n    this._lineHeight = -1;\r\n    this._inlineStyle = '';\r\n    this.addDefaultEventListener(RAttributeChangeEvent.NAME, function (this: RText, evt: REvent) {\r\n      const e: RAttributeChangeEvent = evt as RAttributeChangeEvent;\r\n      if (e.name === 'autoWrap' || e.name === 'charMargin' || e.name === 'lineHeight') {\r\n        this._invalidateLayout();\r\n        this._invalidateContent();\r\n      }\r\n    });\r\n  }\r\n  get nodeType(): number {\r\n    return RNode.TEXT_NODE;\r\n  }\r\n  cloneNode(): RNode {\r\n    const clone = new RText(this._uiscene);\r\n    clone.textContent = this.textContent;\r\n    return clone;\r\n  }\r\n  /** @internal */\r\n  get actualContent(): string {\r\n    return this._actualContent;\r\n  }\r\n  /** @internal */\r\n  set actualContent(text: string) {\r\n    text = String(text) || '';\r\n    if (this._actualContent !== text) {\r\n      this._actualContent = text;\r\n      this._invalidateLayout();\r\n      this._invalidateContent();\r\n      this.dispatchEvent(new RTextEvent(RTextEvent.NAME_CONTENT_CHANGE));\r\n    }\r\n  }\r\n  get textContent(): string {\r\n    return this._textContent;\r\n  }\r\n  set textContent(text: string) {\r\n    text = String(text) || '';\r\n    if (this._textContent !== text) {\r\n      this._textContent = text;\r\n      this._findFirstTextNode()._styleChange();\r\n      this._parent?._notifyTextContentEvents();\r\n    }\r\n  }\r\n  get autoWrap(): boolean {\r\n    return this._autoWrap;\r\n  }\r\n  set autoWrap(val: boolean) {\r\n    this._autoWrap = !!val;\r\n  }\r\n  get charMargin(): number {\r\n    return this._charMargin;\r\n  }\r\n  set charMargin(val: number) {\r\n    this._charMargin = Number(val);\r\n  }\r\n  get lineHeight(): number {\r\n    return this._lineHeight;\r\n  }\r\n  set lineHeight(val: number) {\r\n    this._lineHeight = val <= 0 ? -1 : val;\r\n  }\r\n  /** @internal */\r\n  _updateStyle(val: string) {\r\n    super._updateStyle(val);\r\n    this._inlineStyle = val;\r\n  }\r\n  /** @internal */\r\n  _applyInlineStyles() {\r\n    this.style.applyStyles(this._inlineStyle, true);\r\n  }\r\n  /** @internal */\r\n  _getDefaultStyleSheet(): IStyleSheet {\r\n    const style = super._getDefaultStyleSheet();\r\n    style.backgroundColor = 'transparent';\r\n    style.flex = '0 0 auto';\r\n    style.display = this._findFirstTextNode() === this ? 'flex' : 'none';\r\n    return style;\r\n  }\r\n  /** @internal */\r\n  measureTextLocation(px: number, py: number): { line: number; pos: number } {\r\n    const lines = this._splitContent();\r\n    const font = this._getCachedFont();\r\n    const lineHeight =\r\n      (this.lineHeight >= 0 ? this.lineHeight : -this.lineHeight * font.maxHeight) | 0;\r\n    const charMargin = this.charMargin;\r\n    const l = Math.floor((py - this.style.getPaddingTop()) / lineHeight);\r\n    if (l < 0 || l >= lines.length) {\r\n      return null;\r\n    }\r\n    let t = this.style.getPaddingLeft();\r\n    let c = 0;\r\n    for (let i = 0; i < l; i++) {\r\n      c += lines[i].length;\r\n    }\r\n    for (const ch of lines[l]) {\r\n      const width = this._uiscene._getCharWidth(ch, font);\r\n      if (px <= t + (width >> 1)) {\r\n        break;\r\n      }\r\n      t += width + charMargin;\r\n      c++;\r\n    }\r\n    return { line: l, pos: c };\r\n  }\r\n  /** @internal */\r\n  _measureContentSize(rc: UIRect): UIRect {\r\n    const lines = this._splitContent();\r\n    const font = this._getCachedFont();\r\n    const lineHeight =\r\n      (this.lineHeight >= 0 ? this.lineHeight : -this.lineHeight * font.maxHeight) | 0;\r\n    const charMargin = this.charMargin;\r\n    const autoWrap = this.autoWrap;\r\n    if (rc.width === 0 && rc.height === 0) {\r\n      for (const line of lines) {\r\n        rc.width = Math.max(rc.width, this._uiscene._measureStringWidth(line, charMargin, font));\r\n        rc.height += lineHeight;\r\n      }\r\n    } else if (rc.height === 0) {\r\n      for (const line of lines) {\r\n        let start = 0;\r\n        if (line.length === 0) {\r\n          rc.height += lineHeight;\r\n        } else {\r\n          while (start < line.length) {\r\n            start += autoWrap\r\n              ? Math.max(\r\n                1,\r\n                this._uiscene._clipStringToWidth(line, rc.width, charMargin, start, font),\r\n              )\r\n              : line.length;\r\n            rc.height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n    } else if (rc.width === 0) {\r\n      for (const line of lines) {\r\n        rc.width = Math.max(rc.width, this._uiscene._measureStringWidth(line, charMargin, font));\r\n      }\r\n    }\r\n    return rc;\r\n  }\r\n  /** @internal */\r\n  _isText(): this is RText {\r\n    return true;\r\n  }\r\n  /** @internal */\r\n  _normalize(): RNode {\r\n    console.assert(\r\n      !this.previousSibling || !this.previousSibling._isText(),\r\n      'Failed to execute _normalize: text node must be the first');\r\n    this._textContent = this._actualContent;\r\n    const textSiblings: RNode[] = [];\r\n    let next = this.nextSibling;\r\n    while (next && next._isText()) {\r\n      textSiblings.push(next);\r\n      next = next.nextSibling;\r\n    }\r\n    for (const sibling of textSiblings) {\r\n      this.parentNode.removeChild(sibling);\r\n    }\r\n    if (!this._textContent) {\r\n      this._remove();\r\n    }\r\n    return next;\r\n  }\r\n  /** @internal */\r\n  _remove(): RNode {\r\n    const parent = this._parent;\r\n    if (this._isText()) {\r\n      const first = this._findFirstTextNode();\r\n      const next = this.nextSibling;\r\n      const nextTextNode: RText = next && next._isText() ? (next as RText) : null;\r\n      super._remove();\r\n      if (first !== this) {\r\n        first._styleChange();\r\n      } else if (nextTextNode) {\r\n        nextTextNode._styleChange();\r\n      }\r\n    } else {\r\n      super._remove();\r\n    }\r\n    if (parent) {\r\n      parent._notifyTextContentEvents();\r\n    }\r\n    return this;\r\n  }\r\n  /** @internal */\r\n  _init(): void { }\r\n  /** @internal */\r\n  _reparent(p: RNode, at?: RNode): RNode {\r\n    if (this._parent !== p) {\r\n      super._reparent(p, at);\r\n      if (this._isText() && this._getPseudo() === RNode.PSEUDO_NONE) {\r\n        const first = this._findFirstTextNode();\r\n        first._styleChange();\r\n        if (first !== this) {\r\n          this.style.display = 'none';\r\n        }\r\n        const next = this.nextSibling;\r\n        if (next && next._isText() && next._getPseudo() === RNode.PSEUDO_NONE) {\r\n          next.style.display = 'none';\r\n        }\r\n      }\r\n      if (this._parent) {\r\n        this._parent._notifyTextContentEvents();\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  /** @internal */\r\n  protected _buildVertexData() {\r\n    super._buildVertexData();\r\n    const clipper = this._getClipper(true);\r\n    if (clipper) {\r\n      const lines = this._splitContent();\r\n      const font = this._getCachedFont();\r\n      const lineHeight =\r\n        (this.lineHeight >= 0 ? this.lineHeight : -this.lineHeight * font.maxHeight) | 0;\r\n      const autoWrap = this.autoWrap;\r\n      const charMargin = this.charMargin;\r\n      const fontColor = this._getCachedFontColor();\r\n      const uvMin = { x: 0, y: 0 };\r\n      const uvMax = { x: 0, y: 0 };\r\n      let y = this.style.getPaddingTop();\r\n      for (const line of lines) {\r\n        let start = 0;\r\n        if (line.length === 0) {\r\n          y += lineHeight;\r\n        } else {\r\n          while (start < line.length) {\r\n            let x = this.style.getPaddingLeft();\r\n            const n = autoWrap\r\n              ? Math.max(\r\n                1,\r\n                this._uiscene._clipStringToWidth(\r\n                  line,\r\n                  this._layout.clientRect.width,\r\n                  charMargin,\r\n                  start,\r\n                  font,\r\n                ),\r\n              )\r\n              : line.length;\r\n            for (let i = start; i < start + n; i++) {\r\n              const glyph = this._uiscene._getGlyphInfo(line[i], font, fontColor);\r\n              if (glyph) {\r\n                const tex = this._uiscene._getGlyphTexture(glyph.atlasIndex);\r\n                uvMin.x = glyph.uMin;\r\n                uvMin.y = glyph.vMin;\r\n                uvMax.x = glyph.uMax;\r\n                uvMax.y = glyph.vMax;\r\n                this._batchList.addPrimitive(\r\n                  new RRectPrimitive(\r\n                    x,\r\n                    y,\r\n                    glyph.width,\r\n                    glyph.height,\r\n                    uvMin.x,\r\n                    uvMin.y,\r\n                    uvMax.x,\r\n                    uvMax.y,\r\n                  ),\r\n                  clipper,\r\n                  tex,\r\n                  fontColor,\r\n                );\r\n                x += glyph.width + charMargin;\r\n              }\r\n            }\r\n            start += n;\r\n            y += lineHeight;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /** @internal */\r\n  private _decode(str: string): string {\r\n    const tmp = str.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\s+/g, ' ');\r\n    const div = document.createElement('div');\r\n    div.innerHTML = tmp;\r\n    return div.innerText;\r\n  }\r\n  /** @internal */\r\n  private _splitContent(): string[] {\r\n    const content = this.actualContent || '';\r\n    const tab2space = Array.from({ length: 4 })\r\n      .map(() => ' ')\r\n      .join('');\r\n    return content.replace(/\\t/g, tab2space).split('\\n');\r\n  }\r\n  /** @internal */\r\n  private _findFirstTextNode(): RText {\r\n    let el: RNode = this;\r\n    while (\r\n      el.previousSibling?._isText() &&\r\n      el.previousSibling?._getPseudo() === RNode.PSEUDO_NONE\r\n    ) {\r\n      el = el.previousSibling;\r\n    }\r\n    return el as RText;\r\n  }\r\n  /** @internal */\r\n  private _styleChange() {\r\n    console.assert(\r\n      !this.previousSibling || !this.previousSibling._isText(),\r\n      'Failed to execute _updateStyle: text node must be the first');\r\n    this.style.display = 'flex';\r\n    let content = this.textContent;\r\n    for (\r\n      let next = this.nextSibling;\r\n      next && next._isText() && next._getPseudo() === RNode.PSEUDO_NONE;\r\n      next = next.nextSibling\r\n    ) {\r\n      content += next.textContent;\r\n    }\r\n    this.actualContent = content;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}